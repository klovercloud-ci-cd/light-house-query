definitions:
  common.ResponseDTO:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  intstr.IntOrString:
    properties:
      intVal:
        type: integer
      strVal:
        type: string
      type:
        type: integer
    type: object
  v1.AWSElasticBlockStoreVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      partition:
        description: |-
          The partition in the volume that you want to mount.
          If omitted, the default is to mount by volume name.
          Examples: For volume /dev/sda1, you specify the partition as "1".
          Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
          +optional
        type: integer
      readOnly:
        description: |-
          Specify "true" to force and set the ReadOnly property in VolumeMounts to "true".
          If omitted, the default is "false".
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          +optional
        type: boolean
      volumeID:
        description: |-
          Unique ID of the persistent disk resource in AWS (Amazon EBS volume).
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
        type: string
    type: object
  v1.Affinity:
    properties:
      nodeAffinity:
        $ref: '#/definitions/v1.NodeAffinity'
        description: |-
          Describes node affinity scheduling rules for the pod.
          +optional
      podAffinity:
        $ref: '#/definitions/v1.PodAffinity'
        description: |-
          Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
          +optional
      podAntiAffinity:
        $ref: '#/definitions/v1.PodAntiAffinity'
        description: |-
          Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
          +optional
    type: object
  v1.AggregationRule:
    properties:
      clusterRoleSelectors:
        description: |-
          ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules.
          If any of the selectors match, then the ClusterRole's permissions will be added
          +optional
        items:
          $ref: '#/definitions/v1.LabelSelector'
        type: array
    type: object
  v1.AzureDiskVolumeSource:
    properties:
      cachingMode:
        description: |-
          Host Caching mode: None, Read Only, Read Write.
          +optional
        type: string
      diskName:
        description: The Name of the data disk in the blob storage
        type: string
      diskURI:
        description: The URI the data disk in the blob storage
        type: string
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      kind:
        description: 'Expected values Shared: multiple blob disks per storage account  Dedicated:
          single blob disk per storage account  Managed: azure managed data disk (only
          in managed availability set). defaults to shared'
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
    type: object
  v1.AzureFilePersistentVolumeSource:
    properties:
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretName:
        description: the name of secret that contains Azure Storage Account Name and
          Key
        type: string
      secretNamespace:
        description: |-
          the namespace of the secret that contains Azure Storage Account Name and Key
          default is the same as the Pod
          +optional
        type: string
      shareName:
        description: Share Name
        type: string
    type: object
  v1.AzureFileVolumeSource:
    properties:
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretName:
        description: the name of secret that contains Azure Storage Account Name and
          Key
        type: string
      shareName:
        description: Share Name
        type: string
    type: object
  v1.CSIPersistentVolumeSource:
    properties:
      controllerPublishSecretRef:
        $ref: '#/definitions/v1.SecretReference'
        description: |-
          ControllerPublishSecretRef is a reference to the secret object containing
          sensitive information to pass to the CSI driver to complete the CSI
          ControllerPublishVolume and ControllerUnpublishVolume calls.
          This field is optional, and  may be empty if no secret is required. If the
          secret object contains more than one secret, all secrets are passed.
          +optional
      driver:
        description: |-
          Driver is the name of the driver to use for this volume.
          Required.
        type: string
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs".
          +optional
        type: string
      nodePublishSecretRef:
        $ref: '#/definitions/v1.SecretReference'
        description: |-
          NodePublishSecretRef is a reference to the secret object containing
          sensitive information to pass to the CSI driver to complete the CSI
          NodePublishVolume and NodeUnpublishVolume calls.
          This field is optional, and  may be empty if no secret is required. If the
          secret object contains more than one secret, all secrets are passed.
          +optional
      nodeStageSecretRef:
        $ref: '#/definitions/v1.SecretReference'
        description: |-
          NodeStageSecretRef is a reference to the secret object containing sensitive
          information to pass to the CSI driver to complete the CSI NodeStageVolume
          and NodeStageVolume and NodeUnstageVolume calls.
          This field is optional, and  may be empty if no secret is required. If the
          secret object contains more than one secret, all secrets are passed.
          +optional
      readOnly:
        description: |-
          Optional: The value to pass to ControllerPublishVolumeRequest.
          Defaults to false (read/write).
          +optional
        type: boolean
      volumeAttributes:
        additionalProperties:
          type: string
        description: |-
          Attributes of the volume to publish.
          +optional
        type: object
      volumeHandle:
        description: |-
          VolumeHandle is the unique volume name returned by the CSI volume
          pluginâ€™s CreateVolume to refer to the volume on all subsequent calls.
          Required.
        type: string
    type: object
  v1.Capabilities:
    properties:
      add:
        description: |-
          Added capabilities
          +optional
        items:
          type: string
        type: array
      drop:
        description: |-
          Removed capabilities
          +optional
        items:
          type: string
        type: array
    type: object
  v1.CephFSPersistentVolumeSource:
    properties:
      monitors:
        description: |-
          Required: Monitors is a collection of Ceph monitors
          More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
        items:
          type: string
        type: array
      path:
        description: |-
          Optional: Used as the mounted root, rather than the full Ceph tree, default is /
          +optional
        type: string
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: boolean
      secretFile:
        description: |-
          Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
          More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: string
      secretRef:
        $ref: '#/definitions/v1.SecretReference'
        description: |-
          Optional: SecretRef is reference to the authentication secret for User, default is empty.
          More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          +optional
      user:
        description: |-
          Optional: User is the rados user name, default is admin
          More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: string
    type: object
  v1.CephFSVolumeSource:
    properties:
      monitors:
        description: |-
          Required: Monitors is a collection of Ceph monitors
          More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
        items:
          type: string
        type: array
      path:
        description: |-
          Optional: Used as the mounted root, rather than the full Ceph tree, default is /
          +optional
        type: string
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: boolean
      secretFile:
        description: |-
          Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
          More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: string
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          Optional: SecretRef is reference to the authentication secret for User, default is empty.
          More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          +optional
      user:
        description: |-
          Optional: User is the rados user name, default is admin
          More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: string
    type: object
  v1.Certificate:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sCertificate'
    type: object
  v1.CertificateCondition:
    properties:
      lastTransitionTime:
        description: |-
          LastTransitionTime is the timestamp corresponding to the last status
          change of this condition.
          +optional
        type: string
      message:
        description: |-
          Message is a human readable description of the details of the last
          transition, complementing reason.
          +optional
        type: string
      observedGeneration:
        description: |-
          If set, this represents the .metadata.generation that the condition was
          set based upon.
          For instance, if .metadata.generation is currently 12, but the
          .status.condition[x].observedGeneration is 9, the condition is out of date
          with respect to the current state of the Certificate.
          +optional
        type: integer
      reason:
        description: |-
          Reason is a brief machine readable explanation for the condition's last
          transition.
          +optional
        type: string
      status:
        description: Status of the condition, one of (`True`, `False`, `Unknown`).
        type: string
      type:
        description: Type of the condition, known values are (`Ready`, `Issuing`).
        type: string
    type: object
  v1.CertificateKeystores:
    properties:
      jks:
        $ref: '#/definitions/v1.JKSKeystore'
        description: |-
          JKS configures options for storing a JKS keystore in the
          `spec.secretName` Secret resource.
          +optional
      pkcs12:
        $ref: '#/definitions/v1.PKCS12Keystore'
        description: |-
          PKCS12 configures options for storing a PKCS12 keystore in the
          `spec.secretName` Secret resource.
          +optional
    type: object
  v1.CertificateObjectReference:
    properties:
      group:
        description: |-
          Group of the resource being referred to.
          +optional
        type: string
      kind:
        description: |-
          Kind of the resource being referred to.
          +optional
        type: string
      name:
        description: Name of the resource being referred to.
        type: string
    type: object
  v1.CertificatePrivateKey:
    properties:
      algorithm:
        description: |-
          Algorithm is the private key algorithm of the corresponding private key
          for this certificate. If provided, allowed values are either `RSA`,`Ed25519` or `ECDSA`
          If `algorithm` is specified and `size` is not provided,
          key size of 256 will be used for `ECDSA` key algorithm and
          key size of 2048 will be used for `RSA` key algorithm.
          key size is ignored when using the `Ed25519` key algorithm.
          +optional
        type: string
      encoding:
        description: |-
          The private key cryptography standards (PKCS) encoding for this
          certificate's private key to be encoded in.
          If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1
          and PKCS#8, respectively.
          Defaults to `PKCS1` if not specified.
          +optional
        type: string
      rotationPolicy:
        description: |-
          RotationPolicy controls how private keys should be regenerated when a
          re-issuance is being processed.
          If set to Never, a private key will only be generated if one does not
          already exist in the target `spec.secretName`. If one does exists but it
          does not have the correct algorithm or size, a warning will be raised
          to await user intervention.
          If set to Always, a private key matching the specified requirements
          will be generated whenever a re-issuance occurs.
          Default is 'Never' for backward compatibility.
          +optional
        type: string
      size:
        description: |-
          Size is the key bit size of the corresponding private key for this certificate.
          If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`,
          and will default to `2048` if not specified.
          If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`,
          and will default to `256` if not specified.
          If `algorithm` is set to `Ed25519`, Size is ignored.
          No other values are allowed.
          +optional
        type: integer
    type: object
  v1.CertificateSecretKeySelector:
    properties:
      key:
        description: |-
          The key of the entry in the Secret resource's `data` field to be used.
          Some instances of this field may be defaulted, in others it may be
          required.
          +optional
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
    type: object
  v1.CertificateSecretTemplate:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is a key value map to be copied to the target Kubernetes Secret.
          +optional
        type: object
      labels:
        additionalProperties:
          type: string
        description: |-
          Labels is a key value map to be copied to the target Kubernetes Secret.
          +optional
        type: object
    type: object
  v1.CertificateSpec:
    properties:
      commonName:
        description: |-
          CommonName is a common name to be used on the Certificate.
          The CommonName should have a length of 64 characters or fewer to avoid
          generating invalid CSRs.
          This value is ignored by TLS clients when any subject alt name is set.
          This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4
          +optional
        type: string
      dnsNames:
        description: |-
          DNSNames is a list of DNS subjectAltNames to be set on the Certificate.
          +optional
        items:
          type: string
        type: array
      duration:
        $ref: '#/definitions/v1.Duration'
        description: |-
          The requested 'duration' (i.e. lifetime) of the Certificate. This option
          may be ignored/overridden by some issuer types. If unset this defaults to
          90 days. Certificate will be renewed either 2/3 through its duration or
          `renewBefore` period before its expiry, whichever is later. Minimum
          accepted duration is 1 hour. Value must be in units accepted by Go
          time.ParseDuration https://golang.org/pkg/time/#ParseDuration
          +optional
      emailAddresses:
        description: |-
          EmailAddresses is a list of email subjectAltNames to be set on the Certificate.
          +optional
        items:
          type: string
        type: array
      encodeUsagesInRequest:
        description: |-
          EncodeUsagesInRequest controls whether key usages should be present
          in the CertificateRequest
          +optional
        type: boolean
      ipAddresses:
        description: |-
          IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.
          +optional
        items:
          type: string
        type: array
      isCA:
        description: |-
          IsCA will mark this Certificate as valid for certificate signing.
          This will automatically add the `cert sign` usage to the list of `usages`.
          +optional
        type: boolean
      issuerRef:
        $ref: '#/definitions/v1.CertificateObjectReference'
        description: |-
          IssuerRef is a reference to the issuer for this certificate.
          If the `kind` field is not set, or set to `Issuer`, an Issuer resource
          with the given name in the same namespace as the Certificate will be used.
          If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the
          provided name will be used.
          The `name` field in this stanza is required at all times.
      keystores:
        $ref: '#/definitions/v1.CertificateKeystores'
        description: |-
          Keystores configures additional keystore output formats stored in the
          `secretName` Secret resource.
          +optional
      privateKey:
        $ref: '#/definitions/v1.CertificatePrivateKey'
        description: |-
          Options to control private keys used for the Certificate.
          +optional
      renewBefore:
        $ref: '#/definitions/v1.Duration'
        description: |-
          How long before the currently issued certificate's expiry
          cert-manager should renew the certificate. The default is 2/3 of the
          issued certificate's duration. Minimum accepted value is 5 minutes.
          Value must be in units accepted by Go time.ParseDuration
          https://golang.org/pkg/time/#ParseDuration
          +optional
      revisionHistoryLimit:
        description: |-
          revisionHistoryLimit is the maximum number of CertificateRequest revisions
          that are maintained in the Certificate's history. Each revision represents
          a single `CertificateRequest` created by this Certificate, either when it
          was created, renewed, or Spec was changed. Revisions will be removed by
          oldest first if the number of revisions exceeds this number. If set,
          revisionHistoryLimit must be a value of `1` or greater. If unset (`nil`),
          revisions will not be garbage collected. Default value is `nil`.
          +kubebuilder:validation:ExclusiveMaximum=false
          +optional
        type: integer
      secretName:
        description: |-
          SecretName is the name of the secret resource that will be automatically
          created and managed by this Certificate resource.
          It will be populated with a private key and certificate, signed by the
          denoted issuer.
        type: string
      secretTemplate:
        $ref: '#/definitions/v1.CertificateSecretTemplate'
        description: |-
          SecretTemplate defines annotations and labels to be propagated
          to the Kubernetes Secret when it is created or updated. Once created,
          labels and annotations are not yet removed from the Secret when they are
          removed from the template. See https://github.com/jetstack/cert-manager/issues/4292
          +optional
      subject:
        $ref: '#/definitions/v1.X509Subject'
        description: |-
          Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
          +optional
      uris:
        description: |-
          URIs is a list of URI subjectAltNames to be set on the Certificate.
          +optional
        items:
          type: string
        type: array
      usages:
        description: |-
          Usages is the set of x509 usages that are requested for the certificate.
          Defaults to `digital signature` and `key encipherment` if not specified.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.CertificateStatus:
    properties:
      conditions:
        description: |-
          List of status conditions to indicate the status of certificates.
          Known condition types are `Ready` and `Issuing`.
          +optional
        items:
          $ref: '#/definitions/v1.CertificateCondition'
        type: array
      lastFailureTime:
        description: |-
          LastFailureTime is the time as recorded by the Certificate controller
          of the most recent failure to complete a CertificateRequest for this
          Certificate resource.
          If set, cert-manager will not re-request another Certificate until
          1 hour has elapsed from this time.
          +optional
        type: string
      nextPrivateKeySecretName:
        description: |-
          The name of the Secret resource containing the private key to be used
          for the next certificate iteration.
          The keymanager controller will automatically set this field if the
          `Issuing` condition is set to `True`.
          It will automatically unset this field when the Issuing condition is
          not set or False.
          +optional
        type: string
      notAfter:
        description: |-
          The expiration time of the certificate stored in the secret named
          by this resource in `spec.secretName`.
          +optional
        type: string
      notBefore:
        description: |-
          The time after which the certificate stored in the secret named
          by this resource in spec.secretName is valid.
          +optional
        type: string
      renewalTime:
        description: |-
          RenewalTime is the time at which the certificate will be next
          renewed.
          If not set, no upcoming renewal is scheduled.
          +optional
        type: string
      revision:
        description: |-
          The current 'revision' of the certificate as issued.

          When a CertificateRequest resource is created, it will have the
          `cert-manager.io/certificate-revision` set to one greater than the
          current value of this field.

          Upon issuance, this field will be set to the value of the annotation
          on the CertificateRequest resource used to issue the certificate.

          Persisting the value on the CertificateRequest resource allows the
          certificates controller to know whether a request is part of an old
          issuance or if it is part of the ongoing revision's issuance by
          checking if the revision value in the annotation is greater than this
          field.
          +optional
        type: integer
    type: object
  v1.CinderPersistentVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
          +optional
        type: string
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.SecretReference'
        description: |-
          Optional: points to a secret object containing parameters used to connect
          to OpenStack.
          +optional
      volumeID:
        description: |-
          volume id used to identify the volume in cinder
          More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
        type: string
    type: object
  v1.CinderVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
          +optional
        type: string
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          Optional: points to a secret object containing parameters used to connect
          to OpenStack.
          +optional
      volumeID:
        description: |-
          volume id used to identify the volume in cinder
          More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
        type: string
    type: object
  v1.ClientIPConfig:
    properties:
      timeoutSeconds:
        description: |-
          timeoutSeconds specifies the seconds of ClientIP type session sticky time.
          The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
          Default value is 10800(for 3 hours).
          +optional
        type: integer
    type: object
  v1.ClusterRole:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sClusterRole'
    type: object
  v1.ClusterRoleBinding:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.k8sClusterRoleBinding'
    type: object
  v1.ConfigMap:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sConfigMap'
    type: object
  v1.ConfigMapEnvSource:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapKeySelector:
    properties:
      key:
        description: The key to select.
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap or it's key must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapProjection:
    properties:
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          ConfigMap will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the ConfigMap,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap or it's keys must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapVolumeSource:
    properties:
      defaultMode:
        description: |-
          Optional: mode bits to use on created files by default. Must be a
          value between 0 and 0777. Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          ConfigMap will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the ConfigMap,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap or it's keys must be defined
          +optional
        type: boolean
    type: object
  v1.Container:
    properties:
      args:
        description: |-
          Arguments to the entrypoint.
          The docker image's CMD is used if this is not provided.
          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
          cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax
          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
          regardless of whether the variable exists or not.
          Cannot be updated.
          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
          +optional
        items:
          type: string
        type: array
      command:
        description: |-
          Entrypoint array. Not executed within a shell.
          The docker image's ENTRYPOINT is used if this is not provided.
          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
          cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax
          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
          regardless of whether the variable exists or not.
          Cannot be updated.
          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
          +optional
        items:
          type: string
        type: array
      env:
        description: |-
          List of environment variables to set in the container.
          Cannot be updated.
          +optional
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.EnvVar'
        type: array
      envFrom:
        description: |-
          List of sources to populate environment variables in the container.
          The keys defined within a source must be a C_IDENTIFIER. All invalid keys
          will be reported as an event when the container is starting. When a key exists in multiple
          sources, the value associated with the last source will take precedence.
          Values defined by an Env with a duplicate key will take precedence.
          Cannot be updated.
          +optional
        items:
          $ref: '#/definitions/v1.EnvFromSource'
        type: array
      image:
        description: |-
          Docker image name.
          More info: https://kubernetes.io/docs/concepts/containers/images
          This field is optional to allow higher level config management to default or override
          container images in workload controllers like Deployments and StatefulSets.
          +optional
        type: string
      imagePullPolicy:
        description: |-
          Image pull policy.
          One of Always, Never, IfNotPresent.
          Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
          +optional
        type: string
      lifecycle:
        $ref: '#/definitions/v1.Lifecycle'
        description: |-
          Actions that the management system should take in response to container lifecycle events.
          Cannot be updated.
          +optional
      livenessProbe:
        $ref: '#/definitions/v1.Probe'
        description: |-
          Periodic probe of container liveness.
          Container will be restarted if the probe fails.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      name:
        description: |-
          Name of the container specified as a DNS_LABEL.
          Each container in a pod must have a unique name (DNS_LABEL).
          Cannot be updated.
        type: string
      ports:
        description: |-
          List of ports to expose from the container. Exposing a port here gives
          the system additional information about the network connections a
          container uses, but is primarily informational. Not specifying a port here
          DOES NOT prevent that port from being exposed. Any port which is
          listening on the default "0.0.0.0" address inside a container will be
          accessible from the network.
          Cannot be updated.
          +optional
          +patchMergeKey=containerPort
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.ContainerPort'
        type: array
      readinessProbe:
        $ref: '#/definitions/v1.Probe'
        description: |-
          Periodic probe of container service readiness.
          Container will be removed from service endpoints if the probe fails.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      resources:
        $ref: '#/definitions/v1.ResourceRequirements'
        description: |-
          Compute Resources required by this container.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
          +optional
      securityContext:
        $ref: '#/definitions/v1.SecurityContext'
        description: |-
          Security options the pod should run with.
          More info: https://kubernetes.io/docs/concepts/policy/security-context/
          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
          +optional
      stdin:
        description: |-
          Whether this container should allocate a buffer for stdin in the container runtime. If this
          is not set, reads from stdin in the container will always result in EOF.
          Default is false.
          +optional
        type: boolean
      stdinOnce:
        description: |-
          Whether the container runtime should close the stdin channel after it has been opened by
          a single attach. When stdin is true the stdin stream will remain open across multiple attach
          sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
          first client attaches to stdin, and then remains open and accepts data until the client disconnects,
          at which time stdin is closed and remains closed until the container is restarted. If this
          flag is false, a container processes that reads from stdin will never receive an EOF.
          Default is false
          +optional
        type: boolean
      terminationMessagePath:
        description: |-
          Optional: Path at which the file to which the container's termination message
          will be written is mounted into the container's filesystem.
          Message written is intended to be brief final status, such as an assertion failure message.
          Will be truncated by the node if greater than 4096 bytes. The total message length across
          all containers will be limited to 12kb.
          Defaults to /dev/termination-log.
          Cannot be updated.
          +optional
        type: string
      terminationMessagePolicy:
        description: |-
          Indicate how the termination message should be populated. File will use the contents of
          terminationMessagePath to populate the container status message on both success and failure.
          FallbackToLogsOnError will use the last chunk of container log output if the termination
          message file is empty and the container exited with an error.
          The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
          Defaults to File.
          Cannot be updated.
          +optional
        type: string
      tty:
        description: |-
          Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
          Default is false.
          +optional
        type: boolean
      volumeDevices:
        description: |-
          volumeDevices is the list of block devices to be used by the container.
          This is an alpha feature and may change in the future.
          +patchMergeKey=devicePath
          +patchStrategy=merge
          +optional
        items:
          $ref: '#/definitions/v1.VolumeDevice'
        type: array
      volumeMounts:
        description: |-
          Pod volumes to mount into the container's filesystem.
          Cannot be updated.
          +optional
          +patchMergeKey=mountPath
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.VolumeMount'
        type: array
      workingDir:
        description: |-
          Container's working directory.
          If not specified, the container runtime's default will be used, which
          might be configured in the container image.
          Cannot be updated.
          +optional
        type: string
    type: object
  v1.ContainerPort:
    properties:
      containerPort:
        description: |-
          Number of port to expose on the pod's IP address.
          This must be a valid port number, 0 < x < 65536.
        type: integer
      hostIP:
        description: |-
          What host IP to bind the external port to.
          +optional
        type: string
      hostPort:
        description: |-
          Number of port to expose on the host.
          If specified, this must be a valid port number, 0 < x < 65536.
          If HostNetwork is specified, this must match ContainerPort.
          Most containers do not need this.
          +optional
        type: integer
      name:
        description: |-
          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
          named port in a pod must have a unique name. Name for the port that can be
          referred to by services.
          +optional
        type: string
      protocol:
        description: |-
          Protocol for port. Must be UDP, TCP, or SCTP.
          Defaults to "TCP".
          +optional
        type: string
    type: object
  v1.ContainerState:
    properties:
      running:
        $ref: '#/definitions/v1.ContainerStateRunning'
        description: |-
          Details about a running container
          +optional
      terminated:
        $ref: '#/definitions/v1.ContainerStateTerminated'
        description: |-
          Details about a terminated container
          +optional
      waiting:
        $ref: '#/definitions/v1.ContainerStateWaiting'
        description: |-
          Details about a waiting container
          +optional
    type: object
  v1.ContainerStateRunning:
    properties:
      startedAt:
        description: |-
          Time at which the container was last (re-)started
          +optional
        type: string
    type: object
  v1.ContainerStateTerminated:
    properties:
      containerID:
        description: |-
          Container's ID in the format 'docker://<container_id>'
          +optional
        type: string
      exitCode:
        description: Exit status from the last termination of the container
        type: integer
      finishedAt:
        description: |-
          Time at which the container last terminated
          +optional
        type: string
      message:
        description: |-
          Message regarding the last termination of the container
          +optional
        type: string
      reason:
        description: |-
          (brief) reason from the last termination of the container
          +optional
        type: string
      signal:
        description: |-
          Signal from the last termination of the container
          +optional
        type: integer
      startedAt:
        description: |-
          Time at which previous execution of the container started
          +optional
        type: string
    type: object
  v1.ContainerStateWaiting:
    properties:
      message:
        description: |-
          Message regarding why the container is not yet running.
          +optional
        type: string
      reason:
        description: |-
          (brief) reason the container is not yet running.
          +optional
        type: string
    type: object
  v1.ContainerStatus:
    properties:
      containerID:
        description: |-
          Container's ID in the format 'docker://<container_id>'.
          +optional
        type: string
      image:
        description: |-
          The image the container is running.
          More info: https://kubernetes.io/docs/concepts/containers/images
          TODO(dchen1107): Which image the container is running with?
        type: string
      imageID:
        description: ImageID of the container's image.
        type: string
      lastState:
        $ref: '#/definitions/v1.ContainerState'
        description: |-
          Details about the container's last termination condition.
          +optional
      name:
        description: |-
          This must be a DNS_LABEL. Each container in a pod must have a unique name.
          Cannot be updated.
        type: string
      ready:
        description: Specifies whether the container has passed its readiness probe.
        type: boolean
      restartCount:
        description: |-
          The number of times the container has been restarted, currently based on
          the number of dead containers that have not yet been removed.
          Note that this is calculated from dead containers. But those containers are subject to
          garbage collection. This value will get capped at 5 by GC.
        type: integer
      state:
        $ref: '#/definitions/v1.ContainerState'
        description: |-
          Details about the container's current condition.
          +optional
    type: object
  v1.DaemonSet:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sDaemonSet'
    type: object
  v1.DaemonSetCondition:
    properties:
      lastTransitionTime:
        description: |-
          Last time the condition transitioned from one status to another.
          +optional
        type: string
      message:
        description: |-
          A human readable message indicating details about the transition.
          +optional
        type: string
      reason:
        description: |-
          The reason for the condition's last transition.
          +optional
        type: string
      status:
        description: Status of the condition, one of True, False, Unknown.
        type: string
      type:
        description: Type of DaemonSet condition.
        type: string
    type: object
  v1.DaemonSetSpec:
    properties:
      minReadySeconds:
        description: |-
          The minimum number of seconds for which a newly created DaemonSet pod should
          be ready without any of its container crashing, for it to be considered
          available. Defaults to 0 (pod will be considered available as soon as it
          is ready).
          +optional
        type: integer
      revisionHistoryLimit:
        description: |-
          The number of old history to retain to allow rollback.
          This is a pointer to distinguish between explicit zero and not specified.
          Defaults to 10.
          +optional
        type: integer
      selector:
        $ref: '#/definitions/v1.LabelSelector'
        description: |-
          A label query over pods that are managed by the daemon set.
          Must match in order to be controlled.
          It must match the pod template's labels.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
      template:
        $ref: '#/definitions/v1.PodTemplateSpec'
        description: |-
          An object that describes the pod that will be created.
          The DaemonSet will create exactly one copy of this pod on every node
          that matches the template's node selector (or on every node if no node
          selector is specified).
          More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
      updateStrategy:
        $ref: '#/definitions/v1.DaemonSetUpdateStrategy'
        description: |-
          An Update strategy to replace existing DaemonSet pods with new pods.
          +optional
    type: object
  v1.DaemonSetStatus:
    properties:
      collisionCount:
        description: |-
          CountByClusterId of hash collisions for the DaemonSet. The DaemonSet controller
          uses this field as a collision avoidance mechanism when it needs to
          create the name for the newest ControllerRevision.
          +optional
        type: integer
      conditions:
        description: |-
          Represents the latest available observations of a DaemonSet's current state.
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.DaemonSetCondition'
        type: array
      currentNumberScheduled:
        description: |-
          The number of nodes that are running at least 1
          daemon pod and are supposed to run the daemon pod.
          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
        type: integer
      desiredNumberScheduled:
        description: |-
          The total number of nodes that should be running the daemon
          pod (including nodes correctly running the daemon pod).
          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
        type: integer
      numberAvailable:
        description: |-
          The number of nodes that should be running the
          daemon pod and have one or more of the daemon pod running and
          available (ready for at least spec.minReadySeconds)
          +optional
        type: integer
      numberMisscheduled:
        description: |-
          The number of nodes that are running the daemon pod, but are
          not supposed to run the daemon pod.
          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
        type: integer
      numberReady:
        description: |-
          The number of nodes that should be running the daemon pod and have one
          or more of the daemon pod running and ready.
        type: integer
      numberUnavailable:
        description: |-
          The number of nodes that should be running the
          daemon pod and have none of the daemon pod running and available
          (ready for at least spec.minReadySeconds)
          +optional
        type: integer
      observedGeneration:
        description: |-
          The most recent generation observed by the daemon set controller.
          +optional
        type: integer
      updatedNumberScheduled:
        description: |-
          The total number of nodes that are running updated daemon pod
          +optional
        type: integer
    type: object
  v1.DaemonSetUpdateStrategy:
    properties:
      rollingUpdate:
        $ref: '#/definitions/v1.RollingUpdateDaemonSet'
        description: |-
          Rolling Update config params. Present only if type = "RollingUpdate".
          ---
          TODO: Update this to follow our convention for oneOf, whatever we decide it
          to be. Same as Deployment `strategy.rollingUpdate`.
          See https://github.com/kubernetes/kubernetes/issues/35345
          +optional
      type:
        description: |-
          Type of daemon set Update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
          +optional
        type: string
    type: object
  v1.Deployment:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sDeployment'
    type: object
  v1.DeploymentCondition:
    properties:
      lastTransitionTime:
        description: Last time the condition transitioned from one status to another.
        type: string
      lastUpdateTime:
        description: The last time this condition was updated.
        type: string
      message:
        description: A human readable message indicating details about the transition.
        type: string
      reason:
        description: The reason for the condition's last transition.
        type: string
      status:
        description: Status of the condition, one of True, False, Unknown.
        type: string
      type:
        description: Type of deployment condition.
        type: string
    type: object
  v1.DeploymentSpec:
    properties:
      minReadySeconds:
        description: |-
          Minimum number of seconds for which a newly created pod should be ready
          without any of its container crashing, for it to be considered available.
          Defaults to 0 (pod will be considered available as soon as it is ready)
          +optional
        type: integer
      paused:
        description: |-
          Indicates that the deployment is paused.
          +optional
        type: boolean
      progressDeadlineSeconds:
        description: |-
          The maximum time in seconds for a deployment to make progress before it
          is considered to be failed. The deployment controller will continue to
          process failed deployments and a condition with a ProgressDeadlineExceeded
          reason will be surfaced in the deployment status. Note that progress will
          not be estimated during the time a deployment is paused. Defaults to 600s.
        type: integer
      replicas:
        description: |-
          Number of desired pods. This is a pointer to distinguish between explicit
          zero and not specified. Defaults to 1.
          +optional
        type: integer
      revisionHistoryLimit:
        description: |-
          The number of old ReplicaSets to retain to allow rollback.
          This is a pointer to distinguish between explicit zero and not specified.
          Defaults to 10.
          +optional
        type: integer
      selector:
        $ref: '#/definitions/v1.LabelSelector'
        description: |-
          Label selector for pods. Existing ReplicaSets whose pods are
          selected by this will be the ones affected by this deployment.
          It must match the pod template's labels.
      strategy:
        $ref: '#/definitions/v1.DeploymentStrategy'
        description: |-
          The deployment strategy to use to replace existing pods with new ones.
          +optional
      template:
        $ref: '#/definitions/v1.PodTemplateSpec'
        description: Template describes the pods that will be created.
    type: object
  v1.DeploymentStatus:
    properties:
      availableReplicas:
        description: |-
          Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
          +optional
        type: integer
      collisionCount:
        description: |-
          CountByClusterId of hash collisions for the Deployment. The Deployment controller uses this
          field as a collision avoidance mechanism when it needs to create the name for the
          newest ReplicaSet.
          +optional
        type: integer
      conditions:
        description: |-
          Represents the latest available observations of a deployment's current state.
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.DeploymentCondition'
        type: array
      observedGeneration:
        description: |-
          The generation observed by the deployment controller.
          +optional
        type: integer
      readyReplicas:
        description: |-
          Total number of ready pods targeted by this deployment.
          +optional
        type: integer
      replicas:
        description: |-
          Total number of non-terminated pods targeted by this deployment (their labels match the selector).
          +optional
        type: integer
      unavailableReplicas:
        description: |-
          Total number of unavailable pods targeted by this deployment. This is the total number of
          pods that are still required for the deployment to have 100% available capacity. They may
          either be pods that are running but not yet available or pods that still have not been created.
          +optional
        type: integer
      updatedReplicas:
        description: |-
          Total number of non-terminated pods targeted by this deployment that have the desired template spec.
          +optional
        type: integer
    type: object
  v1.DeploymentStrategy:
    properties:
      rollingUpdate:
        $ref: '#/definitions/v1.RollingUpdateDeployment'
        description: |-
          Rolling Update config params. Present only if DeploymentStrategyType =
          RollingUpdate.
          ---
          TODO: Update this to follow our convention for oneOf, whatever we decide it
          to be.
          +optional
      type:
        description: |-
          Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
          +optional
        type: string
    type: object
  v1.DownwardAPIProjection:
    properties:
      items:
        description: |-
          Items is a list of DownwardAPIVolume file
          +optional
        items:
          $ref: '#/definitions/v1.DownwardAPIVolumeFile'
        type: array
    type: object
  v1.DownwardAPIVolumeFile:
    properties:
      fieldRef:
        $ref: '#/definitions/v1.ObjectFieldSelector'
        description: |-
          Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
          +optional
      mode:
        description: |-
          Optional: mode bits to use on this file, must be a value between 0
          and 0777. If not specified, the volume defaultMode will be used.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      path:
        description: 'Required: Path is  the relative path name of the file to be
          created. Must not be absolute or contain the ''..'' path. Must be utf-8
          encoded. The first item of the relative path must not start with ''..'''
        type: string
      resourceFieldRef:
        $ref: '#/definitions/v1.ResourceFieldSelector'
        description: |-
          Selects a resource of the container: only resources limits and requests
          (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
          +optional
    type: object
  v1.DownwardAPIVolumeSource:
    properties:
      defaultMode:
        description: |-
          Optional: mode bits to use on created files by default. Must be a
          value between 0 and 0777. Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          Items is a list of downward API volume file
          +optional
        items:
          $ref: '#/definitions/v1.DownwardAPIVolumeFile'
        type: array
    type: object
  v1.Duration:
    properties:
      time.Duration:
        type: integer
    type: object
  v1.EmptyDirVolumeSource:
    properties:
      medium:
        description: |-
          What type of storage medium should back this directory.
          The default is "" which means to use the node's default medium.
          Must be an empty string (default) or Memory.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
          +optional
        type: string
      sizeLimit:
        description: |-
          Total amount of local storage required for this EmptyDir volume.
          The size limit is also applicable for memory medium.
          The maximum usage on memory medium EmptyDir would be the minimum value between
          the SizeLimit specified here and the sum of memory limits of all containers in a pod.
          The default is nil which means that the limit is undefined.
          More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
          +optional
        type: string
    type: object
  v1.EnvFromSource:
    properties:
      configMapRef:
        $ref: '#/definitions/v1.ConfigMapEnvSource'
        description: |-
          The ConfigMap to select from
          +optional
      prefix:
        description: |-
          An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
          +optional
        type: string
      secretRef:
        $ref: '#/definitions/v1.SecretEnvSource'
        description: |-
          The Secret to select from
          +optional
    type: object
  v1.EnvVar:
    properties:
      name:
        description: Name of the environment variable. Must be a C_IDENTIFIER.
        type: string
      value:
        description: |-
          Variable references $(VAR_NAME) are expanded
          using the previous defined environment variables in the container and
          any service environment variables. If a variable cannot be resolved,
          the reference in the input string will be unchanged. The $(VAR_NAME)
          syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
          references will never be expanded, regardless of whether the variable
          exists or not.
          Defaults to "".
          +optional
        type: string
      valueFrom:
        $ref: '#/definitions/v1.EnvVarSource'
        description: |-
          Source for the environment variable's value. Cannot be used if value is not empty.
          +optional
    type: object
  v1.EnvVarSource:
    properties:
      configMapKeyRef:
        $ref: '#/definitions/v1.ConfigMapKeySelector'
        description: |-
          Selects a key of a ConfigMap.
          +optional
      fieldRef:
        $ref: '#/definitions/v1.ObjectFieldSelector'
        description: |-
          Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations,
          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
          +optional
      resourceFieldRef:
        $ref: '#/definitions/v1.ResourceFieldSelector'
        description: |-
          Selects a resource of the container: only resources limits and requests
          (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
          +optional
      secretKeyRef:
        $ref: '#/definitions/v1.SecretKeySelector'
        description: |-
          Selects a key of a secret in the pod's namespace
          +optional
    type: object
  v1.ExecAction:
    properties:
      command:
        description: |-
          Command is the command line to execute inside the container, the working directory for the
          command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
          not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
          a shell, you need to explicitly call out to that shell.
          Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.FCVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      lun:
        description: |-
          Optional: FC target lun number
          +optional
        type: integer
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      targetWWNs:
        description: |-
          Optional: FC target worldwide names (WWNs)
          +optional
        items:
          type: string
        type: array
      wwids:
        description: |-
          Optional: FC volume world wide identifiers (wwids)
          Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.FlexPersistentVolumeSource:
    properties:
      driver:
        description: Driver is the name of the driver to use for this volume.
        type: string
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
          +optional
        type: string
      options:
        additionalProperties:
          type: string
        description: |-
          Optional: Extra command options if any.
          +optional
        type: object
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.SecretReference'
        description: |-
          Optional: SecretRef is reference to the secret object containing
          sensitive information to pass to the plugin scripts. This may be
          empty if no secret object is specified. If the secret object
          contains more than one secret, all secrets are passed to the plugin
          scripts.
          +optional
    type: object
  v1.FlexVolumeSource:
    properties:
      driver:
        description: Driver is the name of the driver to use for this volume.
        type: string
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
          +optional
        type: string
      options:
        additionalProperties:
          type: string
        description: |-
          Optional: Extra command options if any.
          +optional
        type: object
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          Optional: SecretRef is reference to the secret object containing
          sensitive information to pass to the plugin scripts. This may be
          empty if no secret object is specified. If the secret object
          contains more than one secret, all secrets are passed to the plugin
          scripts.
          +optional
    type: object
  v1.FlockerVolumeSource:
    properties:
      datasetName:
        description: |-
          Name of the dataset stored as metadata -> name on the dataset for Flocker
          should be considered as deprecated
          +optional
        type: string
      datasetUUID:
        description: |-
          UID of the dataset. This is unique identifier of a Flocker dataset
          +optional
        type: string
    type: object
  v1.GCEPersistentDiskVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      partition:
        description: |-
          The partition in the volume that you want to mount.
          If omitted, the default is to mount by volume name.
          Examples: For volume /dev/sda1, you specify the partition as "1".
          Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
        type: integer
      pdName:
        description: |-
          Unique name of the PD resource in GCE. Used to identify the disk in GCE.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
        type: boolean
    type: object
  v1.GitRepoVolumeSource:
    properties:
      directory:
        description: |-
          Target directory name.
          Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
          git repository.  Otherwise, if specified, the volume will contain the git repository in
          the subdirectory with the given name.
          +optional
        type: string
      repository:
        description: Repository URL
        type: string
      revision:
        description: |-
          Commit hash for the specified revision.
          +optional
        type: string
    type: object
  v1.GlusterfsVolumeSource:
    properties:
      endpoints:
        description: |-
          EndpointsName is the endpoint name that details Glusterfs topology.
          More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
        type: string
      path:
        description: |-
          Path is the Glusterfs volume path.
          More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.
          Defaults to false.
          More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
          +optional
        type: boolean
    type: object
  v1.HTTPGetAction:
    properties:
      host:
        description: |-
          Host name to connect to, defaults to the pod IP. You probably want to set
          "Host" in httpHeaders instead.
          +optional
        type: string
      httpHeaders:
        description: |-
          Custom headers to set in the request. HTTP allows repeated headers.
          +optional
        items:
          $ref: '#/definitions/v1.HTTPHeader'
        type: array
      path:
        description: |-
          Path to access on the HTTP server.
          +optional
        type: string
      port:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Name or number of the port to access on the container.
          Number must be in the range 1 to 65535.
          Name must be an IANA_SVC_NAME.
      scheme:
        description: |-
          Scheme to use for connecting to the host.
          Defaults to HTTP.
          +optional
        type: string
    type: object
  v1.HTTPHeader:
    properties:
      name:
        description: The header field name
        type: string
      value:
        description: The header field value
        type: string
    type: object
  v1.HTTPIngressPath:
    properties:
      backend:
        $ref: '#/definitions/v1.IngressBackend'
        description: |-
          Backend defines the referenced service endpoint to which the traffic
          will be forwarded to.
      path:
        description: |-
          Path is an extended POSIX regex as defined by IEEE Std 1003.1,
          (i.e this follows the egrep/unix syntax, not the perl syntax)
          matched against the path of an incoming request. Currently it can
          contain characters disallowed from the conventional "path"
          part of a URL as defined by RFC 3986. Paths must begin with
          a '/'. If unspecified, the path defaults to a catch all sending
          traffic to the backend.
          +optional
        type: string
    type: object
  v1.HTTPIngressRuleValue:
    properties:
      paths:
        description: A collection of paths that map requests to backends.
        items:
          $ref: '#/definitions/v1.HTTPIngressPath'
        type: array
    type: object
  v1.Handler:
    properties:
      exec:
        $ref: '#/definitions/v1.ExecAction'
        description: |-
          One and only one of the following should be specified.
          Exec specifies the action to take.
          +optional
      httpGet:
        $ref: '#/definitions/v1.HTTPGetAction'
        description: |-
          HTTPGet specifies the http request to perform.
          +optional
      tcpSocket:
        $ref: '#/definitions/v1.TCPSocketAction'
        description: |-
          TCPSocket specifies an action involving a TCP port.
          TCP hooks not yet supported
          TODO: implement a realistic TCP lifecycle hook
          +optional
    type: object
  v1.HostAlias:
    properties:
      hostnames:
        description: Hostnames for the above IP address.
        items:
          type: string
        type: array
      ip:
        description: IP address of the host file entry.
        type: string
    type: object
  v1.HostPathVolumeSource:
    properties:
      path:
        description: |-
          Path of the directory on the host.
          If the path is a symlink, it will follow the link to the real path.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
        type: string
      type:
        description: |-
          Type for HostPath Volume
          Defaults to ""
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          +optional
        type: string
    type: object
  v1.IPBlock:
    properties:
      cidr:
        description: |-
          CIDR is a string representing the IP Block
          Valid examples are "192.168.1.1/24"
        type: string
      except:
        description: |-
          Except is a slice of CIDRs that should not be included within an IP Block
          Valid examples are "192.168.1.1/24"
          Except values will be rejected if they are outside the CIDR range
          +optional
        items:
          type: string
        type: array
    type: object
  v1.ISCSIPersistentVolumeSource:
    properties:
      chapAuthDiscovery:
        description: |-
          whether support iSCSI Discovery CHAP authentication
          +optional
        type: boolean
      chapAuthSession:
        description: |-
          whether support iSCSI Session CHAP authentication
          +optional
        type: boolean
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      initiatorName:
        description: |-
          Custom iSCSI Initiator Name.
          If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
          <target portal>:<volume name> will be created for the connection.
          +optional
        type: string
      iqn:
        description: Target iSCSI Qualified Name.
        type: string
      iscsiInterface:
        description: |-
          iSCSI Interface Name that uses an iSCSI transport.
          Defaults to 'default' (tcp).
          +optional
        type: string
      lun:
        description: iSCSI Target Lun number.
        type: integer
      portals:
        description: |-
          iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port
          is other than default (typically TCP ports 860 and 3260).
          +optional
        items:
          type: string
        type: array
      readOnly:
        description: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.SecretReference'
        description: |-
          CHAP Secret for iSCSI target and initiator authentication
          +optional
      targetPortal:
        description: |-
          iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
          is other than default (typically TCP ports 860 and 3260).
        type: string
    type: object
  v1.ISCSIVolumeSource:
    properties:
      chapAuthDiscovery:
        description: |-
          whether support iSCSI Discovery CHAP authentication
          +optional
        type: boolean
      chapAuthSession:
        description: |-
          whether support iSCSI Session CHAP authentication
          +optional
        type: boolean
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      initiatorName:
        description: |-
          Custom iSCSI Initiator Name.
          If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
          <target portal>:<volume name> will be created for the connection.
          +optional
        type: string
      iqn:
        description: Target iSCSI Qualified Name.
        type: string
      iscsiInterface:
        description: |-
          iSCSI Interface Name that uses an iSCSI transport.
          Defaults to 'default' (tcp).
          +optional
        type: string
      lun:
        description: iSCSI Target Lun number.
        type: integer
      portals:
        description: |-
          iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
          is other than default (typically TCP ports 860 and 3260).
          +optional
        items:
          type: string
        type: array
      readOnly:
        description: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          CHAP Secret for iSCSI target and initiator authentication
          +optional
      targetPortal:
        description: |-
          iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
          is other than default (typically TCP ports 860 and 3260).
        type: string
    type: object
  v1.Ingress:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sIngress'
    type: object
  v1.IngressBackend:
    properties:
      serviceName:
        description: Specifies the name of the referenced service.
        type: string
      servicePort:
        $ref: '#/definitions/intstr.IntOrString'
        description: Specifies the port of the referenced service.
    type: object
  v1.IngressRule:
    properties:
      host:
        description: "Host is the fully qualified domain name of a network host, as
          defined\nby RFC 3986. Note the following deviations from the \"host\" part
          of the\nURI as defined in the RFC:\n1. IPs are not allowed. Currently an
          IngressRuleValue can only apply to the\n\t  IP in the Spec of the parent
          Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t
          \ Currently the port of an Ingress is implicitly :80 for http and\n\t  :443
          for https.\nBoth these may change in the future.\nIncoming requests are
          matched against the host before the IngressRuleValue.\nIf the host is unspecified,
          the Ingress routes all traffic based on the\nspecified IngressRuleValue.\n+optional"
        type: string
      http:
        $ref: '#/definitions/v1.HTTPIngressRuleValue'
        description: +optional
    type: object
  v1.IngressSpec:
    properties:
      backend:
        $ref: '#/definitions/v1.IngressBackend'
        description: |-
          A default backend capable of servicing requests that don't match any
          rule. At least one of 'backend' or 'rules' must be specified. This field
          is optional to allow the loadbalancer controller or defaulting logic to
          specify a global default.
          +optional
      rules:
        description: |-
          A list of host rules used to configure the Ingress. If unspecified, or
          no rule matches, all traffic is sent to the default backend.
          +optional
        items:
          $ref: '#/definitions/v1.IngressRule'
        type: array
      tls:
        description: |-
          TLS configuration. Currently the Ingress only supports a single TLS
          port, 443. If multiple members of this list specify different hosts, they
          will be multiplexed on the same port according to the hostname specified
          through the SNI TLS extension, if the ingress controller fulfilling the
          ingress supports SNI.
          +optional
        items:
          $ref: '#/definitions/v1.IngressTLS'
        type: array
    type: object
  v1.IngressStatus:
    properties:
      loadBalancer:
        $ref: '#/definitions/v1.LoadBalancerStatus'
        description: |-
          LoadBalancer contains the current status of the load-balancer.
          +optional
    type: object
  v1.IngressTLS:
    properties:
      hosts:
        description: |-
          Hosts are a list of hosts included in the TLS certificate. The values in
          this list must match the name/s used in the tlsSecret. Defaults to the
          wildcard host setting for the loadbalancer controller fulfilling this
          Ingress, if left unspecified.
          +optional
        items:
          type: string
        type: array
      secretName:
        description: |-
          SecretName is the name of the secret used to terminate SSL traffic on 443.
          Field is left optional to allow SSL routing based on SNI hostname alone.
          If the SNI host in a listener conflicts with the "Host" header field used
          by an IngressRule, the SNI host is used for termination and value of the
          Host header is used for routing.
          +optional
        type: string
    type: object
  v1.Initializer:
    properties:
      name:
        description: name of the process that is responsible for initializing this
          object.
        type: string
    type: object
  v1.Initializers:
    properties:
      pending:
        description: |-
          Pending is a list of initializers that must execute in order before this object is visible.
          When the last pending initializer is removed, and no failing result is set, the initializers
          struct will be set to nil and the object is considered as initialized and visible to all
          clients.
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.Initializer'
        type: array
      result:
        $ref: '#/definitions/v1.Status'
        description: |-
          If result is set with the Failure field, the object will be persisted to storage and then deleted,
          ensuring that other clients can observe the deletion.
    type: object
  v1.JKSKeystore:
    properties:
      create:
        description: |-
          Create enables JKS keystore creation for the Certificate.
          If true, a file named `keystore.jks` will be created in the target
          Secret resource, encrypted using the password stored in
          `passwordSecretRef`.
          The keystore file will only be updated upon re-issuance.
          A file named `truststore.jks` will also be created in the target
          Secret resource, encrypted using the password stored in
          `passwordSecretRef` containing the issuing Certificate Authority
        type: boolean
      passwordSecretRef:
        $ref: '#/definitions/v1.CertificateSecretKeySelector'
        description: |-
          PasswordSecretRef is a reference to a key in a Secret resource
          containing the password used to encrypt the JKS keystore.
    type: object
  v1.K8sCertificate:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.CertificateSpec'
      status:
        $ref: '#/definitions/v1.CertificateStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sClusterRole:
    properties:
      aggregationRule:
        $ref: '#/definitions/v1.AggregationRule'
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      rules:
        items:
          $ref: '#/definitions/v1.PolicyRule'
        type: array
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sConfigMap:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      binaryData:
        additionalProperties:
          items:
            type: integer
          type: array
        type: object
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      data:
        additionalProperties:
          type: string
        type: object
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sDaemonSet:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.DaemonSetSpec'
      status:
        $ref: '#/definitions/v1.DaemonSetStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sDeployment:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.DeploymentSpec'
      status:
        $ref: '#/definitions/v1.DeploymentStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sIngress:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.IngressSpec'
      status:
        $ref: '#/definitions/v1.IngressStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sNamespace:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.NamespaceSpec'
      status:
        $ref: '#/definitions/v1.NamespaceStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sNetworkPolicy:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.NetworkPolicySpec'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sPersistentVolume:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.PersistentVolumeSpec'
      status:
        $ref: '#/definitions/v1.PersistentVolumeStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sPersistentVolumeClaim:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.PersistentVolumeClaimSpec'
      status:
        $ref: '#/definitions/v1.PersistentVolumeClaimStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sPod:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.PodSpec'
      status:
        $ref: '#/definitions/v1.PodStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sReplicaSet:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.ReplicaSetSpec'
      status:
        $ref: '#/definitions/v1.ReplicaSetStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sRole:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      rules:
        items:
          $ref: '#/definitions/v1.PolicyRule'
        type: array
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sRoleBinding:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      roleRef:
        $ref: '#/definitions/v1.RoleRef'
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      subjects:
        items:
          $ref: '#/definitions/v1.Subject'
        type: array
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sSecret:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      data:
        additionalProperties:
          items:
            type: integer
          type: array
        type: object
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      stringData:
        additionalProperties:
          type: string
        type: object
      type:
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sService:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.ServiceSpec'
      status:
        $ref: '#/definitions/v1.ServiceStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sServiceAccount:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      automountServiceAccountToken:
        type: boolean
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      imagePullSecrets:
        items:
          $ref: '#/definitions/v1.LocalObjectReference'
        type: array
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      secrets:
        items:
          $ref: '#/definitions/v1.ObjectReference'
        type: array
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.K8sStatefulSet:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.StatefulSetSpec'
      status:
        $ref: '#/definitions/v1.StatefulSetStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.KeyToPath:
    properties:
      key:
        description: The key to project.
        type: string
      mode:
        description: |-
          Optional: mode bits to use on this file, must be a value between 0
          and 0777. If not specified, the volume defaultMode will be used.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      path:
        description: |-
          The relative path of the file to map the key to.
          May not be an absolute path.
          May not contain the path element '..'.
          May not start with the string '..'.
        type: string
    type: object
  v1.LabelSelector:
    properties:
      matchExpressions:
        description: |-
          matchExpressions is a list of label selector requirements. The requirements are ANDed.
          +optional
        items:
          $ref: '#/definitions/v1.LabelSelectorRequirement'
        type: array
      matchLabels:
        additionalProperties:
          type: string
        description: |-
          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
          map is equivalent to an element of matchExpressions, whose key field is "key", the
          operator is "In", and the values array contains only "value". The requirements are ANDed.
          +optional
        type: object
    type: object
  v1.LabelSelectorRequirement:
    properties:
      key:
        description: |-
          key is the label key that the selector applies to.
          +patchMergeKey=key
          +patchStrategy=merge
        type: string
      operator:
        description: |-
          operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
        type: string
      values:
        description: |-
          values is an array of string values. If the operator is In or NotIn,
          the values array must be non-empty. If the operator is Exists or DoesNotExist,
          the values array must be empty. This array is replaced during a strategic
          merge patch.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.Lifecycle:
    properties:
      postStart:
        $ref: '#/definitions/v1.Handler'
        description: |-
          PostStart is called immediately after a container is created. If the handler fails,
          the container is terminated and restarted according to its restart policy.
          Other management of the container blocks until the hook completes.
          More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
          +optional
      preStop:
        $ref: '#/definitions/v1.Handler'
        description: |-
          PreStop is called immediately before a container is terminated.
          The container is terminated after the handler completes.
          The reason for termination is passed to the handler.
          Regardless of the outcome of the handler, the container is eventually terminated.
          Other management of the container blocks until the hook completes.
          More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
          +optional
    type: object
  v1.LoadBalancerIngress:
    properties:
      hostname:
        description: |-
          Hostname is set for load-balancer ingress points that are DNS based
          (typically AWS load-balancers)
          +optional
        type: string
      ip:
        description: |-
          IP is set for load-balancer ingress points that are IP based
          (typically GCE or OpenStack load-balancers)
          +optional
        type: string
    type: object
  v1.LoadBalancerStatus:
    properties:
      ingress:
        description: |-
          Ingress is a list containing ingress points for the load-balancer.
          Traffic intended for the service should be sent to these ingress points.
          +optional
        items:
          $ref: '#/definitions/v1.LoadBalancerIngress'
        type: array
    type: object
  v1.LocalObjectReference:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
    type: object
  v1.LocalVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          It applies only when the Path is a block device.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". The default value is to auto-select a fileystem if unspecified.
          +optional
        type: string
      path:
        description: |-
          The full path to the volume on the node.
          It can be either a directory or block device (disk, partition, ...).
        type: string
    type: object
  v1.NFSVolumeSource:
    properties:
      path:
        description: |-
          Path that is exported by the NFS server.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
        type: string
      readOnly:
        description: |-
          ReadOnly here will force
          the NFS export to be mounted with read-only permissions.
          Defaults to false.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          +optional
        type: boolean
      server:
        description: |-
          Server is the hostname or IP address of the NFS server.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
        type: string
    type: object
  v1.Namespace:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sNamespace'
    type: object
  v1.NamespaceSpec:
    properties:
      finalizers:
        items:
          type: string
        type: array
    type: object
  v1.NamespaceStatus:
    properties:
      phase:
        type: string
    type: object
  v1.NetworkPolicy:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sNetworkPolicy'
    type: object
  v1.NetworkPolicyEgressRule:
    properties:
      ports:
        description: |-
          List of destination ports for outgoing traffic.
          Each item in this list is combined using a logical OR. If this field is
          empty or missing, this rule matches all ports (traffic not restricted by port).
          If this field is present and contains at least one item, then this rule allows
          traffic only if the traffic matches at least one port in the list.
          +optional
        items:
          $ref: '#/definitions/v1.NetworkPolicyPort'
        type: array
      to:
        description: |-
          List of destinations for outgoing traffic of pods selected for this rule.
          Items in this list are combined using a logical OR operation. If this field is
          empty or missing, this rule matches all destinations (traffic not restricted by
          destination). If this field is present and contains at least one item, this rule
          allows traffic only if the traffic matches at least one item in the to list.
          +optional
        items:
          $ref: '#/definitions/v1.NetworkPolicyPeer'
        type: array
    type: object
  v1.NetworkPolicyIngressRule:
    properties:
      from:
        description: |-
          List of sources which should be able to access the pods selected for this rule.
          Items in this list are combined using a logical OR operation. If this field is
          empty or missing, this rule matches all sources (traffic not restricted by
          source). If this field is present and contains at least on item, this rule
          allows traffic only if the traffic matches at least one item in the from list.
          +optional
        items:
          $ref: '#/definitions/v1.NetworkPolicyPeer'
        type: array
      ports:
        description: |-
          List of ports which should be made accessible on the pods selected for this
          rule. Each item in this list is combined using a logical OR. If this field is
          empty or missing, this rule matches all ports (traffic not restricted by port).
          If this field is present and contains at least one item, then this rule allows
          traffic only if the traffic matches at least one port in the list.
          +optional
        items:
          $ref: '#/definitions/v1.NetworkPolicyPort'
        type: array
    type: object
  v1.NetworkPolicyPeer:
    properties:
      ipBlock:
        $ref: '#/definitions/v1.IPBlock'
        description: |-
          IPBlock defines policy on a particular IPBlock. If this field is set then
          neither of the other fields can be.
          +optional
      namespaceSelector:
        $ref: '#/definitions/v1.LabelSelector'
        description: |-
          Selects Namespaces using cluster-scoped labels. This field follows standard label
          selector semantics; if present but empty, it selects all namespaces.

          If PodSelector is also set, then the NetworkPolicyPeer as a whole selects
          the Pods matching PodSelector in the Namespaces selected by NamespaceSelector.
          Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.
          +optional
      podSelector:
        $ref: '#/definitions/v1.LabelSelector'
        description: |-
          This is a label selector which selects Pods. This field follows standard label
          selector semantics; if present but empty, it selects all pods.

          If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
          the Pods matching PodSelector in the Namespaces selected by NamespaceSelector.
          Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.
          +optional
    type: object
  v1.NetworkPolicyPort:
    properties:
      port:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          The port on the given protocol. This can either be a numerical or named port on
          a pod. If this field is not provided, this matches all port names and numbers.
          +optional
      protocol:
        description: |-
          The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this
          field defaults to TCP.
          +optional
        type: string
    type: object
  v1.NetworkPolicySpec:
    properties:
      egress:
        description: |-
          List of egress rules to be applied to the selected pods. Outgoing traffic is
          allowed if there are no NetworkPolicies selecting the pod (and cluster policy
          otherwise allows the traffic), OR if the traffic matches at least one egress rule
          across all of the NetworkPolicy objects whose podSelector matches the pod. If
          this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
          solely to ensure that the pods it selects are isolated by default).
          This field is beta-level in 1.8
          +optional
        items:
          $ref: '#/definitions/v1.NetworkPolicyEgressRule'
        type: array
      ingress:
        description: |-
          List of ingress rules to be applied to the selected pods. Traffic is allowed to
          a pod if there are no NetworkPolicies selecting the pod
          (and cluster policy otherwise allows the traffic), OR if the traffic source is
          the pod's local node, OR if the traffic matches at least one ingress rule
          across all of the NetworkPolicy objects whose podSelector matches the pod. If
          this field is empty then this NetworkPolicy does not allow any traffic (and serves
          solely to ensure that the pods it selects are isolated by default)
          +optional
        items:
          $ref: '#/definitions/v1.NetworkPolicyIngressRule'
        type: array
      podSelector:
        $ref: '#/definitions/v1.LabelSelector'
        description: |-
          Selects the pods to which this NetworkPolicy object applies. The array of
          ingress rules is applied to any pods selected by this field. Multiple network
          policies can select the same set of pods. In this case, the ingress rules for
          each are combined additively. This field is NOT optional and follows standard
          label selector semantics. An empty podSelector matches all pods in this
          namespace.
      policyTypes:
        description: |-
          List of rule types that the NetworkPolicy relates to.
          Valid options are Ingress, Egress, or Ingress,Egress.
          If this field is not specified, it will default based on the existence of Ingress or Egress rules;
          policies that contain an Egress section are assumed to affect Egress, and all policies
          (whether or not they contain an Ingress section) are assumed to affect Ingress.
          If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
          Likewise, if you want to write a policy that specifies that no egress is allowed,
          you must specify a policyTypes value that include "Egress" (since such a policy would not include
          an Egress section and would otherwise default to just [ "Ingress" ]).
          This field is beta-level in 1.8
          +optional
        items:
          type: string
        type: array
    type: object
  v1.NodeAffinity:
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        description: |-
          The scheduler will prefer to schedule pods to nodes that satisfy
          the affinity expressions specified by this field, but it may choose
          a node that violates one or more of the expressions. The node that is
          most preferred is the one with the greatest sum of weights, i.e.
          for each node that meets all of the scheduling requirements (resource
          request, requiredDuringScheduling affinity expressions, etc.),
          compute a sum by iterating through the elements of this field and adding
          "weight" to the sum if the node matches the corresponding matchExpressions; the
          node(s) with the highest sum are the most preferred.
          +optional
        items:
          $ref: '#/definitions/v1.PreferredSchedulingTerm'
        type: array
      requiredDuringSchedulingIgnoredDuringExecution:
        $ref: '#/definitions/v1.NodeSelector'
        description: |-
          If the affinity requirements specified by this field are not met at
          scheduling time, the pod will not be scheduled onto the node.
          If the affinity requirements specified by this field cease to be met
          at some point during pod execution (e.g. due to an Update), the system
          may or may not try to eventually evict the pod from its node.
          +optional
    type: object
  v1.NodeSelector:
    properties:
      nodeSelectorTerms:
        description: Required. A list of node selector terms. The terms are ORed.
        items:
          $ref: '#/definitions/v1.NodeSelectorTerm'
        type: array
    type: object
  v1.NodeSelectorRequirement:
    properties:
      key:
        description: The label key that the selector applies to.
        type: string
      operator:
        description: |-
          Represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
        type: string
      values:
        description: |-
          An array of string values. If the operator is In or NotIn,
          the values array must be non-empty. If the operator is Exists or DoesNotExist,
          the values array must be empty. If the operator is Gt or Lt, the values
          array must have a single element, which will be interpreted as an integer.
          This array is replaced during a strategic merge patch.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.NodeSelectorTerm:
    properties:
      matchExpressions:
        description: |-
          A list of node selector requirements by node's labels.
          +optional
        items:
          $ref: '#/definitions/v1.NodeSelectorRequirement'
        type: array
      matchFields:
        description: |-
          A list of node selector requirements by node's fields.
          +optional
        items:
          $ref: '#/definitions/v1.NodeSelectorRequirement'
        type: array
    type: object
  v1.ObjectFieldSelector:
    properties:
      apiVersion:
        description: |-
          Version of the schema the FieldPath is written in terms of, defaults to "v1".
          +optional
        type: string
      fieldPath:
        description: Path of the field to select in the specified API version.
        type: string
    type: object
  v1.ObjectReference:
    properties:
      apiVersion:
        description: |-
          API version of the referent.
          +optional
        type: string
      fieldPath:
        description: |-
          If referring to a piece of an object instead of an entire object, this string
          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
          For example, if the object reference is to a container within a pod, this would take on a value like:
          "spec.containers{name}" (where "name" refers to the name of the container that triggered
          the event) or if no container name is specified "spec.containers[2]" (container with
          index 2 in this pod). This syntax is chosen only to have some well-defined way of
          referencing a part of an object.
          TODO: this design is not final and this field is subject to change in the future.
          +optional
        type: string
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
          +optional
        type: string
      resourceVersion:
        description: |-
          Specific resourceVersion to which this reference is made, if any.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
          +optional
        type: string
    type: object
  v1.OwnerReference:
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          Defaults to false.
          To set this field, a user needs "Delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
  v1.PKCS12Keystore:
    properties:
      create:
        description: |-
          Create enables PKCS12 keystore creation for the Certificate.
          If true, a file named `keystore.p12` will be created in the target
          Secret resource, encrypted using the password stored in
          `passwordSecretRef`.
          The keystore file will only be updated upon re-issuance.
          A file named `truststore.p12` will also be created in the target
          Secret resource, encrypted using the password stored in
          `passwordSecretRef` containing the issuing Certificate Authority
        type: boolean
      passwordSecretRef:
        $ref: '#/definitions/v1.CertificateSecretKeySelector'
        description: |-
          PasswordSecretRef is a reference to a key in a Secret resource
          containing the password used to encrypt the PKCS12 keystore.
    type: object
  v1.PersistentVolume:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sPersistentVolume'
    type: object
  v1.PersistentVolumeClaim:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sPersistentVolumeClaim'
    type: object
  v1.PersistentVolumeClaimCondition:
    properties:
      lastProbeTime:
        description: |-
          Last time we probed the condition.
          +optional
        type: string
      lastTransitionTime:
        description: |-
          Last time the condition transitioned from one status to another.
          +optional
        type: string
      message:
        description: |-
          Human-readable message indicating details about last transition.
          +optional
        type: string
      reason:
        description: |-
          Unique, this should be a short, machine understandable string that gives the reason
          for condition's last transition. If it reports "ResizeStarted" that means the underlying
          persistent volume is being resized.
          +optional
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  v1.PersistentVolumeClaimSpec:
    properties:
      accessModes:
        description: |-
          AccessModes contains the desired access modes the volume should have.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
          +optional
        items:
          type: string
        type: array
      dataSource:
        $ref: '#/definitions/v1.TypedLocalObjectReference'
        description: |-
          This field requires the VolumeSnapshotDataSource alpha feature gate to be
          enabled and currently VolumeSnapshot is the only supported data source.
          If the provisioner can support VolumeSnapshot data source, it will create
          a new volume and data will be restored to the volume at the same time.
          If the provisioner does not support VolumeSnapshot data source, volume will
          not be created and the failure will be reported as an event.
          In the future, we plan to support more data source types and the behavior
          of the provisioner may change.
          +optional
      resources:
        $ref: '#/definitions/v1.ResourceRequirements'
        description: |-
          Resources represents the minimum resources the volume should have.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
          +optional
      selector:
        $ref: '#/definitions/v1.LabelSelector'
        description: |-
          A label query over volumes to consider for binding.
          +optional
      storageClassName:
        description: |-
          Name of the StorageClass required by the claim.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
          +optional
        type: string
      volumeMode:
        description: |-
          volumeMode defines what type of volume is required by the claim.
          Value of Filesystem is implied when not included in claim spec.
          This is an alpha feature and may change in the future.
          +optional
        type: string
      volumeName:
        description: |-
          VolumeName is the binding reference to the PersistentVolume backing this claim.
          +optional
        type: string
    type: object
  v1.PersistentVolumeClaimStatus:
    properties:
      accessModes:
        description: |-
          AccessModes contains the actual access modes the volume backing the PVC has.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
          +optional
        items:
          type: string
        type: array
      capacity:
        $ref: '#/definitions/v1.ResourceList'
        description: |-
          Represents the actual resources of the underlying volume.
          +optional
      conditions:
        description: |-
          Current Condition of persistent volume claim. If underlying persistent volume is being
          resized then the Condition will be set to 'ResizeStarted'.
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.PersistentVolumeClaimCondition'
        type: array
      phase:
        description: |-
          Phase represents the current phase of PersistentVolumeClaim.
          +optional
        type: string
    type: object
  v1.PersistentVolumeClaimStruct:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.PersistentVolumeClaimSpec'
        description: |-
          Spec defines the desired characteristics of a volume requested by a pod author.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
          +optional
      status:
        $ref: '#/definitions/v1.PersistentVolumeClaimStatus'
        description: |-
          Status represents the current information/status of a persistent volume claim.
          Read-only.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
          +optional
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.PersistentVolumeClaimVolumeSource:
    properties:
      claimName:
        description: |-
          ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
        type: string
      readOnly:
        description: |-
          Will force the ReadOnly setting in VolumeMounts.
          Default false.
          +optional
        type: boolean
    type: object
  v1.PersistentVolumeSpec:
    properties:
      accessModes:
        description: |-
          AccessModes contains all ways the volume can be mounted.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes
          +optional
        items:
          type: string
        type: array
      awsElasticBlockStore:
        $ref: '#/definitions/v1.AWSElasticBlockStoreVolumeSource'
        description: |-
          AWSElasticBlockStore represents an AWS Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          +optional
      azureDisk:
        $ref: '#/definitions/v1.AzureDiskVolumeSource'
        description: |-
          AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
          +optional
      azureFile:
        $ref: '#/definitions/v1.AzureFilePersistentVolumeSource'
        description: |-
          AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
          +optional
      capacity:
        $ref: '#/definitions/v1.ResourceList'
        description: |-
          A description of the persistent volume's resources and capacity.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
          +optional
      cephfs:
        $ref: '#/definitions/v1.CephFSPersistentVolumeSource'
        description: |-
          CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
          +optional
      cinder:
        $ref: '#/definitions/v1.CinderPersistentVolumeSource'
        description: |-
          Cinder represents a cinder volume attached and mounted on kubelets host machine
          More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
          +optional
      claimRef:
        $ref: '#/definitions/v1.ObjectReference'
        description: |-
          ClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim.
          Expected to be non-nil when bound.
          claim.VolumeName is the authoritative bind between PV and PVC.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding
          +optional
      csi:
        $ref: '#/definitions/v1.CSIPersistentVolumeSource'
        description: |-
          CSI represents storage that handled by an external CSI driver (Beta feature).
          +optional
      fc:
        $ref: '#/definitions/v1.FCVolumeSource'
        description: |-
          FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
          +optional
      flexVolume:
        $ref: '#/definitions/v1.FlexPersistentVolumeSource'
        description: |-
          FlexVolume represents a generic volume resource that is
          provisioned/attached using an exec based plugin.
          +optional
      flocker:
        $ref: '#/definitions/v1.FlockerVolumeSource'
        description: |-
          Flocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running
          +optional
      gcePersistentDisk:
        $ref: '#/definitions/v1.GCEPersistentDiskVolumeSource'
        description: |-
          GCEPersistentDisk represents a GCE Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod. Provisioned by an admin.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
      glusterfs:
        $ref: '#/definitions/v1.GlusterfsVolumeSource'
        description: |-
          Glusterfs represents a Glusterfs volume that is attached to a host and
          exposed to the pod. Provisioned by an admin.
          More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md
          +optional
      hostPath:
        $ref: '#/definitions/v1.HostPathVolumeSource'
        description: |-
          HostPath represents a directory on the host.
          Provisioned by a developer or tester.
          This is useful for single-node development and testing only!
          On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          +optional
      iscsi:
        $ref: '#/definitions/v1.ISCSIPersistentVolumeSource'
        description: |-
          ISCSI represents an ISCSI Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod. Provisioned by an admin.
          +optional
      local:
        $ref: '#/definitions/v1.LocalVolumeSource'
        description: |-
          Local represents directly-attached storage with node affinity
          +optional
      mountOptions:
        description: |-
          A list of mount options, e.g. ["ro", "soft"]. Not validated - mount will
          simply fail if one is invalid.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options
          +optional
        items:
          type: string
        type: array
      nfs:
        $ref: '#/definitions/v1.NFSVolumeSource'
        description: |-
          NFS represents an NFS mount on the host. Provisioned by an admin.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          +optional
      nodeAffinity:
        $ref: '#/definitions/v1.VolumeNodeAffinity'
        description: |-
          NodeAffinity defines constraints that limit what nodes this volume can be accessed from.
          This field influences the scheduling of pods that use this volume.
          +optional
      persistentVolumeReclaimPolicy:
        description: |-
          What happens to a persistent volume when released from its claim.
          Valid options are Retain (default for manually created PersistentVolumes), Delete (default
          for dynamically provisioned PersistentVolumes), and Recycle (deprecated).
          Recycle must be supported by the volume plugin underlying this PersistentVolume.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming
          +optional
        type: string
      photonPersistentDisk:
        $ref: '#/definitions/v1.PhotonPersistentDiskVolumeSource'
        description: PhotonPersistentDisk represents a PhotonController persistent
          disk attached and mounted on kubelets host machine
      portworxVolume:
        $ref: '#/definitions/v1.PortworxVolumeSource'
        description: |-
          PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
          +optional
      quobyte:
        $ref: '#/definitions/v1.QuobyteVolumeSource'
        description: |-
          Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
          +optional
      rbd:
        $ref: '#/definitions/v1.RBDPersistentVolumeSource'
        description: |-
          RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md
          +optional
      scaleIO:
        $ref: '#/definitions/v1.ScaleIOPersistentVolumeSource'
        description: |-
          ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
          +optional
      storageClassName:
        description: |-
          Name of StorageClass to which this persistent volume belongs. Empty value
          means that this volume does not belong to any StorageClass.
          +optional
        type: string
      storageos:
        $ref: '#/definitions/v1.StorageOSPersistentVolumeSource'
        description: |-
          StorageOS represents a StorageOS volume that is attached to the kubelet's host machine and mounted into the pod
          More info: https://releases.k8s.io/HEAD/examples/volumes/storageos/README.md
          +optional
      volumeMode:
        description: |-
          volumeMode defines if a volume is intended to be used with a formatted filesystem
          or to remain in raw block state. Value of Filesystem is implied when not included in spec.
          This is an alpha feature and may change in the future.
          +optional
        type: string
      vsphereVolume:
        $ref: '#/definitions/v1.VsphereVirtualDiskVolumeSource'
        description: |-
          VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
          +optional
    type: object
  v1.PersistentVolumeStatus:
    properties:
      message:
        description: |-
          A human-readable message indicating details about why the volume is in this state.
          +optional
        type: string
      phase:
        description: |-
          Phase indicates if a volume is available, bound to a claim, or released by a claim.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase
          +optional
        type: string
      reason:
        description: |-
          Reason is a brief CamelCase string that describes any failure and is meant
          for machine parsing and tidy display in the CLI.
          +optional
        type: string
    type: object
  v1.PhotonPersistentDiskVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        type: string
      pdID:
        description: ID that identifies Photon Controller persistent disk
        type: string
    type: object
  v1.Pod:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sPod'
    type: object
  v1.PodAffinity:
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        description: |-
          The scheduler will prefer to schedule pods to nodes that satisfy
          the affinity expressions specified by this field, but it may choose
          a node that violates one or more of the expressions. The node that is
          most preferred is the one with the greatest sum of weights, i.e.
          for each node that meets all of the scheduling requirements (resource
          request, requiredDuringScheduling affinity expressions, etc.),
          compute a sum by iterating through the elements of this field and adding
          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
          node(s) with the highest sum are the most preferred.
          +optional
        items:
          $ref: '#/definitions/v1.WeightedPodAffinityTerm'
        type: array
      requiredDuringSchedulingIgnoredDuringExecution:
        description: |-
          If the affinity requirements specified by this field are not met at
          scheduling time, the pod will not be scheduled onto the node.
          If the affinity requirements specified by this field cease to be met
          at some point during pod execution (e.g. due to a pod label Update), the
          system may or may not try to eventually evict the pod from its node.
          When there are multiple elements, the lists of nodes corresponding to each
          podAffinityTerm are intersected, i.e. all terms must be satisfied.
          +optional
        items:
          $ref: '#/definitions/v1.PodAffinityTerm'
        type: array
    type: object
  v1.PodAffinityTerm:
    properties:
      labelSelector:
        $ref: '#/definitions/v1.LabelSelector'
        description: |-
          A label query over a set of resources, in this case pods.
          +optional
      namespaces:
        description: |-
          namespaces specifies which namespaces the labelSelector applies to (matches against);
          null or empty list means "this pod's namespace"
          +optional
        items:
          type: string
        type: array
      topologyKey:
        description: |-
          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
          the labelSelector in the specified namespaces, where co-located is defined as running on a node
          whose value of the label with key topologyKey matches that of any node on which any of the
          selected pods is running.
          Empty topologyKey is not allowed.
        type: string
    type: object
  v1.PodAntiAffinity:
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        description: |-
          The scheduler will prefer to schedule pods to nodes that satisfy
          the anti-affinity expressions specified by this field, but it may choose
          a node that violates one or more of the expressions. The node that is
          most preferred is the one with the greatest sum of weights, i.e.
          for each node that meets all of the scheduling requirements (resource
          request, requiredDuringScheduling anti-affinity expressions, etc.),
          compute a sum by iterating through the elements of this field and adding
          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
          node(s) with the highest sum are the most preferred.
          +optional
        items:
          $ref: '#/definitions/v1.WeightedPodAffinityTerm'
        type: array
      requiredDuringSchedulingIgnoredDuringExecution:
        description: |-
          If the anti-affinity requirements specified by this field are not met at
          scheduling time, the pod will not be scheduled onto the node.
          If the anti-affinity requirements specified by this field cease to be met
          at some point during pod execution (e.g. due to a pod label Update), the
          system may or may not try to eventually evict the pod from its node.
          When there are multiple elements, the lists of nodes corresponding to each
          podAffinityTerm are intersected, i.e. all terms must be satisfied.
          +optional
        items:
          $ref: '#/definitions/v1.PodAffinityTerm'
        type: array
    type: object
  v1.PodCondition:
    properties:
      lastProbeTime:
        description: |-
          Last time we probed the condition.
          +optional
        type: string
      lastTransitionTime:
        description: |-
          Last time the condition transitioned from one status to another.
          +optional
        type: string
      message:
        description: |-
          Human-readable message indicating details about last transition.
          +optional
        type: string
      reason:
        description: |-
          Unique, one-word, CamelCase reason for the condition's last transition.
          +optional
        type: string
      status:
        description: |-
          Status is the status of the condition.
          Can be True, False, Unknown.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
        type: string
      type:
        description: |-
          Type is the type of the condition.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
        type: string
    type: object
  v1.PodDNSConfig:
    properties:
      nameservers:
        description: |-
          A list of DNS name server IP addresses.
          This will be appended to the base nameservers generated from DNSPolicy.
          Duplicated nameservers will be removed.
          +optional
        items:
          type: string
        type: array
      options:
        description: |-
          A list of DNS resolver options.
          This will be merged with the base options generated from DNSPolicy.
          Duplicated entries will be removed. Resolution options given in Options
          will override those that appear in the base DNSPolicy.
          +optional
        items:
          $ref: '#/definitions/v1.PodDNSConfigOption'
        type: array
      searches:
        description: |-
          A list of DNS search domains for host-name lookup.
          This will be appended to the base search paths generated from DNSPolicy.
          Duplicated search paths will be removed.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.PodDNSConfigOption:
    properties:
      name:
        description: Required.
        type: string
      value:
        description: +optional
        type: string
    type: object
  v1.PodReadinessGate:
    properties:
      conditionType:
        description: ConditionType refers to a condition in the pod's condition list
          with matching type.
        type: string
    type: object
  v1.PodSecurityContext:
    properties:
      fsGroup:
        description: |-
          A special supplemental group that applies to all containers in a pod.
          Some volume types allow the Kubelet to change the ownership of that volume
          to be owned by the pod:

          1. The owning GID will be the FSGroup
          2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
          3. The permission bits are OR'd with rw-rw----

          If unset, the Kubelet will not modify the ownership and permissions of any volume.
          +optional
        type: integer
      runAsGroup:
        description: |-
          The GID to run the entrypoint of the container process.
          Uses runtime default if unset.
          May also be set in SecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence
          for that container.
          +optional
        type: integer
      runAsNonRoot:
        description: |-
          Indicates that the container must run as a non-root user.
          If true, the Kubelet will validate the image at runtime to ensure that it
          does not run as UID 0 (root) and fail to start the container if it does.
          If unset or false, no such validation will be performed.
          May also be set in SecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
        type: boolean
      runAsUser:
        description: |-
          The UID to run the entrypoint of the container process.
          Defaults to user specified in image metadata if unspecified.
          May also be set in SecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence
          for that container.
          +optional
        type: integer
      seLinuxOptions:
        $ref: '#/definitions/v1.SELinuxOptions'
        description: |-
          The SELinux context to be applied to all containers.
          If unspecified, the container runtime will allocate a random SELinux context for each
          container.  May also be set in SecurityContext.  If set in
          both SecurityContext and PodSecurityContext, the value specified in SecurityContext
          takes precedence for that container.
          +optional
      supplementalGroups:
        description: |-
          A list of groups applied to the first process run in each container, in addition
          to the container's primary GID.  If unspecified, no groups will be added to
          any container.
          +optional
        items:
          type: integer
        type: array
      sysctls:
        description: |-
          Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
          sysctls (by the container runtime) might fail to launch.
          +optional
        items:
          $ref: '#/definitions/v1.Sysctl'
        type: array
    type: object
  v1.PodSpec:
    properties:
      activeDeadlineSeconds:
        description: |-
          Optional duration in seconds the pod may be active on the node relative to
          StartTime before the system will actively try to mark it failed and kill associated containers.
          Value must be a positive integer.
          +optional
        type: integer
      affinity:
        $ref: '#/definitions/v1.Affinity'
        description: |-
          If specified, the pod's scheduling constraints
          +optional
      automountServiceAccountToken:
        description: |-
          AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
          +optional
        type: boolean
      containers:
        description: |-
          List of containers belonging to the pod.
          Containers cannot currently be added or removed.
          There must be at least one container in a Pod.
          Cannot be updated.
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.Container'
        type: array
      dnsConfig:
        $ref: '#/definitions/v1.PodDNSConfig'
        description: |-
          Specifies the DNS parameters of a pod.
          Parameters specified here will be merged to the generated DNS
          configuration based on DNSPolicy.
          +optional
      dnsPolicy:
        description: |-
          Set DNS policy for the pod.
          Defaults to "ClusterFirst".
          Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
          DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
          To have DNS options set along with hostNetwork, you have to specify DNS policy
          explicitly to 'ClusterFirstWithHostNet'.
          +optional
        type: string
      hostAliases:
        description: |-
          HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
          file if specified. This is only valid for non-hostNetwork pods.
          +optional
          +patchMergeKey=ip
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.HostAlias'
        type: array
      hostIPC:
        description: |-
          Use the host's ipc namespace.
          Optional: Default to false.
          +k8s:conversion-gen=false
          +optional
        type: boolean
      hostNetwork:
        description: |-
          Host networking requested for this pod. Use the host's network namespace.
          If this option is set, the ports that will be used must be specified.
          Default to false.
          +k8s:conversion-gen=false
          +optional
        type: boolean
      hostPID:
        description: |-
          Use the host's pid namespace.
          Optional: Default to false.
          +k8s:conversion-gen=false
          +optional
        type: boolean
      hostname:
        description: |-
          Specifies the hostname of the Pod
          If not specified, the pod's hostname will be set to a system-defined value.
          +optional
        type: string
      imagePullSecrets:
        description: |-
          ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
          If specified, these secrets will be passed to individual puller implementations for them to use. For example,
          in the case of docker, only DockerConfig type secrets are honored.
          More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
          +optional
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.LocalObjectReference'
        type: array
      initContainers:
        description: |-
          List of initialization containers belonging to the pod.
          Init containers are executed in order prior to containers being started. If any
          init container fails, the pod is considered to have failed and is handled according
          to its restartPolicy. The name for an init container or normal container must be
          unique among all containers.
          Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes.
          The resourceRequirements of an init container are taken into account during scheduling
          by finding the highest request/limit for each resource type, and then using the max of
          of that value or the sum of the normal containers. Limits are applied to init containers
          in a similar fashion.
          Init containers cannot currently be added or removed.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.Container'
        type: array
      nodeName:
        description: |-
          NodeName is a request to schedule this pod onto a specific node. If it is non-empty,
          the scheduler simply schedules this pod onto that node, assuming that it fits resource
          requirements.
          +optional
        type: string
      nodeSelector:
        additionalProperties:
          type: string
        description: |-
          NodeSelector is a selector which must be true for the pod to fit on a node.
          Selector which must match a node's labels for the pod to be scheduled on that node.
          More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
          +optional
        type: object
      priority:
        description: |-
          The priority value. Various system components use this field to find the
          priority of the pod. When Priority Admission Controller is enabled, it
          prevents users from setting this field. The admission controller populates
          this field from PriorityClassName.
          The higher the value, the higher the priority.
          +optional
        type: integer
      priorityClassName:
        description: |-
          If specified, indicates the pod's priority. "system-node-critical" and
          "system-cluster-critical" are two special keywords which indicate the
          highest priorities with the former being the highest priority. Any other
          name must be defined by creating a PriorityClass object with that name.
          If not specified, the pod priority will be default or zero if there is no
          default.
          +optional
        type: string
      readinessGates:
        description: |-
          If specified, all readiness gates will be evaluated for pod readiness.
          A pod is ready when all its containers are ready AND
          all conditions specified in the readiness gates have status equal to "True"
          More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md
          +optional
        items:
          $ref: '#/definitions/v1.PodReadinessGate'
        type: array
      restartPolicy:
        description: |-
          Restart policy for all containers within the pod.
          One of Always, OnFailure, Never.
          Default to Always.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
          +optional
        type: string
      runtimeClassName:
        description: |-
          RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
          to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
          If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
          empty definition that uses the default runtime handler.
          More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md
          This is an alpha feature and may change in the future.
          +optional
        type: string
      schedulerName:
        description: |-
          If specified, the pod will be dispatched by specified scheduler.
          If not specified, the pod will be dispatched by default scheduler.
          +optional
        type: string
      securityContext:
        $ref: '#/definitions/v1.PodSecurityContext'
        description: |-
          SecurityContext holds pod-level security attributes and common container settings.
          Optional: Defaults to empty.  See type description for default values of each field.
          +optional
      serviceAccount:
        description: |-
          DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.
          Deprecated: Use serviceAccountName instead.
          +k8s:conversion-gen=false
          +optional
        type: string
      serviceAccountName:
        description: |-
          ServiceAccountName is the name of the ServiceAccount to use to run this pod.
          More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
          +optional
        type: string
      shareProcessNamespace:
        description: |-
          Share a single process namespace between all of the containers in a pod.
          When this is set containers will be able to view and signal processes from other containers
          in the same pod, and the first process in each container will not be assigned PID 1.
          HostPID and ShareProcessNamespace cannot both be set.
          Optional: Default to false.
          This field is beta-level and may be disabled with the PodShareProcessNamespace feature.
          +k8s:conversion-gen=false
          +optional
        type: boolean
      subdomain:
        description: |-
          If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
          If not specified, the pod will not have a domainname at all.
          +optional
        type: string
      terminationGracePeriodSeconds:
        description: |-
          Optional duration in seconds the pod needs to terminate gracefully. May be decreased in Delete request.
          Value must be non-negative integer. The value zero indicates Delete immediately.
          If this value is nil, the default grace period will be used instead.
          The grace period is the duration in seconds after the processes running in the pod are sent
          a termination signal and the time when the processes are forcibly halted with a kill signal.
          Set this value longer than the expected cleanup time for your process.
          Defaults to 30 seconds.
          +optional
        type: integer
      tolerations:
        description: |-
          If specified, the pod's tolerations.
          +optional
        items:
          $ref: '#/definitions/v1.Toleration'
        type: array
      volumes:
        description: |-
          List of volumes that can be mounted by containers belonging to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes
          +optional
          +patchMergeKey=name
          +patchStrategy=merge,retainKeys
        items:
          $ref: '#/definitions/v1.Volume'
        type: array
    type: object
  v1.PodStatus:
    properties:
      conditions:
        description: |-
          Current service state of pod.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.PodCondition'
        type: array
      containerStatuses:
        description: |-
          The list has one entry per container in the manifest. Each entry is currently the output
          of `docker inspect`.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
          +optional
        items:
          $ref: '#/definitions/v1.ContainerStatus'
        type: array
      hostIP:
        description: |-
          IP address of the host to which the pod is assigned. Empty if not yet scheduled.
          +optional
        type: string
      initContainerStatuses:
        description: |-
          The list has one entry per init container in the manifest. The most recent successful
          init container will have ready = true, the most recently started container will have
          startTime set.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
        items:
          $ref: '#/definitions/v1.ContainerStatus'
        type: array
      message:
        description: |-
          A human readable message indicating details about why the pod is in this condition.
          +optional
        type: string
      nominatedNodeName:
        description: |-
          nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be
          scheduled right away as preemption victims receive their graceful termination periods.
          This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide
          to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to
          give the resources on this node to a higher priority pod that is created after preemption.
          As a result, this field may be different than PodSpec.nodeName when the pod is
          scheduled.
          +optional
        type: string
      phase:
        description: |-
          The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle.
          The conditions array, the reason and message fields, and the individual container status
          arrays contain more detail about the pod's status.
          There are five possible phase values:

          Pending: The pod has been accepted by the Kubernetes system, but one or more of the
          container images has not been created. This includes time before being scheduled as
          well as time spent downloading images over the network, which could take a while.
          Running: The pod has been bound to a node, and all of the containers have been created.
          At least one container is still running, or is in the process of starting or restarting.
          Succeeded: All containers in the pod have terminated in success, and will not be restarted.
          Failed: All containers in the pod have terminated, and at least one container has
          terminated in failure. The container either exited with non-zero status or was terminated
          by the system.
          Unknown: For some reason the state of the pod could not be obtained, typically due to an
          error in communicating with the host of the pod.

          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase
          +optional
        type: string
      podIP:
        description: |-
          IP address allocated to the pod. Routable at least within the cluster.
          Empty if not yet allocated.
          +optional
        type: string
      qosClass:
        description: |-
          The Quality of Service (QOS) classification assigned to the pod based on resource requirements
          See PodQOSClass type for available QOS classes
          More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md
          +optional
        type: string
      reason:
        description: |-
          A brief CamelCase message indicating details about why the pod is in this state.
          e.g. 'Evicted'
          +optional
        type: string
      startTime:
        description: |-
          RFC 3339 date and time at which the object was acknowledged by the Kubelet.
          This is before the Kubelet pulled the container image(s) for the pod.
          +optional
        type: string
    type: object
  v1.PodTemplateSpec:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1.PodSpec'
        description: |-
          Specification of the desired behavior of the pod.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
          +optional
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.PolicyRule:
    properties:
      apiGroups:
        description: |-
          APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
          the enumerated resources in any API group will be allowed.
          +optional
        items:
          type: string
        type: array
      nonResourceURLs:
        description: |-
          NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
          Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
          Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
          +optional
        items:
          type: string
        type: array
      resourceNames:
        description: |-
          ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
          +optional
        items:
          type: string
        type: array
      resources:
        description: |-
          Resources is a list of resources this rule applies to.  ResourceAll represents all resources.
          +optional
        items:
          type: string
        type: array
      verbs:
        description: Verbs is a list of Verbs that apply to ALL the ResourceKinds
          and AttributeRestrictions contained in this rule.  VerbAll represents all
          kinds.
        items:
          type: string
        type: array
    type: object
  v1.PortworxVolumeSource:
    properties:
      fsType:
        description: |-
          FSType represents the filesystem type to mount
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      volumeID:
        description: VolumeID uniquely identifies a Portworx volume
        type: string
    type: object
  v1.PreferredSchedulingTerm:
    properties:
      preference:
        $ref: '#/definitions/v1.NodeSelectorTerm'
        description: A node selector term, associated with the corresponding weight.
      weight:
        description: Weight associated with matching the corresponding nodeSelectorTerm,
          in the range 1-100.
        type: integer
    type: object
  v1.Probe:
    properties:
      exec:
        $ref: '#/definitions/v1.ExecAction'
        description: |-
          One and only one of the following should be specified.
          Exec specifies the action to take.
          +optional
      failureThreshold:
        description: |-
          Minimum consecutive failures for the probe to be considered failed after having succeeded.
          Defaults to 3. Minimum value is 1.
          +optional
        type: integer
      httpGet:
        $ref: '#/definitions/v1.HTTPGetAction'
        description: |-
          HTTPGet specifies the http request to perform.
          +optional
      initialDelaySeconds:
        description: |-
          Number of seconds after the container has started before liveness probes are initiated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
        type: integer
      periodSeconds:
        description: |-
          How often (in seconds) to perform the probe.
          Default to 10 seconds. Minimum value is 1.
          +optional
        type: integer
      successThreshold:
        description: |-
          Minimum consecutive successes for the probe to be considered successful after having failed.
          Defaults to 1. Must be 1 for liveness. Minimum value is 1.
          +optional
        type: integer
      tcpSocket:
        $ref: '#/definitions/v1.TCPSocketAction'
        description: |-
          TCPSocket specifies an action involving a TCP port.
          TCP hooks not yet supported
          TODO: implement a realistic TCP lifecycle hook
          +optional
      timeoutSeconds:
        description: |-
          Number of seconds after which the probe times out.
          Defaults to 1 second. Minimum value is 1.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
        type: integer
    type: object
  v1.ProjectedVolumeSource:
    properties:
      defaultMode:
        description: |-
          Mode bits to use on created files by default. Must be a value between
          0 and 0777.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      sources:
        description: list of volume projections
        items:
          $ref: '#/definitions/v1.VolumeProjection'
        type: array
    type: object
  v1.QuobyteVolumeSource:
    properties:
      group:
        description: |-
          Group to map volume access to
          Default is no group
          +optional
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.
          Defaults to false.
          +optional
        type: boolean
      registry:
        description: |-
          Registry represents a single or multiple Quobyte Registry services
          specified as a string as host:port pair (multiple entries are separated with commas)
          which acts as the central registry for volumes
        type: string
      user:
        description: |-
          User to map volume access to
          Defaults to serivceaccount user
          +optional
        type: string
      volume:
        description: Volume is a string that references an already created Quobyte
          volume by name.
        type: string
    type: object
  v1.RBDPersistentVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      image:
        description: |-
          The rados image name.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
        type: string
      keyring:
        description: |-
          Keyring is the path to key ring for RBDUser.
          Default is /etc/ceph/keyring.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
      monitors:
        description: |-
          A collection of Ceph monitors.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
        items:
          type: string
        type: array
      pool:
        description: |-
          The rados pool name.
          Default is rbd.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.SecretReference'
        description: |-
          SecretRef is name of the authentication secret for RBDUser. If provided
          overrides keyring.
          Default is nil.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          +optional
      user:
        description: |-
          The rados user name.
          Default is admin.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
    type: object
  v1.RBDVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      image:
        description: |-
          The rados image name.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
        type: string
      keyring:
        description: |-
          Keyring is the path to key ring for RBDUser.
          Default is /etc/ceph/keyring.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
      monitors:
        description: |-
          A collection of Ceph monitors.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
        items:
          type: string
        type: array
      pool:
        description: |-
          The rados pool name.
          Default is rbd.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          SecretRef is name of the authentication secret for RBDUser. If provided
          overrides keyring.
          Default is nil.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          +optional
      user:
        description: |-
          The rados user name.
          Default is admin.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
    type: object
  v1.ReplicaSet:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sReplicaSet'
    type: object
  v1.ReplicaSetCondition:
    properties:
      lastTransitionTime:
        description: |-
          The last time the condition transitioned from one status to another.
          +optional
        type: string
      message:
        description: |-
          A human readable message indicating details about the transition.
          +optional
        type: string
      reason:
        description: |-
          The reason for the condition's last transition.
          +optional
        type: string
      status:
        description: Status of the condition, one of True, False, Unknown.
        type: string
      type:
        description: Type of replica set condition.
        type: string
    type: object
  v1.ReplicaSetSpec:
    properties:
      minReadySeconds:
        description: |-
          Minimum number of seconds for which a newly created pod should be ready
          without any of its container crashing, for it to be considered available.
          Defaults to 0 (pod will be considered available as soon as it is ready)
          +optional
        type: integer
      replicas:
        description: |-
          Replicas is the number of desired replicas.
          This is a pointer to distinguish between explicit zero and unspecified.
          Defaults to 1.
          More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
          +optional
        type: integer
      selector:
        $ref: '#/definitions/v1.LabelSelector'
        description: |-
          Selector is a label query over pods that should match the replica count.
          Label keys and values that must match in order to be controlled by this replica set.
          It must match the pod template's labels.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
      template:
        $ref: '#/definitions/v1.PodTemplateSpec'
        description: |-
          Template is the object that describes the pod that will be created if
          insufficient replicas are detected.
          More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
          +optional
    type: object
  v1.ReplicaSetStatus:
    properties:
      availableReplicas:
        description: |-
          The number of available replicas (ready for at least minReadySeconds) for this replica set.
          +optional
        type: integer
      conditions:
        description: |-
          Represents the latest available observations of a replica set's current state.
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.ReplicaSetCondition'
        type: array
      fullyLabeledReplicas:
        description: |-
          The number of pods that have labels matching the labels of the pod template of the replicaset.
          +optional
        type: integer
      observedGeneration:
        description: |-
          ObservedGeneration reflects the generation of the most recently observed ReplicaSet.
          +optional
        type: integer
      readyReplicas:
        description: |-
          The number of ready replicas for this replica set.
          +optional
        type: integer
      replicas:
        description: |-
          Replicas is the most recently oberved number of replicas.
          More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
        type: integer
    type: object
  v1.ResourceFieldSelector:
    properties:
      containerName:
        description: |-
          Container name: required for volumes, optional for env vars
          +optional
        type: string
      divisor:
        description: |-
          Specifies the output format of the exposed resources, defaults to "1"
          +optional
        type: string
      resource:
        description: 'Required: resource to select'
        type: string
    type: object
  v1.ResourceList:
    additionalProperties:
      type: string
    type: object
  v1.ResourceRequirements:
    properties:
      limits:
        $ref: '#/definitions/v1.ResourceList'
        description: |-
          Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
          +optional
      requests:
        $ref: '#/definitions/v1.ResourceList'
        description: |-
          Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
          otherwise to an implementation-defined value.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
          +optional
    type: object
  v1.Role:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sRole'
    type: object
  v1.RoleBinding:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sRoleBinding'
    type: object
  v1.RoleRef:
    properties:
      apiGroup:
        description: APIGroup is the group for the resource being referenced
        type: string
      kind:
        description: Kind is the type of resource being referenced
        type: string
      name:
        description: Name is the name of resource being referenced
        type: string
    type: object
  v1.RollingUpdateDaemonSet:
    properties:
      maxUnavailable:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          The maximum number of DaemonSet pods that can be unavailable during the
          Update. Value can be an absolute number (ex: 5) or a percentage of total
          number of DaemonSet pods at the start of the Update (ex: 10%). Absolute
          number is calculated from percentage by rounding up.
          This cannot be 0.
          Default value is 1.
          Example: when this is set to 30%, at most 30% of the total number of nodes
          that should be running the daemon pod (i.e. status.desiredNumberScheduled)
          can have their pods stopped for an Update at any given
          time. The Update starts by stopping at most 30% of those DaemonSet pods
          and then brings up new DaemonSet pods in their place. Once the new pods
          are available, it then proceeds onto other DaemonSet pods, thus ensuring
          that at least 70% of original number of DaemonSet pods are available at
          all times during the Update.
          +optional
    type: object
  v1.RollingUpdateDeployment:
    properties:
      maxSurge:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          The maximum number of pods that can be scheduled above the desired number of
          pods.
          Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
          This can not be 0 if MaxUnavailable is 0.
          Absolute number is calculated from percentage by rounding up.
          Defaults to 25%.
          Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
          the rolling Update starts, such that the total number of old and new pods do not exceed
          130% of desired pods. Once old pods have been killed,
          new ReplicaSet can be scaled up further, ensuring that total number of pods running
          at any time during the Update is at most 130% of desired pods.
          +optional
      maxUnavailable:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          The maximum number of pods that can be unavailable during the Update.
          Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
          Absolute number is calculated from percentage by rounding down.
          This can not be 0 if MaxSurge is 0.
          Defaults to 25%.
          Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
          immediately when the rolling Update starts. Once new pods are ready, old ReplicaSet
          can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
          that the total number of pods available at all times during the Update is at
          least 70% of desired pods.
          +optional
    type: object
  v1.RollingUpdateStatefulSetStrategy:
    properties:
      partition:
        description: |-
          Partition indicates the ordinal at which the StatefulSet should be
          partitioned.
          Default value is 0.
          +optional
        type: integer
    type: object
  v1.SELinuxOptions:
    properties:
      level:
        description: |-
          Level is SELinux level label that applies to the container.
          +optional
        type: string
      role:
        description: |-
          Role is a SELinux role label that applies to the container.
          +optional
        type: string
      type:
        description: |-
          Type is a SELinux type label that applies to the container.
          +optional
        type: string
      user:
        description: |-
          User is a SELinux user label that applies to the container.
          +optional
        type: string
    type: object
  v1.ScaleIOPersistentVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs".
          Default is "xfs"
          +optional
        type: string
      gateway:
        description: The host address of the ScaleIO API Gateway.
        type: string
      protectionDomain:
        description: |-
          The name of the ScaleIO Protection Domain for the configured storage.
          +optional
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.SecretReference'
        description: |-
          SecretRef references to the secret for ScaleIO user and other
          sensitive information. If this is not provided, Login operation will fail.
      sslEnabled:
        description: |-
          Flag to enable/disable SSL communication with Gateway, default false
          +optional
        type: boolean
      storageMode:
        description: |-
          Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
          Default is ThinProvisioned.
          +optional
        type: string
      storagePool:
        description: |-
          The ScaleIO Storage Pool associated with the protection domain.
          +optional
        type: string
      system:
        description: The name of the storage system as configured in ScaleIO.
        type: string
      volumeName:
        description: |-
          The name of a volume already created in the ScaleIO system
          that is associated with this volume source.
        type: string
    type: object
  v1.ScaleIOVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs".
          Default is "xfs".
          +optional
        type: string
      gateway:
        description: The host address of the ScaleIO API Gateway.
        type: string
      protectionDomain:
        description: |-
          The name of the ScaleIO Protection Domain for the configured storage.
          +optional
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          SecretRef references to the secret for ScaleIO user and other
          sensitive information. If this is not provided, Login operation will fail.
      sslEnabled:
        description: |-
          Flag to enable/disable SSL communication with Gateway, default false
          +optional
        type: boolean
      storageMode:
        description: |-
          Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
          Default is ThinProvisioned.
          +optional
        type: string
      storagePool:
        description: |-
          The ScaleIO Storage Pool associated with the protection domain.
          +optional
        type: string
      system:
        description: The name of the storage system as configured in ScaleIO.
        type: string
      volumeName:
        description: |-
          The name of a volume already created in the ScaleIO system
          that is associated with this volume source.
        type: string
    type: object
  v1.Secret:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sSecret'
    type: object
  v1.SecretEnvSource:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the Secret must be defined
          +optional
        type: boolean
    type: object
  v1.SecretKeySelector:
    properties:
      key:
        description: The key of the secret to select from.  Must be a valid secret
          key.
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the Secret or it's key must be defined
          +optional
        type: boolean
    type: object
  v1.SecretProjection:
    properties:
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          Secret will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the Secret,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the Secret or its key must be defined
          +optional
        type: boolean
    type: object
  v1.SecretReference:
    properties:
      name:
        description: |-
          Name is unique within a namespace to reference a secret resource.
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which the secret name must be unique.
          +optional
        type: string
    type: object
  v1.SecretVolumeSource:
    properties:
      defaultMode:
        description: |-
          Optional: mode bits to use on created files by default. Must be a
          value between 0 and 0777. Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          Secret will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the Secret,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      optional:
        description: |-
          Specify whether the Secret or it's keys must be defined
          +optional
        type: boolean
      secretName:
        description: |-
          Name of the secret in the pod's namespace to use.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
          +optional
        type: string
    type: object
  v1.SecurityContext:
    properties:
      allowPrivilegeEscalation:
        description: |-
          AllowPrivilegeEscalation controls whether a process can gain more
          privileges than its parent process. This bool directly controls if
          the no_new_privs flag will be set on the container process.
          AllowPrivilegeEscalation is true always when the container is:
          1) run as Privileged
          2) has CAP_SYS_ADMIN
          +optional
        type: boolean
      capabilities:
        $ref: '#/definitions/v1.Capabilities'
        description: |-
          The capabilities to add/drop when running containers.
          Defaults to the default set of capabilities granted by the container runtime.
          +optional
      privileged:
        description: |-
          Run container in privileged mode.
          Processes in privileged containers are essentially equivalent to root on the host.
          Defaults to false.
          +optional
        type: boolean
      procMount:
        description: |-
          procMount denotes the type of proc mount to use for the containers.
          The default is DefaultProcMount which uses the container runtime defaults for
          readonly paths and masked paths.
          This requires the ProcMountType feature flag to be enabled.
          +optional
        type: string
      readOnlyRootFilesystem:
        description: |-
          Whether this container has a read-only root filesystem.
          Default is false.
          +optional
        type: boolean
      runAsGroup:
        description: |-
          The GID to run the entrypoint of the container process.
          Uses runtime default if unset.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
        type: integer
      runAsNonRoot:
        description: |-
          Indicates that the container must run as a non-root user.
          If true, the Kubelet will validate the image at runtime to ensure that it
          does not run as UID 0 (root) and fail to start the container if it does.
          If unset or false, no such validation will be performed.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
        type: boolean
      runAsUser:
        description: |-
          The UID to run the entrypoint of the container process.
          Defaults to user specified in image metadata if unspecified.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
        type: integer
      seLinuxOptions:
        $ref: '#/definitions/v1.SELinuxOptions'
        description: |-
          The SELinux context to be applied to the container.
          If unspecified, the container runtime will allocate a random SELinux context for each
          container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
    type: object
  v1.Service:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sService'
    type: object
  v1.ServiceAccount:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sServiceAccount'
    type: object
  v1.ServiceAccountTokenProjection:
    properties:
      audience:
        description: |-
          Audience is the intended audience of the token. A recipient of a token
          must identify itself with an identifier specified in the audience of the
          token, and otherwise should reject the token. The audience defaults to the
          identifier of the apiserver.
          +optional
        type: string
      expirationSeconds:
        description: |-
          ExpirationSeconds is the requested duration of validity of the service
          account token. As the token approaches expiration, the kubelet volume
          plugin will proactively rotate the service account token. The kubelet will
          start trying to rotate the token if the token is older than 80 percent of
          its time to live or if the token is older than 24 hours.Defaults to 1 hour
          and must be at least 10 minutes.
          +optional
        type: integer
      path:
        description: |-
          Path is the path relative to the mount point of the file to project the
          token into.
        type: string
    type: object
  v1.ServicePort:
    properties:
      name:
        description: |-
          The name of this port within the service. This must be a DNS_LABEL.
          All ports within a ServiceSpec must have unique names. This maps to
          the 'Name' field in EndpointPort objects.
          Optional if only one ServicePort is defined on this service.
          +optional
        type: string
      nodePort:
        description: |-
          The port on each node on which this service is exposed when type=NodePort or LoadBalancer.
          Usually assigned by the system. If specified, it will be allocated to the service
          if unused or else creation of the service will fail.
          Default is to auto-allocate a port if the ServiceType of this Service requires one.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
          +optional
        type: integer
      port:
        description: The port that will be exposed by this service.
        type: integer
      protocol:
        description: |-
          The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
          Default is TCP.
          +optional
        type: string
      targetPort:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Number or name of the port to access on the pods targeted by the service.
          Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
          If this is a string, it will be looked up as a named port in the
          target Pod's container ports. If this is not specified, the value
          of the 'port' field is used (an identity map).
          This field is ignored for services with clusterIP=None, and should be
          omitted or set equal to the 'port' field.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
          +optional
    type: object
  v1.ServiceSpec:
    properties:
      clusterIP:
        description: |-
          clusterIP is the IP address of the service and is usually assigned
          randomly by the master. If an address is specified manually and is not in
          use by others, it will be allocated to the service; otherwise, creation
          of the service will fail. This field can not be changed through updates.
          Valid values are "None", empty string (""), or a valid IP address. "None"
          can be specified for headless services when proxying is not required.
          Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if
          type is ExternalName.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +optional
        type: string
      externalIPs:
        description: |-
          externalIPs is a list of IP addresses for which nodes in the cluster
          will also accept traffic for this service.  These IPs are not managed by
          Kubernetes.  The user is responsible for ensuring that traffic arrives
          at a node with this IP.  A common example is external load-balancers
          that are not part of the Kubernetes system.
          +optional
        items:
          type: string
        type: array
      externalName:
        description: |-
          externalName is the external reference that kubedns or equivalent will
          return as a CNAME record for this service. No proxying will be involved.
          Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
          and requires Type to be ExternalName.
          +optional
        type: string
      externalTrafficPolicy:
        description: |-
          externalTrafficPolicy denotes if this Service desires to route external
          traffic to node-local or cluster-wide endpoints. "Local" preserves the
          client source IP and avoids a second hop for LoadBalancer and Nodeport
          type services, but risks potentially imbalanced traffic spreading.
          "Cluster" obscures the client source IP and may cause a second hop to
          another node, but should have good overall load-spreading.
          +optional
        type: string
      healthCheckNodePort:
        description: |-
          healthCheckNodePort specifies the healthcheck nodePort for the service.
          If not specified, HealthCheckNodePort is created by the service api
          backend with the allocated nodePort. Will use user-specified nodePort value
          if specified by the client. Only effects when Type is set to LoadBalancer
          and ExternalTrafficPolicy is set to Local.
          +optional
        type: integer
      loadBalancerIP:
        description: |-
          Only applies to Service Type: LoadBalancer
          LoadBalancer will get created with the IP specified in this field.
          This feature depends on whether the underlying cloud-provider supports specifying
          the loadBalancerIP when a load balancer is created.
          This field will be ignored if the cloud-provider does not support the feature.
          +optional
        type: string
      loadBalancerSourceRanges:
        description: |-
          If specified and supported by the platform, this will restrict traffic through the cloud-provider
          load-balancer will be restricted to the specified client IPs. This field will be ignored if the
          cloud-provider does not support the feature."
          More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
          +optional
        items:
          type: string
        type: array
      ports:
        description: |-
          The list of ports that are exposed by this service.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +patchMergeKey=port
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.ServicePort'
        type: array
      publishNotReadyAddresses:
        description: |-
          publishNotReadyAddresses, when set to true, indicates that DNS implementations
          must publish the notReadyAddresses of subsets for the Endpoints associated with
          the Service. The default value is false.
          The primary use case for setting this field is to use a StatefulSet's Headless Service
          to propagate SRV records for its Pods without respect to their readiness for purpose
          of peer discovery.
          +optional
        type: boolean
      selector:
        additionalProperties:
          type: string
        description: |-
          Route service traffic to pods with label keys and values matching this
          selector. If empty or not present, the service is assumed to have an
          external process managing its endpoints, which Kubernetes will not
          modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
          Ignored if type is ExternalName.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/
          +optional
        type: object
      sessionAffinity:
        description: |-
          Supports "ClientIP" and "None". Used to maintain session affinity.
          Enable client IP based session affinity.
          Must be ClientIP or None.
          Defaults to None.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +optional
        type: string
      sessionAffinityConfig:
        $ref: '#/definitions/v1.SessionAffinityConfig'
        description: |-
          sessionAffinityConfig contains the configurations of session affinity.
          +optional
      type:
        description: |-
          type determines how the Service is exposed. Defaults to ClusterIP. Valid
          options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
          "ExternalName" maps to the specified externalName.
          "ClusterIP" allocates a cluster-internal IP address for load-balancing to
          endpoints. Endpoints are determined by the selector or if that is not
          specified, by manual construction of an Endpoints object. If clusterIP is
          "None", no virtual IP is allocated and the endpoints are published as a
          set of endpoints rather than a stable IP.
          "NodePort" builds on ClusterIP and allocates a port on every node which
          routes to the clusterIP.
          "LoadBalancer" builds on NodePort and creates an
          external load-balancer (if supported in the current cloud) which routes
          to the clusterIP.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types
          +optional
        type: string
    type: object
  v1.ServiceStatus:
    properties:
      loadBalancer:
        $ref: '#/definitions/v1.LoadBalancerStatus'
        description: |-
          LoadBalancer contains the current status of the load-balancer,
          if one is present.
          +optional
    type: object
  v1.SessionAffinityConfig:
    properties:
      clientIP:
        $ref: '#/definitions/v1.ClientIPConfig'
        description: |-
          clientIP contains the configurations of Client IP based session affinity.
          +optional
    type: object
  v1.StatefulSet:
    properties:
      _created:
        type: string
      _id:
        type: string
      _modified:
        type: string
      agent_name:
        type: string
      obj:
        $ref: '#/definitions/v1.K8sStatefulSet'
    type: object
  v1.StatefulSetCondition:
    properties:
      lastTransitionTime:
        description: |-
          Last time the condition transitioned from one status to another.
          +optional
        type: string
      message:
        description: |-
          A human readable message indicating details about the transition.
          +optional
        type: string
      reason:
        description: |-
          The reason for the condition's last transition.
          +optional
        type: string
      status:
        description: Status of the condition, one of True, False, Unknown.
        type: string
      type:
        description: Type of statefulset condition.
        type: string
    type: object
  v1.StatefulSetSpec:
    properties:
      podManagementPolicy:
        description: |-
          podManagementPolicy controls how pods are created during initial scale up,
          when replacing pods on nodes, or when scaling down. The default policy is
          `OrderedReady`, where pods are created in increasing order (pod-0, then
          pod-1, etc) and the controller will wait until each pod is ready before
          continuing. When scaling down, the pods are removed in the opposite order.
          The alternative policy is `Parallel` which will create pods in parallel
          to match the desired scale without waiting, and on scale down will Delete
          all pods at once.
          +optional
        type: string
      replicas:
        description: |-
          replicas is the desired number of replicas of the given Template.
          These are replicas in the sense that they are instantiations of the
          same Template, but individual replicas also have a consistent identity.
          If unspecified, defaults to 1.
          TODO: Consider a rename of this field.
          +optional
        type: integer
      revisionHistoryLimit:
        description: |-
          revisionHistoryLimit is the maximum number of revisions that will
          be maintained in the StatefulSet's revision history. The revision history
          consists of all revisions not represented by a currently applied
          StatefulSetSpec version. The default value is 10.
        type: integer
      selector:
        $ref: '#/definitions/v1.LabelSelector'
        description: |-
          selector is a label query over pods that should match the replica count.
          It must match the pod template's labels.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
      serviceName:
        description: |-
          serviceName is the name of the service that governs this StatefulSet.
          This service must exist before the StatefulSet, and is responsible for
          the network identity of the set. Pods get DNS/hostnames that follow the
          pattern: pod-specific-string.serviceName.default.svc.cluster.local
          where "pod-specific-string" is managed by the StatefulSet controller.
        type: string
      template:
        $ref: '#/definitions/v1.PodTemplateSpec'
        description: |-
          template is the object that describes the pod that will be created if
          insufficient replicas are detected. Each pod stamped out by the StatefulSet
          will fulfill this Template, but have a unique identity from the rest
          of the StatefulSet.
      updateStrategy:
        $ref: '#/definitions/v1.StatefulSetUpdateStrategy'
        description: |-
          updateStrategy indicates the StatefulSetUpdateStrategy that will be
          employed to Update Pods in the StatefulSet when a revision is made to
          Template.
      volumeClaimTemplates:
        description: |-
          volumeClaimTemplates is a list of claims that pods are allowed to reference.
          The StatefulSet controller is responsible for mapping network identities to
          claims in a way that maintains the identity of a pod. Every claim in
          this list must have at least one matching (by name) volumeMount in one
          container in the template. A claim in this list takes precedence over
          any volumes in the template, with the same name.
          TODO: Define the behavior if a claim already exists with the same name.
          +optional
        items:
          $ref: '#/definitions/v1.PersistentVolumeClaimStruct'
        type: array
    type: object
  v1.StatefulSetStatus:
    properties:
      collisionCount:
        description: |-
          collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller
          uses this field as a collision avoidance mechanism when it needs to create the name for the
          newest ControllerRevision.
          +optional
        type: integer
      conditions:
        description: |-
          Represents the latest available observations of a statefulset's current state.
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.StatefulSetCondition'
        type: array
      currentReplicas:
        description: |-
          currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version
          indicated by currentRevision.
        type: integer
      currentRevision:
        description: |-
          currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the
          sequence [0,currentReplicas).
        type: string
      observedGeneration:
        description: |-
          observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the
          StatefulSet's generation, which is updated on mutation by the API Server.
          +optional
        type: integer
      readyReplicas:
        description: readyReplicas is the number of Pods created by the StatefulSet
          controller that have a Ready Condition.
        type: integer
      replicas:
        description: replicas is the number of Pods created by the StatefulSet controller.
        type: integer
      updateRevision:
        description: |-
          updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence
          [replicas-updatedReplicas,replicas)
        type: string
      updatedReplicas:
        description: |-
          updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version
          indicated by updateRevision.
        type: integer
    type: object
  v1.StatefulSetUpdateStrategy:
    properties:
      rollingUpdate:
        $ref: '#/definitions/v1.RollingUpdateStatefulSetStrategy'
        description: |-
          RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.
          +optional
      type:
        description: |-
          Type indicates the type of the StatefulSetUpdateStrategy.
          Default is RollingUpdate.
          +optional
        type: string
    type: object
  v1.Status:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      code:
        description: |-
          Suggested HTTP return code for this status, 0 if not set.
          +optional
        type: integer
      continue:
        description: |-
          continue may be set if the user set a limit on the number of items returned, and indicates that
          the server has more data available. The value is opaque and may be used to issue another request
          to the endpoint that served this list to retrieve the next set of available objects. Continuing a
          consistent list may not be possible if the server configuration has changed or more than a few
          minutes have passed. The resourceVersion field returned when using this continue value will be
          identical to the value in the first response, unless you have received this token from an error
          message.
        type: string
      details:
        $ref: '#/definitions/v1.StatusDetails'
        description: |-
          Extended data associated with the reason.  Each reason may define its
          own extended details. This field is optional and the data returned
          is not guaranteed to conform to any schema except that defined by
          the reason type.
          +optional
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      message:
        description: |-
          A human-readable description of the status of this operation.
          +optional
        type: string
      reason:
        description: |-
          A machine-readable description of why this operation is in the
          "Failure" status. If this value is empty there
          is no information available. A Reason clarifies an HTTP status
          code but does not override it.
          +optional
        type: string
      resourceVersion:
        description: |-
          String that identifies the server's internal version of this object that
          can be used by clients to determine when objects have changed.
          Value must be treated as opaque by clients and passed unmodified back to the server.
          Populated by the system.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          selfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      status:
        description: |-
          Status of the operation.
          One of: "Success" or "Failure".
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
          +optional
        type: string
    type: object
  v1.StatusCause:
    properties:
      field:
        description: |-
          The field of the resource that has caused this error, as named by its JSON
          serialization. May include dot and postfix notation for nested attributes.
          Arrays are zero-indexed.  Fields may appear more than once in an array of
          causes due to fields having multiple errors.
          Optional.

          Examples:
            "name" - the field "name" on the current resource
            "items[0].name" - the field "name" on the first array entry in "items"
          +optional
        type: string
      message:
        description: |-
          A human-readable description of the cause of the error.  This field may be
          presented as-is to a reader.
          +optional
        type: string
      reason:
        description: |-
          A machine-readable description of the cause of the error. If this value is
          empty there is no information available.
          +optional
        type: string
    type: object
  v1.StatusDetails:
    properties:
      causes:
        description: |-
          The Causes array includes more details associated with the StatusReason
          failure. Not all StatusReasons may provide detailed causes.
          +optional
        items:
          $ref: '#/definitions/v1.StatusCause'
        type: array
      group:
        description: |-
          The group attribute of the resource associated with the status StatusReason.
          +optional
        type: string
      kind:
        description: |-
          The kind attribute of the resource associated with the status StatusReason.
          On some operations may differ from the requested resource Kind.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      name:
        description: |-
          The name attribute of the resource associated with the status StatusReason
          (when there is a single name which can be described).
          +optional
        type: string
      retryAfterSeconds:
        description: |-
          If specified, the time in seconds before the operation should be retried. Some errors may indicate
          the client must take an alternate action - for those errors this field may indicate how long to wait
          before taking the alternate action.
          +optional
        type: integer
      uid:
        description: |-
          UID of the resource.
          (when there is a single resource which can be described).
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.StorageOSPersistentVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.ObjectReference'
        description: |-
          SecretRef specifies the secret to use for obtaining the StorageOS API
          credentials.  If not specified, default values will be attempted.
          +optional
      volumeName:
        description: |-
          VolumeName is the human-readable name of the StorageOS volume.  Volume
          names are only unique within a namespace.
        type: string
      volumeNamespace:
        description: |-
          VolumeNamespace specifies the scope of the volume within StorageOS.  If no
          namespace is specified then the Pod's namespace will be used.  This allows the
          Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
          Set VolumeName to any name to override the default behaviour.
          Set to "default" if you are not using namespaces within StorageOS.
          Namespaces that do not pre-exist within StorageOS will be created.
          +optional
        type: string
    type: object
  v1.StorageOSVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          SecretRef specifies the secret to use for obtaining the StorageOS API
          credentials.  If not specified, default values will be attempted.
          +optional
      volumeName:
        description: |-
          VolumeName is the human-readable name of the StorageOS volume.  Volume
          names are only unique within a namespace.
        type: string
      volumeNamespace:
        description: |-
          VolumeNamespace specifies the scope of the volume within StorageOS.  If no
          namespace is specified then the Pod's namespace will be used.  This allows the
          Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
          Set VolumeName to any name to override the default behaviour.
          Set to "default" if you are not using namespaces within StorageOS.
          Namespaces that do not pre-exist within StorageOS will be created.
          +optional
        type: string
    type: object
  v1.Subject:
    properties:
      apiGroup:
        description: |-
          APIGroup holds the API group of the referenced subject.
          Defaults to "" for ServiceAccount subjects.
          Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
          +optional
        type: string
      kind:
        description: |-
          Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
          If the Authorizer does not recognized the kind value, the Authorizer should report an error.
        type: string
      name:
        description: Name of the object being referenced.
        type: string
      namespace:
        description: |-
          Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
          the Authorizer should report an error.
          +optional
        type: string
    type: object
  v1.Sysctl:
    properties:
      name:
        description: Name of a property to set
        type: string
      value:
        description: Value of a property to set
        type: string
    type: object
  v1.TCPSocketAction:
    properties:
      host:
        description: |-
          Optional: Host name to connect to, defaults to the pod IP.
          +optional
        type: string
      port:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Number or name of the port to access on the container.
          Number must be in the range 1 to 65535.
          Name must be an IANA_SVC_NAME.
    type: object
  v1.Toleration:
    properties:
      effect:
        description: |-
          Effect indicates the taint effect to match. Empty means match all taint effects.
          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
          +optional
        type: string
      key:
        description: |-
          Key is the taint key that the toleration applies to. Empty means match all taint keys.
          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
          +optional
        type: string
      operator:
        description: |-
          Operator represents a key's relationship to the value.
          Valid operators are Exists and Equal. Defaults to Equal.
          Exists is equivalent to wildcard for value, so that a pod can
          tolerate all taints of a particular category.
          +optional
        type: string
      tolerationSeconds:
        description: |-
          TolerationSeconds represents the period of time the toleration (which must be
          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
          it is not set, which means tolerate the taint forever (do not evict). Zero and
          negative values will be treated as 0 (evict immediately) by the system.
          +optional
        type: integer
      value:
        description: |-
          Value is the taint value the toleration matches to.
          If the operator is Exists, the value should be empty, otherwise just a regular string.
          +optional
        type: string
    type: object
  v1.TypedLocalObjectReference:
    properties:
      apiGroup:
        description: |-
          APIGroup is the group for the resource being referenced.
          If APIGroup is not specified, the specified Kind must be in the core API group.
          For any other third-party types, APIGroup is required.
          +optional
        type: string
      kind:
        description: Kind is the type of resource being referenced
        type: string
      name:
        description: Name is the name of resource being referenced
        type: string
    type: object
  v1.Volume:
    properties:
      awsElasticBlockStore:
        $ref: '#/definitions/v1.AWSElasticBlockStoreVolumeSource'
        description: |-
          AWSElasticBlockStore represents an AWS Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          +optional
      azureDisk:
        $ref: '#/definitions/v1.AzureDiskVolumeSource'
        description: |-
          AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
          +optional
      azureFile:
        $ref: '#/definitions/v1.AzureFileVolumeSource'
        description: |-
          AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
          +optional
      cephfs:
        $ref: '#/definitions/v1.CephFSVolumeSource'
        description: |-
          CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
          +optional
      cinder:
        $ref: '#/definitions/v1.CinderVolumeSource'
        description: |-
          Cinder represents a cinder volume attached and mounted on kubelets host machine
          More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
          +optional
      configMap:
        $ref: '#/definitions/v1.ConfigMapVolumeSource'
        description: |-
          ConfigMap represents a configMap that should populate this volume
          +optional
      downwardAPI:
        $ref: '#/definitions/v1.DownwardAPIVolumeSource'
        description: |-
          DownwardAPI represents downward API about the pod that should populate this volume
          +optional
      emptyDir:
        $ref: '#/definitions/v1.EmptyDirVolumeSource'
        description: |-
          EmptyDir represents a temporary directory that shares a pod's lifetime.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
          +optional
      fc:
        $ref: '#/definitions/v1.FCVolumeSource'
        description: |-
          FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
          +optional
      flexVolume:
        $ref: '#/definitions/v1.FlexVolumeSource'
        description: |-
          FlexVolume represents a generic volume resource that is
          provisioned/attached using an exec based plugin.
          +optional
      flocker:
        $ref: '#/definitions/v1.FlockerVolumeSource'
        description: |-
          Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
          +optional
      gcePersistentDisk:
        $ref: '#/definitions/v1.GCEPersistentDiskVolumeSource'
        description: |-
          GCEPersistentDisk represents a GCE Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
      gitRepo:
        $ref: '#/definitions/v1.GitRepoVolumeSource'
        description: |-
          GitRepo represents a git repository at a particular revision.
          DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
          EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
          into the Pod's container.
          +optional
      glusterfs:
        $ref: '#/definitions/v1.GlusterfsVolumeSource'
        description: |-
          Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
          More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md
          +optional
      hostPath:
        $ref: '#/definitions/v1.HostPathVolumeSource'
        description: |-
          HostPath represents a pre-existing file or directory on the host
          machine that is directly exposed to the container. This is generally
          used for system agents or other privileged things that are allowed
          to see the host machine. Most containers will NOT need this.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          ---
          TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
          mount host directories as read/write.
          +optional
      iscsi:
        $ref: '#/definitions/v1.ISCSIVolumeSource'
        description: |-
          ISCSI represents an ISCSI Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md
          +optional
      name:
        description: |-
          Volume's name.
          Must be a DNS_LABEL and unique within the pod.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        type: string
      nfs:
        $ref: '#/definitions/v1.NFSVolumeSource'
        description: |-
          NFS represents an NFS mount on the host that shares a pod's lifetime
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          +optional
      persistentVolumeClaim:
        $ref: '#/definitions/v1.PersistentVolumeClaimVolumeSource'
        description: |-
          PersistentVolumeClaimVolumeSource represents a reference to a
          PersistentVolumeClaim in the same namespace.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
          +optional
      photonPersistentDisk:
        $ref: '#/definitions/v1.PhotonPersistentDiskVolumeSource'
        description: PhotonPersistentDisk represents a PhotonController persistent
          disk attached and mounted on kubelets host machine
      portworxVolume:
        $ref: '#/definitions/v1.PortworxVolumeSource'
        description: |-
          PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
          +optional
      projected:
        $ref: '#/definitions/v1.ProjectedVolumeSource'
        description: Items for all in one resources secrets, configmaps, and downward
          API
      quobyte:
        $ref: '#/definitions/v1.QuobyteVolumeSource'
        description: |-
          Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
          +optional
      rbd:
        $ref: '#/definitions/v1.RBDVolumeSource'
        description: |-
          RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md
          +optional
      scaleIO:
        $ref: '#/definitions/v1.ScaleIOVolumeSource'
        description: |-
          ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
          +optional
      secret:
        $ref: '#/definitions/v1.SecretVolumeSource'
        description: |-
          Secret represents a secret that should populate this volume.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
          +optional
      storageos:
        $ref: '#/definitions/v1.StorageOSVolumeSource'
        description: |-
          StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
          +optional
      vsphereVolume:
        $ref: '#/definitions/v1.VsphereVirtualDiskVolumeSource'
        description: |-
          VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
          +optional
    type: object
  v1.VolumeDevice:
    properties:
      devicePath:
        description: devicePath is the path inside of the container that the device
          will be mapped to.
        type: string
      name:
        description: name must match the name of a persistentVolumeClaim in the pod
        type: string
    type: object
  v1.VolumeMount:
    properties:
      mountPath:
        description: |-
          Path within the container at which the volume should be mounted.  Must
          not contain ':'.
        type: string
      mountPropagation:
        description: |-
          mountPropagation determines how mounts are propagated from the host
          to container and the other way around.
          When not set, MountPropagationNone is used.
          This field is beta in 1.10.
          +optional
        type: string
      name:
        description: This must match the Name of a Volume.
        type: string
      readOnly:
        description: |-
          Mounted read-only if true, read-write otherwise (false or unspecified).
          Defaults to false.
          +optional
        type: boolean
      subPath:
        description: |-
          Path within the volume from which the container's volume should be mounted.
          Defaults to "" (volume's root).
          +optional
        type: string
    type: object
  v1.VolumeNodeAffinity:
    properties:
      required:
        $ref: '#/definitions/v1.NodeSelector'
        description: Required specifies hard node constraints that must be met.
    type: object
  v1.VolumeProjection:
    properties:
      configMap:
        $ref: '#/definitions/v1.ConfigMapProjection'
        description: |-
          information about the configMap data to project
          +optional
      downwardAPI:
        $ref: '#/definitions/v1.DownwardAPIProjection'
        description: |-
          information about the downwardAPI data to project
          +optional
      secret:
        $ref: '#/definitions/v1.SecretProjection'
        description: |-
          information about the secret data to project
          +optional
      serviceAccountToken:
        $ref: '#/definitions/v1.ServiceAccountTokenProjection'
        description: |-
          information about the serviceAccountToken data to project
          +optional
    type: object
  v1.VsphereVirtualDiskVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      storagePolicyID:
        description: |-
          Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
          +optional
        type: string
      storagePolicyName:
        description: |-
          Storage Policy Based Management (SPBM) profile name.
          +optional
        type: string
      volumePath:
        description: Path that identifies vSphere volume vmdk
        type: string
    type: object
  v1.WeightedPodAffinityTerm:
    properties:
      podAffinityTerm:
        $ref: '#/definitions/v1.PodAffinityTerm'
        description: Required. A pod affinity term, associated with the corresponding
          weight.
      weight:
        description: |-
          weight associated with matching the corresponding podAffinityTerm,
          in the range 1-100.
        type: integer
    type: object
  v1.X509Subject:
    properties:
      countries:
        description: |-
          Countries to be used on the Certificate.
          +optional
        items:
          type: string
        type: array
      localities:
        description: |-
          Cities to be used on the Certificate.
          +optional
        items:
          type: string
        type: array
      organizationalUnits:
        description: |-
          Organizational Units to be used on the Certificate.
          +optional
        items:
          type: string
        type: array
      organizations:
        description: |-
          Organizations to be used on the Certificate.
          +optional
        items:
          type: string
        type: array
      postalCodes:
        description: |-
          Postal codes to be used on the Certificate.
          +optional
        items:
          type: string
        type: array
      provinces:
        description: |-
          State/Provinces to be used on the Certificate.
          +optional
        items:
          type: string
        type: array
      serialNumber:
        description: |-
          Serial number to be used on the Certificate.
          +optional
        type: string
      streetAddresses:
        description: |-
          Street addresses to be used on the Certificate.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.k8sClusterRoleBinding:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      initializers:
        $ref: '#/definitions/v1.Initializers'
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time.
          This field is a list of initializers that have not yet acted on this object. If nil or empty,
          this object has been completely initialized. Otherwise, the object is considered uninitialized
          and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to
          observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers.
          Only privileged users may set or modify this list. Once it is empty, it may not be modified further
          by any user.
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      roleRef:
        $ref: '#/definitions/v1.RoleRef'
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
      subjects:
        items:
          $ref: '#/definitions/v1.Subject'
        type: array
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
info:
  contact: {}
  description: Klovercloud-light-house-query API
  title: Klovercloud-ci-light-house-query API
paths:
  /api/v1/certificates:
    get:
      description: Api for getting all Certificates by agent name, owner reference
        and process id
      parameters:
      - description: Owner Reference
        in: query
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.Certificate'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - Certificate
  /api/v1/cluster-roles:
    get:
      description: Api for getting all Cluster Roles by agent name, owner reference
        and process id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.ClusterRole'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - ClusterRole
  /api/v1/cluster_role_bindings:
    get:
      description: Api for getting all ClusterRoleBindings by agent name, owner reference
        and process id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.ClusterRoleBinding'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - ClusterRoleBinding
  /api/v1/config-maps:
    get:
      description: Api for getting all ConfigMaps by agent name, owner reference and
        process
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.ConfigMap'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - ConfigMap
  /api/v1/daemon-sets:
    get:
      description: Api for getting all DaemonSets by agent name, owner reference and
        process
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.DaemonSet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - DaemonSet
  /api/v1/deployments:
    get:
      description: Api for getting all Deployments by agent name, owner reference
        and process
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.Deployment'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - Deployment
  /api/v1/ingresses:
    get:
      description: Api for getting all Ingresses by agent name, owner reference and
        process id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.Ingress'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - Ingress
  /api/v1/namespaces:
    get:
      description: Api for getting all Namespaces by agent name, owner reference and
        process
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.Namespace'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - Namespace
  /api/v1/network-policies:
    get:
      description: Api for getting all Network Policies by agent name, owner reference
        and process
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.NetworkPolicy'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - Certificate
  /api/v1/nodes:
    get:
      description: Api for getting all nodes by agent name, owner reference and process
        id
      parameters:
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.Pod'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - Pod
  /api/v1/persistent-volume-claims:
    get:
      description: Api for getting all Persistent Volumes claim  by agent name, owner
        reference and process id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.PersistentVolumeClaim'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - PersistentVolumeClaim
  /api/v1/persistent-volumes:
    get:
      description: Api for getting all Persistent volumes  by agent name, owner reference
        and process id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.PersistentVolume'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - PersistentVolume
  /api/v1/pods:
    get:
      description: Api for getting all Pods  by agent name, owner reference and process
        id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.Pod'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - Pod
  /api/v1/replica-sets:
    get:
      description: Api for getting all Replica Sets by agent name, owner reference
        and process id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.ReplicaSet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - ReplicaSet
  /api/v1/role-bindings:
    get:
      description: Api for getting all Role Bindings by agent name, owner reference
        and process id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.RoleBinding'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - RoleBinding
  /api/v1/roles:
    get:
      description: Api for getting all Roles by agent name, owner reference and process
        id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.Role'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - Role
  /api/v1/secrets:
    get:
      description: Api for getting all Secrets by agent name, owner reference and
        process id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.Secret'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - Secret
  /api/v1/service-accounts:
    get:
      description: Api for getting all Service Accounts by agent name, owner reference
        and process id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.ServiceAccount'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - ServiceAccount
  /api/v1/services:
    get:
      description: Api for getting all Services by name, owner reference and process
        id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.Service'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - ServiceAccount
  /api/v1/stateful-sets:
    get:
      description: Api for getting all Stateful sets by agent name, owner reference
        and process id
      parameters:
      - description: Owner Reference
        in: path
        name: owner-reference
        type: string
      - description: Process Id
        in: query
        name: processId
        required: true
        type: string
      - description: Agent Name
        in: query
        name: agent
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort By Created Time
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.StatefulSet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get api
      tags:
      - StatufulSet
swagger: "2.0"
