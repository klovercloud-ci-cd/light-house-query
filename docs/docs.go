// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/certificates": {
            "get": {
                "description": "Api for getting all Certificates by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificate"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.Certificate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/cluster-roles": {
            "get": {
                "description": "Api for getting all Cluster Roles by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ClusterRole"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.ClusterRole"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/cluster_role_bindings": {
            "get": {
                "description": "Api for getting all ClusterRoleBindings by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ClusterRoleBinding"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.ClusterRoleBinding"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/config-maps": {
            "get": {
                "description": "Api for getting all ConfigMaps by agent name, owner reference and process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigMap"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.ConfigMap"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/daemon-sets": {
            "get": {
                "description": "Api for getting all DaemonSets by agent name, owner reference and process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DaemonSet"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.DaemonSet"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/deployments": {
            "get": {
                "description": "Api for getting all Deployments by agent name, owner reference and process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployment"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.Deployment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/ingresses": {
            "get": {
                "description": "Api for getting all Ingresses by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ingress"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.Ingress"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/namespaces": {
            "get": {
                "description": "Api for getting all Namespaces by agent name, owner reference and process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Namespace"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.Namespace"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/network-policies": {
            "get": {
                "description": "Api for getting all Network Policies by agent name, owner reference and process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificate"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.NetworkPolicy"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/nodes": {
            "get": {
                "description": "Api for getting all nodes by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.Pod"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/persistent-volume-claims": {
            "get": {
                "description": "Api for getting all Persistent Volumes claim  by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PersistentVolumeClaim"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.PersistentVolumeClaim"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/persistent-volumes": {
            "get": {
                "description": "Api for getting all Persistent volumes  by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PersistentVolume"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.PersistentVolume"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/pods": {
            "get": {
                "description": "Api for getting all Pods  by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.Pod"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/replica-sets": {
            "get": {
                "description": "Api for getting all Replica Sets by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReplicaSet"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.ReplicaSet"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/role-bindings": {
            "get": {
                "description": "Api for getting all Role Bindings by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RoleBinding"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.RoleBinding"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/roles": {
            "get": {
                "description": "Api for getting all Roles by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/secrets": {
            "get": {
                "description": "Api for getting all Secrets by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Secret"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.Secret"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/service-accounts": {
            "get": {
                "description": "Api for getting all Service Accounts by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceAccount"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.ServiceAccount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/services": {
            "get": {
                "description": "Api for getting all Services by name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceAccount"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.Service"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/stateful-sets": {
            "get": {
                "description": "Api for getting all Stateful sets by agent name, owner reference and process id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StatufulSet"
                ],
                "summary": "Get api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner Reference",
                        "name": "owner-reference",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Process Id",
                        "name": "processId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Agent Name",
                        "name": "agent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort By Created Time",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseDTO"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1.StatefulSet"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ResponseDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.ResponseDTO": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "intstr.IntOrString": {
            "type": "object",
            "properties": {
                "intVal": {
                    "type": "integer"
                },
                "strVal": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "v1.AWSElasticBlockStoreVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
                    "type": "string"
                },
                "partition": {
                    "description": "The partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\n+optional",
                    "type": "integer"
                },
                "readOnly": {
                    "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\".\nIf omitted, the default is \"false\".\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional",
                    "type": "boolean"
                },
                "volumeID": {
                    "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                    "type": "string"
                }
            }
        },
        "v1.Affinity": {
            "type": "object",
            "properties": {
                "nodeAffinity": {
                    "description": "Describes node affinity scheduling rules for the pod.\n+optional",
                    "$ref": "#/definitions/v1.NodeAffinity"
                },
                "podAffinity": {
                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).\n+optional",
                    "$ref": "#/definitions/v1.PodAffinity"
                },
                "podAntiAffinity": {
                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).\n+optional",
                    "$ref": "#/definitions/v1.PodAntiAffinity"
                }
            }
        },
        "v1.AggregationRule": {
            "type": "object",
            "properties": {
                "clusterRoleSelectors": {
                    "description": "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules.\nIf any of the selectors match, then the ClusterRole's permissions will be added\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.LabelSelector"
                    }
                }
            }
        },
        "v1.AzureDiskVolumeSource": {
            "type": "object",
            "properties": {
                "cachingMode": {
                    "description": "Host Caching mode: None, Read Only, Read Write.\n+optional",
                    "type": "string"
                },
                "diskName": {
                    "description": "The Name of the data disk in the blob storage",
                    "type": "string"
                },
                "diskURI": {
                    "description": "The URI the data disk in the blob storage",
                    "type": "string"
                },
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.AzureFilePersistentVolumeSource": {
            "type": "object",
            "properties": {
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
                    "type": "boolean"
                },
                "secretName": {
                    "description": "the name of secret that contains Azure Storage Account Name and Key",
                    "type": "string"
                },
                "secretNamespace": {
                    "description": "the namespace of the secret that contains Azure Storage Account Name and Key\ndefault is the same as the Pod\n+optional",
                    "type": "string"
                },
                "shareName": {
                    "description": "Share Name",
                    "type": "string"
                }
            }
        },
        "v1.AzureFileVolumeSource": {
            "type": "object",
            "properties": {
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
                    "type": "boolean"
                },
                "secretName": {
                    "description": "the name of secret that contains Azure Storage Account Name and Key",
                    "type": "string"
                },
                "shareName": {
                    "description": "Share Name",
                    "type": "string"
                }
            }
        },
        "v1.CSIPersistentVolumeSource": {
            "type": "object",
            "properties": {
                "controllerPublishSecretRef": {
                    "description": "ControllerPublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nControllerPublishVolume and ControllerUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secrets are passed.\n+optional",
                    "$ref": "#/definitions/v1.SecretReference"
                },
                "driver": {
                    "description": "Driver is the name of the driver to use for this volume.\nRequired.",
                    "type": "string"
                },
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\n+optional",
                    "type": "string"
                },
                "nodePublishSecretRef": {
                    "description": "NodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secrets are passed.\n+optional",
                    "$ref": "#/definitions/v1.SecretReference"
                },
                "nodeStageSecretRef": {
                    "description": "NodeStageSecretRef is a reference to the secret object containing sensitive\ninformation to pass to the CSI driver to complete the CSI NodeStageVolume\nand NodeStageVolume and NodeUnstageVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secrets are passed.\n+optional",
                    "$ref": "#/definitions/v1.SecretReference"
                },
                "readOnly": {
                    "description": "Optional: The value to pass to ControllerPublishVolumeRequest.\nDefaults to false (read/write).\n+optional",
                    "type": "boolean"
                },
                "volumeAttributes": {
                    "description": "Attributes of the volume to publish.\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "volumeHandle": {
                    "description": "VolumeHandle is the unique volume name returned by the CSI volume\nplugin’s CreateVolume to refer to the volume on all subsequent calls.\nRequired.",
                    "type": "string"
                }
            }
        },
        "v1.Capabilities": {
            "type": "object",
            "properties": {
                "add": {
                    "description": "Added capabilities\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "drop": {
                    "description": "Removed capabilities\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.CephFSPersistentVolumeSource": {
            "type": "object",
            "properties": {
                "monitors": {
                    "description": "Required: Monitors is a collection of Ceph monitors\nMore info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /\n+optional",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it\n+optional",
                    "type": "boolean"
                },
                "secretFile": {
                    "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it\n+optional",
                    "type": "string"
                },
                "secretRef": {
                    "description": "Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it\n+optional",
                    "$ref": "#/definitions/v1.SecretReference"
                },
                "user": {
                    "description": "Optional: User is the rados user name, default is admin\nMore info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.CephFSVolumeSource": {
            "type": "object",
            "properties": {
                "monitors": {
                    "description": "Required: Monitors is a collection of Ceph monitors\nMore info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /\n+optional",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it\n+optional",
                    "type": "boolean"
                },
                "secretFile": {
                    "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it\n+optional",
                    "type": "string"
                },
                "secretRef": {
                    "description": "Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it\n+optional",
                    "$ref": "#/definitions/v1.LocalObjectReference"
                },
                "user": {
                    "description": "Optional: User is the rados user name, default is admin\nMore info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.Certificate": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sCertificate"
                }
            }
        },
        "v1.CertificateCondition": {
            "type": "object",
            "properties": {
                "lastTransitionTime": {
                    "description": "LastTransitionTime is the timestamp corresponding to the last status\nchange of this condition.\n+optional",
                    "type": "string"
                },
                "message": {
                    "description": "Message is a human readable description of the details of the last\ntransition, complementing reason.\n+optional",
                    "type": "string"
                },
                "observedGeneration": {
                    "description": "If set, this represents the .metadata.generation that the condition was\nset based upon.\nFor instance, if .metadata.generation is currently 12, but the\n.status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the Certificate.\n+optional",
                    "type": "integer"
                },
                "reason": {
                    "description": "Reason is a brief machine readable explanation for the condition's last\ntransition.\n+optional",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the condition, one of (` + "`" + `True` + "`" + `, ` + "`" + `False` + "`" + `, ` + "`" + `Unknown` + "`" + `).",
                    "type": "string"
                },
                "type": {
                    "description": "Type of the condition, known values are (` + "`" + `Ready` + "`" + `, ` + "`" + `Issuing` + "`" + `).",
                    "type": "string"
                }
            }
        },
        "v1.CertificateKeystores": {
            "type": "object",
            "properties": {
                "jks": {
                    "description": "JKS configures options for storing a JKS keystore in the\n` + "`" + `spec.secretName` + "`" + ` Secret resource.\n+optional",
                    "$ref": "#/definitions/v1.JKSKeystore"
                },
                "pkcs12": {
                    "description": "PKCS12 configures options for storing a PKCS12 keystore in the\n` + "`" + `spec.secretName` + "`" + ` Secret resource.\n+optional",
                    "$ref": "#/definitions/v1.PKCS12Keystore"
                }
            }
        },
        "v1.CertificateObjectReference": {
            "type": "object",
            "properties": {
                "group": {
                    "description": "Group of the resource being referred to.\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind of the resource being referred to.\n+optional",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource being referred to.",
                    "type": "string"
                }
            }
        },
        "v1.CertificatePrivateKey": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "description": "Algorithm is the private key algorithm of the corresponding private key\nfor this certificate. If provided, allowed values are either ` + "`" + `RSA` + "`" + `,` + "`" + `Ed25519` + "`" + ` or ` + "`" + `ECDSA` + "`" + `\nIf ` + "`" + `algorithm` + "`" + ` is specified and ` + "`" + `size` + "`" + ` is not provided,\nkey size of 256 will be used for ` + "`" + `ECDSA` + "`" + ` key algorithm and\nkey size of 2048 will be used for ` + "`" + `RSA` + "`" + ` key algorithm.\nkey size is ignored when using the ` + "`" + `Ed25519` + "`" + ` key algorithm.\n+optional",
                    "type": "string"
                },
                "encoding": {
                    "description": "The private key cryptography standards (PKCS) encoding for this\ncertificate's private key to be encoded in.\nIf provided, allowed values are ` + "`" + `PKCS1` + "`" + ` and ` + "`" + `PKCS8` + "`" + ` standing for PKCS#1\nand PKCS#8, respectively.\nDefaults to ` + "`" + `PKCS1` + "`" + ` if not specified.\n+optional",
                    "type": "string"
                },
                "rotationPolicy": {
                    "description": "RotationPolicy controls how private keys should be regenerated when a\nre-issuance is being processed.\nIf set to Never, a private key will only be generated if one does not\nalready exist in the target ` + "`" + `spec.secretName` + "`" + `. If one does exists but it\ndoes not have the correct algorithm or size, a warning will be raised\nto await user intervention.\nIf set to Always, a private key matching the specified requirements\nwill be generated whenever a re-issuance occurs.\nDefault is 'Never' for backward compatibility.\n+optional",
                    "type": "string"
                },
                "size": {
                    "description": "Size is the key bit size of the corresponding private key for this certificate.\nIf ` + "`" + `algorithm` + "`" + ` is set to ` + "`" + `RSA` + "`" + `, valid values are ` + "`" + `2048` + "`" + `, ` + "`" + `4096` + "`" + ` or ` + "`" + `8192` + "`" + `,\nand will default to ` + "`" + `2048` + "`" + ` if not specified.\nIf ` + "`" + `algorithm` + "`" + ` is set to ` + "`" + `ECDSA` + "`" + `, valid values are ` + "`" + `256` + "`" + `, ` + "`" + `384` + "`" + ` or ` + "`" + `521` + "`" + `,\nand will default to ` + "`" + `256` + "`" + ` if not specified.\nIf ` + "`" + `algorithm` + "`" + ` is set to ` + "`" + `Ed25519` + "`" + `, Size is ignored.\nNo other values are allowed.\n+optional",
                    "type": "integer"
                }
            }
        },
        "v1.CertificateSecretKeySelector": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "The key of the entry in the Secret resource's ` + "`" + `data` + "`" + ` field to be used.\nSome instances of this field may be defaulted, in others it may be\nrequired.\n+optional",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.CertificateSecretTemplate": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is a key value map to be copied to the target Kubernetes Secret.\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "labels": {
                    "description": "Labels is a key value map to be copied to the target Kubernetes Secret.\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.CertificateSpec": {
            "type": "object",
            "properties": {
                "commonName": {
                    "description": "CommonName is a common name to be used on the Certificate.\nThe CommonName should have a length of 64 characters or fewer to avoid\ngenerating invalid CSRs.\nThis value is ignored by TLS clients when any subject alt name is set.\nThis is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4\n+optional",
                    "type": "string"
                },
                "dnsNames": {
                    "description": "DNSNames is a list of DNS subjectAltNames to be set on the Certificate.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "description": "The requested 'duration' (i.e. lifetime) of the Certificate. This option\nmay be ignored/overridden by some issuer types. If unset this defaults to\n90 days. Certificate will be renewed either 2/3 through its duration or\n` + "`" + `renewBefore` + "`" + ` period before its expiry, whichever is later. Minimum\naccepted duration is 1 hour. Value must be in units accepted by Go\ntime.ParseDuration https://golang.org/pkg/time/#ParseDuration\n+optional",
                    "$ref": "#/definitions/v1.Duration"
                },
                "emailAddresses": {
                    "description": "EmailAddresses is a list of email subjectAltNames to be set on the Certificate.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "encodeUsagesInRequest": {
                    "description": "EncodeUsagesInRequest controls whether key usages should be present\nin the CertificateRequest\n+optional",
                    "type": "boolean"
                },
                "ipAddresses": {
                    "description": "IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isCA": {
                    "description": "IsCA will mark this Certificate as valid for certificate signing.\nThis will automatically add the ` + "`" + `cert sign` + "`" + ` usage to the list of ` + "`" + `usages` + "`" + `.\n+optional",
                    "type": "boolean"
                },
                "issuerRef": {
                    "description": "IssuerRef is a reference to the issuer for this certificate.\nIf the ` + "`" + `kind` + "`" + ` field is not set, or set to ` + "`" + `Issuer` + "`" + `, an Issuer resource\nwith the given name in the same namespace as the Certificate will be used.\nIf the ` + "`" + `kind` + "`" + ` field is set to ` + "`" + `ClusterIssuer` + "`" + `, a ClusterIssuer with the\nprovided name will be used.\nThe ` + "`" + `name` + "`" + ` field in this stanza is required at all times.",
                    "$ref": "#/definitions/v1.CertificateObjectReference"
                },
                "keystores": {
                    "description": "Keystores configures additional keystore output formats stored in the\n` + "`" + `secretName` + "`" + ` Secret resource.\n+optional",
                    "$ref": "#/definitions/v1.CertificateKeystores"
                },
                "privateKey": {
                    "description": "Options to control private keys used for the Certificate.\n+optional",
                    "$ref": "#/definitions/v1.CertificatePrivateKey"
                },
                "renewBefore": {
                    "description": "How long before the currently issued certificate's expiry\ncert-manager should renew the certificate. The default is 2/3 of the\nissued certificate's duration. Minimum accepted value is 5 minutes.\nValue must be in units accepted by Go time.ParseDuration\nhttps://golang.org/pkg/time/#ParseDuration\n+optional",
                    "$ref": "#/definitions/v1.Duration"
                },
                "revisionHistoryLimit": {
                    "description": "revisionHistoryLimit is the maximum number of CertificateRequest revisions\nthat are maintained in the Certificate's history. Each revision represents\na single ` + "`" + `CertificateRequest` + "`" + ` created by this Certificate, either when it\nwas created, renewed, or Spec was changed. Revisions will be removed by\noldest first if the number of revisions exceeds this number. If set,\nrevisionHistoryLimit must be a value of ` + "`" + `1` + "`" + ` or greater. If unset (` + "`" + `nil` + "`" + `),\nrevisions will not be garbage collected. Default value is ` + "`" + `nil` + "`" + `.\n+kubebuilder:validation:ExclusiveMaximum=false\n+optional",
                    "type": "integer"
                },
                "secretName": {
                    "description": "SecretName is the name of the secret resource that will be automatically\ncreated and managed by this Certificate resource.\nIt will be populated with a private key and certificate, signed by the\ndenoted issuer.",
                    "type": "string"
                },
                "secretTemplate": {
                    "description": "SecretTemplate defines annotations and labels to be propagated\nto the Kubernetes Secret when it is created or updated. Once created,\nlabels and annotations are not yet removed from the Secret when they are\nremoved from the template. See https://github.com/jetstack/cert-manager/issues/4292\n+optional",
                    "$ref": "#/definitions/v1.CertificateSecretTemplate"
                },
                "subject": {
                    "description": "Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).\n+optional",
                    "$ref": "#/definitions/v1.X509Subject"
                },
                "uris": {
                    "description": "URIs is a list of URI subjectAltNames to be set on the Certificate.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usages": {
                    "description": "Usages is the set of x509 usages that are requested for the certificate.\nDefaults to ` + "`" + `digital signature` + "`" + ` and ` + "`" + `key encipherment` + "`" + ` if not specified.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.CertificateStatus": {
            "type": "object",
            "properties": {
                "conditions": {
                    "description": "List of status conditions to indicate the status of certificates.\nKnown condition types are ` + "`" + `Ready` + "`" + ` and ` + "`" + `Issuing` + "`" + `.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.CertificateCondition"
                    }
                },
                "lastFailureTime": {
                    "description": "LastFailureTime is the time as recorded by the Certificate controller\nof the most recent failure to complete a CertificateRequest for this\nCertificate resource.\nIf set, cert-manager will not re-request another Certificate until\n1 hour has elapsed from this time.\n+optional",
                    "type": "string"
                },
                "nextPrivateKeySecretName": {
                    "description": "The name of the Secret resource containing the private key to be used\nfor the next certificate iteration.\nThe keymanager controller will automatically set this field if the\n` + "`" + `Issuing` + "`" + ` condition is set to ` + "`" + `True` + "`" + `.\nIt will automatically unset this field when the Issuing condition is\nnot set or False.\n+optional",
                    "type": "string"
                },
                "notAfter": {
                    "description": "The expiration time of the certificate stored in the secret named\nby this resource in ` + "`" + `spec.secretName` + "`" + `.\n+optional",
                    "type": "string"
                },
                "notBefore": {
                    "description": "The time after which the certificate stored in the secret named\nby this resource in spec.secretName is valid.\n+optional",
                    "type": "string"
                },
                "renewalTime": {
                    "description": "RenewalTime is the time at which the certificate will be next\nrenewed.\nIf not set, no upcoming renewal is scheduled.\n+optional",
                    "type": "string"
                },
                "revision": {
                    "description": "The current 'revision' of the certificate as issued.\n\nWhen a CertificateRequest resource is created, it will have the\n` + "`" + `cert-manager.io/certificate-revision` + "`" + ` set to one greater than the\ncurrent value of this field.\n\nUpon issuance, this field will be set to the value of the annotation\non the CertificateRequest resource used to issue the certificate.\n\nPersisting the value on the CertificateRequest resource allows the\ncertificates controller to know whether a request is part of an old\nissuance or if it is part of the ongoing revision's issuance by\nchecking if the revision value in the annotation is greater than this\nfield.\n+optional",
                    "type": "integer"
                }
            }
        },
        "v1.CinderPersistentVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md\n+optional",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "Optional: points to a secret object containing parameters used to connect\nto OpenStack.\n+optional",
                    "$ref": "#/definitions/v1.SecretReference"
                },
                "volumeID": {
                    "description": "volume id used to identify the volume in cinder\nMore info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                    "type": "string"
                }
            }
        },
        "v1.CinderVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md\n+optional",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "Optional: points to a secret object containing parameters used to connect\nto OpenStack.\n+optional",
                    "$ref": "#/definitions/v1.LocalObjectReference"
                },
                "volumeID": {
                    "description": "volume id used to identify the volume in cinder\nMore info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                    "type": "string"
                }
            }
        },
        "v1.ClientIPConfig": {
            "type": "object",
            "properties": {
                "timeoutSeconds": {
                    "description": "timeoutSeconds specifies the seconds of ClientIP type session sticky time.\nThe value must be \u003e0 \u0026\u0026 \u003c=86400(for 1 day) if ServiceAffinity == \"ClientIP\".\nDefault value is 10800(for 3 hours).\n+optional",
                    "type": "integer"
                }
            }
        },
        "v1.ClusterRole": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sClusterRole"
                }
            }
        },
        "v1.ClusterRoleBinding": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.k8sClusterRoleBinding"
                }
            }
        },
        "v1.ConfigMap": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sConfigMap"
                }
            }
        },
        "v1.ConfigMapEnvSource": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the ConfigMap must be defined\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.ConfigMapKeySelector": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "The key to select.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the ConfigMap or it's key must be defined\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.ConfigMapProjection": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.KeyToPath"
                    }
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the ConfigMap or it's keys must be defined\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.ConfigMapVolumeSource": {
            "type": "object",
            "properties": {
                "defaultMode": {
                    "description": "Optional: mode bits to use on created files by default. Must be a\nvalue between 0 and 0777. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
                    "type": "integer"
                },
                "items": {
                    "description": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.KeyToPath"
                    }
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the ConfigMap or it's keys must be defined\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.Container": {
            "type": "object",
            "properties": {
                "args": {
                    "description": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax\ncan be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\nregardless of whether the variable exists or not.\nCannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "command": {
                    "description": "Entrypoint array. Not executed within a shell.\nThe docker image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax\ncan be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\nregardless of whether the variable exists or not.\nCannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "env": {
                    "description": "List of environment variables to set in the container.\nCannot be updated.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.EnvVar"
                    }
                },
                "envFrom": {
                    "description": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.EnvFromSource"
                    }
                },
                "image": {
                    "description": "Docker image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.\n+optional",
                    "type": "string"
                },
                "imagePullPolicy": {
                    "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n+optional",
                    "type": "string"
                },
                "lifecycle": {
                    "description": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.\n+optional",
                    "$ref": "#/definitions/v1.Lifecycle"
                },
                "livenessProbe": {
                    "description": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional",
                    "$ref": "#/definitions/v1.Probe"
                },
                "name": {
                    "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated.",
                    "type": "string"
                },
                "ports": {
                    "description": "List of ports to expose from the container. Exposing a port here gives\nthe system additional information about the network connections a\ncontainer uses, but is primarily informational. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nCannot be updated.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ContainerPort"
                    }
                },
                "readinessProbe": {
                    "description": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional",
                    "$ref": "#/definitions/v1.Probe"
                },
                "resources": {
                    "description": "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n+optional",
                    "$ref": "#/definitions/v1.ResourceRequirements"
                },
                "securityContext": {
                    "description": "Security options the pod should run with.\nMore info: https://kubernetes.io/docs/concepts/policy/security-context/\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n+optional",
                    "$ref": "#/definitions/v1.SecurityContext"
                },
                "stdin": {
                    "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.\n+optional",
                    "type": "boolean"
                },
                "stdinOnce": {
                    "description": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n+optional",
                    "type": "boolean"
                },
                "terminationMessagePath": {
                    "description": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.\n+optional",
                    "type": "string"
                },
                "terminationMessagePolicy": {
                    "description": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.\n+optional",
                    "type": "string"
                },
                "tty": {
                    "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.\n+optional",
                    "type": "boolean"
                },
                "volumeDevices": {
                    "description": "volumeDevices is the list of block devices to be used by the container.\nThis is an alpha feature and may change in the future.\n+patchMergeKey=devicePath\n+patchStrategy=merge\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.VolumeDevice"
                    }
                },
                "volumeMounts": {
                    "description": "Pod volumes to mount into the container's filesystem.\nCannot be updated.\n+optional\n+patchMergeKey=mountPath\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.VolumeMount"
                    }
                },
                "workingDir": {
                    "description": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ContainerPort": {
            "type": "object",
            "properties": {
                "containerPort": {
                    "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 \u003c x \u003c 65536.",
                    "type": "integer"
                },
                "hostIP": {
                    "description": "What host IP to bind the external port to.\n+optional",
                    "type": "string"
                },
                "hostPort": {
                    "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 \u003c x \u003c 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.\n+optional",
                    "type": "integer"
                },
                "name": {
                    "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.\n+optional",
                    "type": "string"
                },
                "protocol": {
                    "description": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ContainerState": {
            "type": "object",
            "properties": {
                "running": {
                    "description": "Details about a running container\n+optional",
                    "$ref": "#/definitions/v1.ContainerStateRunning"
                },
                "terminated": {
                    "description": "Details about a terminated container\n+optional",
                    "$ref": "#/definitions/v1.ContainerStateTerminated"
                },
                "waiting": {
                    "description": "Details about a waiting container\n+optional",
                    "$ref": "#/definitions/v1.ContainerStateWaiting"
                }
            }
        },
        "v1.ContainerStateRunning": {
            "type": "object",
            "properties": {
                "startedAt": {
                    "description": "Time at which the container was last (re-)started\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ContainerStateTerminated": {
            "type": "object",
            "properties": {
                "containerID": {
                    "description": "Container's ID in the format 'docker://\u003ccontainer_id\u003e'\n+optional",
                    "type": "string"
                },
                "exitCode": {
                    "description": "Exit status from the last termination of the container",
                    "type": "integer"
                },
                "finishedAt": {
                    "description": "Time at which the container last terminated\n+optional",
                    "type": "string"
                },
                "message": {
                    "description": "Message regarding the last termination of the container\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "(brief) reason from the last termination of the container\n+optional",
                    "type": "string"
                },
                "signal": {
                    "description": "Signal from the last termination of the container\n+optional",
                    "type": "integer"
                },
                "startedAt": {
                    "description": "Time at which previous execution of the container started\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ContainerStateWaiting": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Message regarding why the container is not yet running.\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "(brief) reason the container is not yet running.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ContainerStatus": {
            "type": "object",
            "properties": {
                "containerID": {
                    "description": "Container's ID in the format 'docker://\u003ccontainer_id\u003e'.\n+optional",
                    "type": "string"
                },
                "image": {
                    "description": "The image the container is running.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nTODO(dchen1107): Which image the container is running with?",
                    "type": "string"
                },
                "imageID": {
                    "description": "ImageID of the container's image.",
                    "type": "string"
                },
                "lastState": {
                    "description": "Details about the container's last termination condition.\n+optional",
                    "$ref": "#/definitions/v1.ContainerState"
                },
                "name": {
                    "description": "This must be a DNS_LABEL. Each container in a pod must have a unique name.\nCannot be updated.",
                    "type": "string"
                },
                "ready": {
                    "description": "Specifies whether the container has passed its readiness probe.",
                    "type": "boolean"
                },
                "restartCount": {
                    "description": "The number of times the container has been restarted, currently based on\nthe number of dead containers that have not yet been removed.\nNote that this is calculated from dead containers. But those containers are subject to\ngarbage collection. This value will get capped at 5 by GC.",
                    "type": "integer"
                },
                "state": {
                    "description": "Details about the container's current condition.\n+optional",
                    "$ref": "#/definitions/v1.ContainerState"
                }
            }
        },
        "v1.DaemonSet": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sDaemonSet"
                }
            }
        },
        "v1.DaemonSetCondition": {
            "type": "object",
            "properties": {
                "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.\n+optional",
                    "type": "string"
                },
                "message": {
                    "description": "A human readable message indicating details about the transition.\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "The reason for the condition's last transition.\n+optional",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the condition, one of True, False, Unknown.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of DaemonSet condition.",
                    "type": "string"
                }
            }
        },
        "v1.DaemonSetSpec": {
            "type": "object",
            "properties": {
                "minReadySeconds": {
                    "description": "The minimum number of seconds for which a newly created DaemonSet pod should\nbe ready without any of its container crashing, for it to be considered\navailable. Defaults to 0 (pod will be considered available as soon as it\nis ready).\n+optional",
                    "type": "integer"
                },
                "revisionHistoryLimit": {
                    "description": "The number of old history to retain to allow rollback.\nThis is a pointer to distinguish between explicit zero and not specified.\nDefaults to 10.\n+optional",
                    "type": "integer"
                },
                "selector": {
                    "description": "A label query over pods that are managed by the daemon set.\nMust match in order to be controlled.\nIt must match the pod template's labels.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                    "$ref": "#/definitions/v1.LabelSelector"
                },
                "template": {
                    "description": "An object that describes the pod that will be created.\nThe DaemonSet will create exactly one copy of this pod on every node\nthat matches the template's node selector (or on every node if no node\nselector is specified).\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
                    "$ref": "#/definitions/v1.PodTemplateSpec"
                },
                "updateStrategy": {
                    "description": "An Update strategy to replace existing DaemonSet pods with new pods.\n+optional",
                    "$ref": "#/definitions/v1.DaemonSetUpdateStrategy"
                }
            }
        },
        "v1.DaemonSetStatus": {
            "type": "object",
            "properties": {
                "collisionCount": {
                    "description": "CountByClusterId of hash collisions for the DaemonSet. The DaemonSet controller\nuses this field as a collision avoidance mechanism when it needs to\ncreate the name for the newest ControllerRevision.\n+optional",
                    "type": "integer"
                },
                "conditions": {
                    "description": "Represents the latest available observations of a DaemonSet's current state.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.DaemonSetCondition"
                    }
                },
                "currentNumberScheduled": {
                    "description": "The number of nodes that are running at least 1\ndaemon pod and are supposed to run the daemon pod.\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
                    "type": "integer"
                },
                "desiredNumberScheduled": {
                    "description": "The total number of nodes that should be running the daemon\npod (including nodes correctly running the daemon pod).\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
                    "type": "integer"
                },
                "numberAvailable": {
                    "description": "The number of nodes that should be running the\ndaemon pod and have one or more of the daemon pod running and\navailable (ready for at least spec.minReadySeconds)\n+optional",
                    "type": "integer"
                },
                "numberMisscheduled": {
                    "description": "The number of nodes that are running the daemon pod, but are\nnot supposed to run the daemon pod.\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
                    "type": "integer"
                },
                "numberReady": {
                    "description": "The number of nodes that should be running the daemon pod and have one\nor more of the daemon pod running and ready.",
                    "type": "integer"
                },
                "numberUnavailable": {
                    "description": "The number of nodes that should be running the\ndaemon pod and have none of the daemon pod running and available\n(ready for at least spec.minReadySeconds)\n+optional",
                    "type": "integer"
                },
                "observedGeneration": {
                    "description": "The most recent generation observed by the daemon set controller.\n+optional",
                    "type": "integer"
                },
                "updatedNumberScheduled": {
                    "description": "The total number of nodes that are running updated daemon pod\n+optional",
                    "type": "integer"
                }
            }
        },
        "v1.DaemonSetUpdateStrategy": {
            "type": "object",
            "properties": {
                "rollingUpdate": {
                    "description": "Rolling Update config params. Present only if type = \"RollingUpdate\".\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be. Same as Deployment ` + "`" + `strategy.rollingUpdate` + "`" + `.\nSee https://github.com/kubernetes/kubernetes/issues/35345\n+optional",
                    "$ref": "#/definitions/v1.RollingUpdateDaemonSet"
                },
                "type": {
                    "description": "Type of daemon set Update. Can be \"RollingUpdate\" or \"OnDelete\". Default is RollingUpdate.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.Deployment": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sDeployment"
                }
            }
        },
        "v1.DeploymentCondition": {
            "type": "object",
            "properties": {
                "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                },
                "lastUpdateTime": {
                    "description": "The last time this condition was updated.",
                    "type": "string"
                },
                "message": {
                    "description": "A human readable message indicating details about the transition.",
                    "type": "string"
                },
                "reason": {
                    "description": "The reason for the condition's last transition.",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the condition, one of True, False, Unknown.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of deployment condition.",
                    "type": "string"
                }
            }
        },
        "v1.DeploymentSpec": {
            "type": "object",
            "properties": {
                "minReadySeconds": {
                    "description": "Minimum number of seconds for which a newly created pod should be ready\nwithout any of its container crashing, for it to be considered available.\nDefaults to 0 (pod will be considered available as soon as it is ready)\n+optional",
                    "type": "integer"
                },
                "paused": {
                    "description": "Indicates that the deployment is paused.\n+optional",
                    "type": "boolean"
                },
                "progressDeadlineSeconds": {
                    "description": "The maximum time in seconds for a deployment to make progress before it\nis considered to be failed. The deployment controller will continue to\nprocess failed deployments and a condition with a ProgressDeadlineExceeded\nreason will be surfaced in the deployment status. Note that progress will\nnot be estimated during the time a deployment is paused. Defaults to 600s.",
                    "type": "integer"
                },
                "replicas": {
                    "description": "Number of desired pods. This is a pointer to distinguish between explicit\nzero and not specified. Defaults to 1.\n+optional",
                    "type": "integer"
                },
                "revisionHistoryLimit": {
                    "description": "The number of old ReplicaSets to retain to allow rollback.\nThis is a pointer to distinguish between explicit zero and not specified.\nDefaults to 10.\n+optional",
                    "type": "integer"
                },
                "selector": {
                    "description": "Label selector for pods. Existing ReplicaSets whose pods are\nselected by this will be the ones affected by this deployment.\nIt must match the pod template's labels.",
                    "$ref": "#/definitions/v1.LabelSelector"
                },
                "strategy": {
                    "description": "The deployment strategy to use to replace existing pods with new ones.\n+optional",
                    "$ref": "#/definitions/v1.DeploymentStrategy"
                },
                "template": {
                    "description": "Template describes the pods that will be created.",
                    "$ref": "#/definitions/v1.PodTemplateSpec"
                }
            }
        },
        "v1.DeploymentStatus": {
            "type": "object",
            "properties": {
                "availableReplicas": {
                    "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.\n+optional",
                    "type": "integer"
                },
                "collisionCount": {
                    "description": "CountByClusterId of hash collisions for the Deployment. The Deployment controller uses this\nfield as a collision avoidance mechanism when it needs to create the name for the\nnewest ReplicaSet.\n+optional",
                    "type": "integer"
                },
                "conditions": {
                    "description": "Represents the latest available observations of a deployment's current state.\n+patchMergeKey=type\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.DeploymentCondition"
                    }
                },
                "observedGeneration": {
                    "description": "The generation observed by the deployment controller.\n+optional",
                    "type": "integer"
                },
                "readyReplicas": {
                    "description": "Total number of ready pods targeted by this deployment.\n+optional",
                    "type": "integer"
                },
                "replicas": {
                    "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).\n+optional",
                    "type": "integer"
                },
                "unavailableReplicas": {
                    "description": "Total number of unavailable pods targeted by this deployment. This is the total number of\npods that are still required for the deployment to have 100% available capacity. They may\neither be pods that are running but not yet available or pods that still have not been created.\n+optional",
                    "type": "integer"
                },
                "updatedReplicas": {
                    "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.\n+optional",
                    "type": "integer"
                }
            }
        },
        "v1.DeploymentStrategy": {
            "type": "object",
            "properties": {
                "rollingUpdate": {
                    "description": "Rolling Update config params. Present only if DeploymentStrategyType =\nRollingUpdate.\n---\nTODO: Update this to follow our convention for oneOf, whatever we decide it\nto be.\n+optional",
                    "$ref": "#/definitions/v1.RollingUpdateDeployment"
                },
                "type": {
                    "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.DownwardAPIProjection": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "Items is a list of DownwardAPIVolume file\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.DownwardAPIVolumeFile"
                    }
                }
            }
        },
        "v1.DownwardAPIVolumeFile": {
            "type": "object",
            "properties": {
                "fieldRef": {
                    "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.\n+optional",
                    "$ref": "#/definitions/v1.ObjectFieldSelector"
                },
                "mode": {
                    "description": "Optional: mode bits to use on this file, must be a value between 0\nand 0777. If not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
                    "type": "integer"
                },
                "path": {
                    "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                    "type": "string"
                },
                "resourceFieldRef": {
                    "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.\n+optional",
                    "$ref": "#/definitions/v1.ResourceFieldSelector"
                }
            }
        },
        "v1.DownwardAPIVolumeSource": {
            "type": "object",
            "properties": {
                "defaultMode": {
                    "description": "Optional: mode bits to use on created files by default. Must be a\nvalue between 0 and 0777. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
                    "type": "integer"
                },
                "items": {
                    "description": "Items is a list of downward API volume file\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.DownwardAPIVolumeFile"
                    }
                }
            }
        },
        "v1.Duration": {
            "type": "object",
            "properties": {
                "time.Duration": {
                    "type": "integer"
                }
            }
        },
        "v1.EmptyDirVolumeSource": {
            "type": "object",
            "properties": {
                "medium": {
                    "description": "What type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional",
                    "type": "string"
                },
                "sizeLimit": {
                    "description": "Total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: http://kubernetes.io/docs/user-guide/volumes#emptydir\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.EnvFromSource": {
            "type": "object",
            "properties": {
                "configMapRef": {
                    "description": "The ConfigMap to select from\n+optional",
                    "$ref": "#/definitions/v1.ConfigMapEnvSource"
                },
                "prefix": {
                    "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\n+optional",
                    "type": "string"
                },
                "secretRef": {
                    "description": "The Secret to select from\n+optional",
                    "$ref": "#/definitions/v1.SecretEnvSource"
                }
            }
        },
        "v1.EnvVar": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                },
                "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previous defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. The $(VAR_NAME)\nsyntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped\nreferences will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".\n+optional",
                    "type": "string"
                },
                "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.\n+optional",
                    "$ref": "#/definitions/v1.EnvVarSource"
                }
            }
        },
        "v1.EnvVarSource": {
            "type": "object",
            "properties": {
                "configMapKeyRef": {
                    "description": "Selects a key of a ConfigMap.\n+optional",
                    "$ref": "#/definitions/v1.ConfigMapKeySelector"
                },
                "fieldRef": {
                    "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.\n+optional",
                    "$ref": "#/definitions/v1.ObjectFieldSelector"
                },
                "resourceFieldRef": {
                    "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\n+optional",
                    "$ref": "#/definitions/v1.ResourceFieldSelector"
                },
                "secretKeyRef": {
                    "description": "Selects a key of a secret in the pod's namespace\n+optional",
                    "$ref": "#/definitions/v1.SecretKeySelector"
                }
            }
        },
        "v1.ExecAction": {
            "type": "object",
            "properties": {
                "command": {
                    "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.FCVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
                    "type": "string"
                },
                "lun": {
                    "description": "Optional: FC target lun number\n+optional",
                    "type": "integer"
                },
                "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
                    "type": "boolean"
                },
                "targetWWNs": {
                    "description": "Optional: FC target worldwide names (WWNs)\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "wwids": {
                    "description": "Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.FlexPersistentVolumeSource": {
            "type": "object",
            "properties": {
                "driver": {
                    "description": "Driver is the name of the driver to use for this volume.",
                    "type": "string"
                },
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.\n+optional",
                    "type": "string"
                },
                "options": {
                    "description": "Optional: Extra command options if any.\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "Optional: SecretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.\n+optional",
                    "$ref": "#/definitions/v1.SecretReference"
                }
            }
        },
        "v1.FlexVolumeSource": {
            "type": "object",
            "properties": {
                "driver": {
                    "description": "Driver is the name of the driver to use for this volume.",
                    "type": "string"
                },
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.\n+optional",
                    "type": "string"
                },
                "options": {
                    "description": "Optional: Extra command options if any.\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "Optional: SecretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.\n+optional",
                    "$ref": "#/definitions/v1.LocalObjectReference"
                }
            }
        },
        "v1.FlockerVolumeSource": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "description": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker\nshould be considered as deprecated\n+optional",
                    "type": "string"
                },
                "datasetUUID": {
                    "description": "UID of the dataset. This is unique identifier of a Flocker dataset\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.GCEPersistentDiskVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
                    "type": "string"
                },
                "partition": {
                    "description": "The partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional",
                    "type": "integer"
                },
                "pdName": {
                    "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                    "type": "string"
                },
                "readOnly": {
                    "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.GitRepoVolumeSource": {
            "type": "object",
            "properties": {
                "directory": {
                    "description": "Target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.\n+optional",
                    "type": "string"
                },
                "repository": {
                    "description": "Repository URL",
                    "type": "string"
                },
                "revision": {
                    "description": "Commit hash for the specified revision.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.GlusterfsVolumeSource": {
            "type": "object",
            "properties": {
                "endpoints": {
                    "description": "EndpointsName is the endpoint name that details Glusterfs topology.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                    "type": "string"
                },
                "path": {
                    "description": "Path is the Glusterfs volume path.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                    "type": "string"
                },
                "readOnly": {
                    "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.HTTPGetAction": {
            "type": "object",
            "properties": {
                "host": {
                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional",
                    "type": "string"
                },
                "httpHeaders": {
                    "description": "Custom headers to set in the request. HTTP allows repeated headers.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.HTTPHeader"
                    }
                },
                "path": {
                    "description": "Path to access on the HTTP server.\n+optional",
                    "type": "string"
                },
                "port": {
                    "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                    "$ref": "#/definitions/intstr.IntOrString"
                },
                "scheme": {
                    "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.HTTPHeader": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The header field name",
                    "type": "string"
                },
                "value": {
                    "description": "The header field value",
                    "type": "string"
                }
            }
        },
        "v1.HTTPIngressPath": {
            "type": "object",
            "properties": {
                "backend": {
                    "description": "Backend defines the referenced service endpoint to which the traffic\nwill be forwarded to.",
                    "$ref": "#/definitions/v1.IngressBackend"
                },
                "path": {
                    "description": "Path is an extended POSIX regex as defined by IEEE Std 1003.1,\n(i.e this follows the egrep/unix syntax, not the perl syntax)\nmatched against the path of an incoming request. Currently it can\ncontain characters disallowed from the conventional \"path\"\npart of a URL as defined by RFC 3986. Paths must begin with\na '/'. If unspecified, the path defaults to a catch all sending\ntraffic to the backend.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.HTTPIngressRuleValue": {
            "type": "object",
            "properties": {
                "paths": {
                    "description": "A collection of paths that map requests to backends.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.HTTPIngressPath"
                    }
                }
            }
        },
        "v1.Handler": {
            "type": "object",
            "properties": {
                "exec": {
                    "description": "One and only one of the following should be specified.\nExec specifies the action to take.\n+optional",
                    "$ref": "#/definitions/v1.ExecAction"
                },
                "httpGet": {
                    "description": "HTTPGet specifies the http request to perform.\n+optional",
                    "$ref": "#/definitions/v1.HTTPGetAction"
                },
                "tcpSocket": {
                    "description": "TCPSocket specifies an action involving a TCP port.\nTCP hooks not yet supported\nTODO: implement a realistic TCP lifecycle hook\n+optional",
                    "$ref": "#/definitions/v1.TCPSocketAction"
                }
            }
        },
        "v1.HostAlias": {
            "type": "object",
            "properties": {
                "hostnames": {
                    "description": "Hostnames for the above IP address.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ip": {
                    "description": "IP address of the host file entry.",
                    "type": "string"
                }
            }
        },
        "v1.HostPathVolumeSource": {
            "type": "object",
            "properties": {
                "path": {
                    "description": "Path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                    "type": "string"
                },
                "type": {
                    "description": "Type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.IPBlock": {
            "type": "object",
            "properties": {
                "cidr": {
                    "description": "CIDR is a string representing the IP Block\nValid examples are \"192.168.1.1/24\"",
                    "type": "string"
                },
                "except": {
                    "description": "Except is a slice of CIDRs that should not be included within an IP Block\nValid examples are \"192.168.1.1/24\"\nExcept values will be rejected if they are outside the CIDR range\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.ISCSIPersistentVolumeSource": {
            "type": "object",
            "properties": {
                "chapAuthDiscovery": {
                    "description": "whether support iSCSI Discovery CHAP authentication\n+optional",
                    "type": "boolean"
                },
                "chapAuthSession": {
                    "description": "whether support iSCSI Session CHAP authentication\n+optional",
                    "type": "boolean"
                },
                "fsType": {
                    "description": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
                    "type": "string"
                },
                "initiatorName": {
                    "description": "Custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n\u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.\n+optional",
                    "type": "string"
                },
                "iqn": {
                    "description": "Target iSCSI Qualified Name.",
                    "type": "string"
                },
                "iscsiInterface": {
                    "description": "iSCSI Interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).\n+optional",
                    "type": "string"
                },
                "lun": {
                    "description": "iSCSI Target Lun number.",
                    "type": "integer"
                },
                "portals": {
                    "description": "iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "readOnly": {
                    "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "CHAP Secret for iSCSI target and initiator authentication\n+optional",
                    "$ref": "#/definitions/v1.SecretReference"
                },
                "targetPortal": {
                    "description": "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                    "type": "string"
                }
            }
        },
        "v1.ISCSIVolumeSource": {
            "type": "object",
            "properties": {
                "chapAuthDiscovery": {
                    "description": "whether support iSCSI Discovery CHAP authentication\n+optional",
                    "type": "boolean"
                },
                "chapAuthSession": {
                    "description": "whether support iSCSI Session CHAP authentication\n+optional",
                    "type": "boolean"
                },
                "fsType": {
                    "description": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
                    "type": "string"
                },
                "initiatorName": {
                    "description": "Custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n\u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.\n+optional",
                    "type": "string"
                },
                "iqn": {
                    "description": "Target iSCSI Qualified Name.",
                    "type": "string"
                },
                "iscsiInterface": {
                    "description": "iSCSI Interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).\n+optional",
                    "type": "string"
                },
                "lun": {
                    "description": "iSCSI Target Lun number.",
                    "type": "integer"
                },
                "portals": {
                    "description": "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "readOnly": {
                    "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "CHAP Secret for iSCSI target and initiator authentication\n+optional",
                    "$ref": "#/definitions/v1.LocalObjectReference"
                },
                "targetPortal": {
                    "description": "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                    "type": "string"
                }
            }
        },
        "v1.Ingress": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sIngress"
                }
            }
        },
        "v1.IngressBackend": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "description": "Specifies the name of the referenced service.",
                    "type": "string"
                },
                "servicePort": {
                    "description": "Specifies the port of the referenced service.",
                    "$ref": "#/definitions/intstr.IntOrString"
                }
            }
        },
        "v1.IngressRule": {
            "type": "object",
            "properties": {
                "host": {
                    "description": "Host is the fully qualified domain name of a network host, as defined\nby RFC 3986. Note the following deviations from the \"host\" part of the\nURI as defined in the RFC:\n1. IPs are not allowed. Currently an IngressRuleValue can only apply to the\n\t  IP in the Spec of the parent Ingress.\n2. The ` + "`" + `:` + "`" + ` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future.\nIncoming requests are matched against the host before the IngressRuleValue.\nIf the host is unspecified, the Ingress routes all traffic based on the\nspecified IngressRuleValue.\n+optional",
                    "type": "string"
                },
                "http": {
                    "description": "+optional",
                    "$ref": "#/definitions/v1.HTTPIngressRuleValue"
                }
            }
        },
        "v1.IngressSpec": {
            "type": "object",
            "properties": {
                "backend": {
                    "description": "A default backend capable of servicing requests that don't match any\nrule. At least one of 'backend' or 'rules' must be specified. This field\nis optional to allow the loadbalancer controller or defaulting logic to\nspecify a global default.\n+optional",
                    "$ref": "#/definitions/v1.IngressBackend"
                },
                "rules": {
                    "description": "A list of host rules used to configure the Ingress. If unspecified, or\nno rule matches, all traffic is sent to the default backend.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.IngressRule"
                    }
                },
                "tls": {
                    "description": "TLS configuration. Currently the Ingress only supports a single TLS\nport, 443. If multiple members of this list specify different hosts, they\nwill be multiplexed on the same port according to the hostname specified\nthrough the SNI TLS extension, if the ingress controller fulfilling the\ningress supports SNI.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.IngressTLS"
                    }
                }
            }
        },
        "v1.IngressStatus": {
            "type": "object",
            "properties": {
                "loadBalancer": {
                    "description": "LoadBalancer contains the current status of the load-balancer.\n+optional",
                    "$ref": "#/definitions/v1.LoadBalancerStatus"
                }
            }
        },
        "v1.IngressTLS": {
            "type": "object",
            "properties": {
                "hosts": {
                    "description": "Hosts are a list of hosts included in the TLS certificate. The values in\nthis list must match the name/s used in the tlsSecret. Defaults to the\nwildcard host setting for the loadbalancer controller fulfilling this\nIngress, if left unspecified.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secretName": {
                    "description": "SecretName is the name of the secret used to terminate SSL traffic on 443.\nField is left optional to allow SSL routing based on SNI hostname alone.\nIf the SNI host in a listener conflicts with the \"Host\" header field used\nby an IngressRule, the SNI host is used for termination and value of the\nHost header is used for routing.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.Initializer": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "name of the process that is responsible for initializing this object.",
                    "type": "string"
                }
            }
        },
        "v1.Initializers": {
            "type": "object",
            "properties": {
                "pending": {
                    "description": "Pending is a list of initializers that must execute in order before this object is visible.\nWhen the last pending initializer is removed, and no failing result is set, the initializers\nstruct will be set to nil and the object is considered as initialized and visible to all\nclients.\n+patchMergeKey=name\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Initializer"
                    }
                },
                "result": {
                    "description": "If result is set with the Failure field, the object will be persisted to storage and then deleted,\nensuring that other clients can observe the deletion.",
                    "$ref": "#/definitions/v1.Status"
                }
            }
        },
        "v1.JKSKeystore": {
            "type": "object",
            "properties": {
                "create": {
                    "description": "Create enables JKS keystore creation for the Certificate.\nIf true, a file named ` + "`" + `keystore.jks` + "`" + ` will be created in the target\nSecret resource, encrypted using the password stored in\n` + "`" + `passwordSecretRef` + "`" + `.\nThe keystore file will only be updated upon re-issuance.\nA file named ` + "`" + `truststore.jks` + "`" + ` will also be created in the target\nSecret resource, encrypted using the password stored in\n` + "`" + `passwordSecretRef` + "`" + ` containing the issuing Certificate Authority",
                    "type": "boolean"
                },
                "passwordSecretRef": {
                    "description": "PasswordSecretRef is a reference to a key in a Secret resource\ncontaining the password used to encrypt the JKS keystore.",
                    "$ref": "#/definitions/v1.CertificateSecretKeySelector"
                }
            }
        },
        "v1.K8sCertificate": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.CertificateSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.CertificateStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sClusterRole": {
            "type": "object",
            "properties": {
                "aggregationRule": {
                    "$ref": "#/definitions/v1.AggregationRule"
                },
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.PolicyRule"
                    }
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sConfigMap": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "binaryData": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sDaemonSet": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.DaemonSetSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.DaemonSetStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sDeployment": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.DeploymentSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.DeploymentStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sIngress": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.IngressSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.IngressStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sNamespace": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.NamespaceSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.NamespaceStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sNetworkPolicy": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.NetworkPolicySpec"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sPersistentVolume": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.PersistentVolumeSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.PersistentVolumeStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sPersistentVolumeClaim": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.PersistentVolumeClaimSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.PersistentVolumeClaimStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sPod": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.PodSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.PodStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sReplicaSet": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.ReplicaSetSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.ReplicaSetStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sRole": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.PolicyRule"
                    }
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sRoleBinding": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "roleRef": {
                    "$ref": "#/definitions/v1.RoleRef"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Subject"
                    }
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sSecret": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "stringData": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sService": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.ServiceSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.ServiceStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sServiceAccount": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "automountServiceAccountToken": {
                    "type": "boolean"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "imagePullSecrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.LocalObjectReference"
                    }
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ObjectReference"
                    }
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.K8sStatefulSet": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1.StatefulSetSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.StatefulSetStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.KeyToPath": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "The key to project.",
                    "type": "string"
                },
                "mode": {
                    "description": "Optional: mode bits to use on this file, must be a value between 0\nand 0777. If not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
                    "type": "integer"
                },
                "path": {
                    "description": "The relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                    "type": "string"
                }
            }
        },
        "v1.LabelSelector": {
            "type": "object",
            "properties": {
                "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.LabelSelectorRequirement"
                    }
                },
                "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.LabelSelectorRequirement": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge",
                    "type": "string"
                },
                "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                },
                "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.Lifecycle": {
            "type": "object",
            "properties": {
                "postStart": {
                    "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional",
                    "$ref": "#/definitions/v1.Handler"
                },
                "preStop": {
                    "description": "PreStop is called immediately before a container is terminated.\nThe container is terminated after the handler completes.\nThe reason for termination is passed to the handler.\nRegardless of the outcome of the handler, the container is eventually terminated.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n+optional",
                    "$ref": "#/definitions/v1.Handler"
                }
            }
        },
        "v1.LoadBalancerIngress": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "Hostname is set for load-balancer ingress points that are DNS based\n(typically AWS load-balancers)\n+optional",
                    "type": "string"
                },
                "ip": {
                    "description": "IP is set for load-balancer ingress points that are IP based\n(typically GCE or OpenStack load-balancers)\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.LoadBalancerStatus": {
            "type": "object",
            "properties": {
                "ingress": {
                    "description": "Ingress is a list containing ingress points for the load-balancer.\nTraffic intended for the service should be sent to these ingress points.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.LoadBalancerIngress"
                    }
                }
            }
        },
        "v1.LocalObjectReference": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.LocalVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount.\nIt applies only when the Path is a block device.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default value is to auto-select a fileystem if unspecified.\n+optional",
                    "type": "string"
                },
                "path": {
                    "description": "The full path to the volume on the node.\nIt can be either a directory or block device (disk, partition, ...).",
                    "type": "string"
                }
            }
        },
        "v1.NFSVolumeSource": {
            "type": "object",
            "properties": {
                "path": {
                    "description": "Path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                    "type": "string"
                },
                "readOnly": {
                    "description": "ReadOnly here will force\nthe NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional",
                    "type": "boolean"
                },
                "server": {
                    "description": "Server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                    "type": "string"
                }
            }
        },
        "v1.Namespace": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sNamespace"
                }
            }
        },
        "v1.NamespaceSpec": {
            "type": "object",
            "properties": {
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.NamespaceStatus": {
            "type": "object",
            "properties": {
                "phase": {
                    "type": "string"
                }
            }
        },
        "v1.NetworkPolicy": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sNetworkPolicy"
                }
            }
        },
        "v1.NetworkPolicyEgressRule": {
            "type": "object",
            "properties": {
                "ports": {
                    "description": "List of destination ports for outgoing traffic.\nEach item in this list is combined using a logical OR. If this field is\nempty or missing, this rule matches all ports (traffic not restricted by port).\nIf this field is present and contains at least one item, then this rule allows\ntraffic only if the traffic matches at least one port in the list.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NetworkPolicyPort"
                    }
                },
                "to": {
                    "description": "List of destinations for outgoing traffic of pods selected for this rule.\nItems in this list are combined using a logical OR operation. If this field is\nempty or missing, this rule matches all destinations (traffic not restricted by\ndestination). If this field is present and contains at least one item, this rule\nallows traffic only if the traffic matches at least one item in the to list.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NetworkPolicyPeer"
                    }
                }
            }
        },
        "v1.NetworkPolicyIngressRule": {
            "type": "object",
            "properties": {
                "from": {
                    "description": "List of sources which should be able to access the pods selected for this rule.\nItems in this list are combined using a logical OR operation. If this field is\nempty or missing, this rule matches all sources (traffic not restricted by\nsource). If this field is present and contains at least on item, this rule\nallows traffic only if the traffic matches at least one item in the from list.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NetworkPolicyPeer"
                    }
                },
                "ports": {
                    "description": "List of ports which should be made accessible on the pods selected for this\nrule. Each item in this list is combined using a logical OR. If this field is\nempty or missing, this rule matches all ports (traffic not restricted by port).\nIf this field is present and contains at least one item, then this rule allows\ntraffic only if the traffic matches at least one port in the list.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NetworkPolicyPort"
                    }
                }
            }
        },
        "v1.NetworkPolicyPeer": {
            "type": "object",
            "properties": {
                "ipBlock": {
                    "description": "IPBlock defines policy on a particular IPBlock. If this field is set then\nneither of the other fields can be.\n+optional",
                    "$ref": "#/definitions/v1.IPBlock"
                },
                "namespaceSelector": {
                    "description": "Selects Namespaces using cluster-scoped labels. This field follows standard label\nselector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects\nthe Pods matching PodSelector in the Namespaces selected by NamespaceSelector.\nOtherwise it selects all Pods in the Namespaces selected by NamespaceSelector.\n+optional",
                    "$ref": "#/definitions/v1.LabelSelector"
                },
                "podSelector": {
                    "description": "This is a label selector which selects Pods. This field follows standard label\nselector semantics; if present but empty, it selects all pods.\n\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects\nthe Pods matching PodSelector in the Namespaces selected by NamespaceSelector.\nOtherwise it selects the Pods matching PodSelector in the policy's own Namespace.\n+optional",
                    "$ref": "#/definitions/v1.LabelSelector"
                }
            }
        },
        "v1.NetworkPolicyPort": {
            "type": "object",
            "properties": {
                "port": {
                    "description": "The port on the given protocol. This can either be a numerical or named port on\na pod. If this field is not provided, this matches all port names and numbers.\n+optional",
                    "$ref": "#/definitions/intstr.IntOrString"
                },
                "protocol": {
                    "description": "The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this\nfield defaults to TCP.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.NetworkPolicySpec": {
            "type": "object",
            "properties": {
                "egress": {
                    "description": "List of egress rules to be applied to the selected pods. Outgoing traffic is\nallowed if there are no NetworkPolicies selecting the pod (and cluster policy\notherwise allows the traffic), OR if the traffic matches at least one egress rule\nacross all of the NetworkPolicy objects whose podSelector matches the pod. If\nthis field is empty then this NetworkPolicy limits all outgoing traffic (and serves\nsolely to ensure that the pods it selects are isolated by default).\nThis field is beta-level in 1.8\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NetworkPolicyEgressRule"
                    }
                },
                "ingress": {
                    "description": "List of ingress rules to be applied to the selected pods. Traffic is allowed to\na pod if there are no NetworkPolicies selecting the pod\n(and cluster policy otherwise allows the traffic), OR if the traffic source is\nthe pod's local node, OR if the traffic matches at least one ingress rule\nacross all of the NetworkPolicy objects whose podSelector matches the pod. If\nthis field is empty then this NetworkPolicy does not allow any traffic (and serves\nsolely to ensure that the pods it selects are isolated by default)\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NetworkPolicyIngressRule"
                    }
                },
                "podSelector": {
                    "description": "Selects the pods to which this NetworkPolicy object applies. The array of\ningress rules is applied to any pods selected by this field. Multiple network\npolicies can select the same set of pods. In this case, the ingress rules for\neach are combined additively. This field is NOT optional and follows standard\nlabel selector semantics. An empty podSelector matches all pods in this\nnamespace.",
                    "$ref": "#/definitions/v1.LabelSelector"
                },
                "policyTypes": {
                    "description": "List of rule types that the NetworkPolicy relates to.\nValid options are Ingress, Egress, or Ingress,Egress.\nIf this field is not specified, it will default based on the existence of Ingress or Egress rules;\npolicies that contain an Egress section are assumed to affect Egress, and all policies\n(whether or not they contain an Ingress section) are assumed to affect Ingress.\nIf you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ].\nLikewise, if you want to write a policy that specifies that no egress is allowed,\nyou must specify a policyTypes value that include \"Egress\" (since such a policy would not include\nan Egress section and would otherwise default to just [ \"Ingress\" ]).\nThis field is beta-level in 1.8\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.NodeAffinity": {
            "type": "object",
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.PreferredSchedulingTerm"
                    }
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                    "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an Update), the system\nmay or may not try to eventually evict the pod from its node.\n+optional",
                    "$ref": "#/definitions/v1.NodeSelector"
                }
            }
        },
        "v1.NodeSelector": {
            "type": "object",
            "properties": {
                "nodeSelectorTerms": {
                    "description": "Required. A list of node selector terms. The terms are ORed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NodeSelectorTerm"
                    }
                }
            }
        },
        "v1.NodeSelectorRequirement": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "The label key that the selector applies to.",
                    "type": "string"
                },
                "operator": {
                    "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                    "type": "string"
                },
                "values": {
                    "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.NodeSelectorTerm": {
            "type": "object",
            "properties": {
                "matchExpressions": {
                    "description": "A list of node selector requirements by node's labels.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NodeSelectorRequirement"
                    }
                },
                "matchFields": {
                    "description": "A list of node selector requirements by node's fields.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NodeSelectorRequirement"
                    }
                }
            }
        },
        "v1.ObjectFieldSelector": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".\n+optional",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "Path of the field to select in the specified API version.",
                    "type": "string"
                }
            }
        },
        "v1.ObjectReference": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.\n+optional",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional",
                    "type": "string"
                },
                "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.OwnerReference": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"Delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
                    "type": "boolean"
                },
                "controller": {
                    "description": "If true, this reference points to the managing controller.\n+optional",
                    "type": "boolean"
                },
                "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            }
        },
        "v1.PKCS12Keystore": {
            "type": "object",
            "properties": {
                "create": {
                    "description": "Create enables PKCS12 keystore creation for the Certificate.\nIf true, a file named ` + "`" + `keystore.p12` + "`" + ` will be created in the target\nSecret resource, encrypted using the password stored in\n` + "`" + `passwordSecretRef` + "`" + `.\nThe keystore file will only be updated upon re-issuance.\nA file named ` + "`" + `truststore.p12` + "`" + ` will also be created in the target\nSecret resource, encrypted using the password stored in\n` + "`" + `passwordSecretRef` + "`" + ` containing the issuing Certificate Authority",
                    "type": "boolean"
                },
                "passwordSecretRef": {
                    "description": "PasswordSecretRef is a reference to a key in a Secret resource\ncontaining the password used to encrypt the PKCS12 keystore.",
                    "$ref": "#/definitions/v1.CertificateSecretKeySelector"
                }
            }
        },
        "v1.PersistentVolume": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sPersistentVolume"
                }
            }
        },
        "v1.PersistentVolumeClaim": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sPersistentVolumeClaim"
                }
            }
        },
        "v1.PersistentVolumeClaimCondition": {
            "type": "object",
            "properties": {
                "lastProbeTime": {
                    "description": "Last time we probed the condition.\n+optional",
                    "type": "string"
                },
                "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.\n+optional",
                    "type": "string"
                },
                "message": {
                    "description": "Human-readable message indicating details about last transition.\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "Unique, this should be a short, machine understandable string that gives the reason\nfor condition's last transition. If it reports \"ResizeStarted\" that means the underlying\npersistent volume is being resized.\n+optional",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v1.PersistentVolumeClaimSpec": {
            "type": "object",
            "properties": {
                "accessModes": {
                    "description": "AccessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dataSource": {
                    "description": "This field requires the VolumeSnapshotDataSource alpha feature gate to be\nenabled and currently VolumeSnapshot is the only supported data source.\nIf the provisioner can support VolumeSnapshot data source, it will create\na new volume and data will be restored to the volume at the same time.\nIf the provisioner does not support VolumeSnapshot data source, volume will\nnot be created and the failure will be reported as an event.\nIn the future, we plan to support more data source types and the behavior\nof the provisioner may change.\n+optional",
                    "$ref": "#/definitions/v1.TypedLocalObjectReference"
                },
                "resources": {
                    "description": "Resources represents the minimum resources the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources\n+optional",
                    "$ref": "#/definitions/v1.ResourceRequirements"
                },
                "selector": {
                    "description": "A label query over volumes to consider for binding.\n+optional",
                    "$ref": "#/definitions/v1.LabelSelector"
                },
                "storageClassName": {
                    "description": "Name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\n+optional",
                    "type": "string"
                },
                "volumeMode": {
                    "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.\nThis is an alpha feature and may change in the future.\n+optional",
                    "type": "string"
                },
                "volumeName": {
                    "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.PersistentVolumeClaimStatus": {
            "type": "object",
            "properties": {
                "accessModes": {
                    "description": "AccessModes contains the actual access modes the volume backing the PVC has.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "capacity": {
                    "description": "Represents the actual resources of the underlying volume.\n+optional",
                    "$ref": "#/definitions/v1.ResourceList"
                },
                "conditions": {
                    "description": "Current Condition of persistent volume claim. If underlying persistent volume is being\nresized then the Condition will be set to 'ResizeStarted'.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.PersistentVolumeClaimCondition"
                    }
                },
                "phase": {
                    "description": "Phase represents the current phase of PersistentVolumeClaim.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.PersistentVolumeClaimStruct": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "description": "Spec defines the desired characteristics of a volume requested by a pod author.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n+optional",
                    "$ref": "#/definitions/v1.PersistentVolumeClaimSpec"
                },
                "status": {
                    "description": "Status represents the current information/status of a persistent volume claim.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n+optional",
                    "$ref": "#/definitions/v1.PersistentVolumeClaimStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.PersistentVolumeClaimVolumeSource": {
            "type": "object",
            "properties": {
                "claimName": {
                    "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.PersistentVolumeSpec": {
            "type": "object",
            "properties": {
                "accessModes": {
                    "description": "AccessModes contains all ways the volume can be mounted.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "awsElasticBlockStore": {
                    "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional",
                    "$ref": "#/definitions/v1.AWSElasticBlockStoreVolumeSource"
                },
                "azureDisk": {
                    "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\n+optional",
                    "$ref": "#/definitions/v1.AzureDiskVolumeSource"
                },
                "azureFile": {
                    "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.\n+optional",
                    "$ref": "#/definitions/v1.AzureFilePersistentVolumeSource"
                },
                "capacity": {
                    "description": "A description of the persistent volume's resources and capacity.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity\n+optional",
                    "$ref": "#/definitions/v1.ResourceList"
                },
                "cephfs": {
                    "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime\n+optional",
                    "$ref": "#/definitions/v1.CephFSPersistentVolumeSource"
                },
                "cinder": {
                    "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine\nMore info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md\n+optional",
                    "$ref": "#/definitions/v1.CinderPersistentVolumeSource"
                },
                "claimRef": {
                    "description": "ClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim.\nExpected to be non-nil when bound.\nclaim.VolumeName is the authoritative bind between PV and PVC.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding\n+optional",
                    "$ref": "#/definitions/v1.ObjectReference"
                },
                "csi": {
                    "description": "CSI represents storage that handled by an external CSI driver (Beta feature).\n+optional",
                    "$ref": "#/definitions/v1.CSIPersistentVolumeSource"
                },
                "fc": {
                    "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.\n+optional",
                    "$ref": "#/definitions/v1.FCVolumeSource"
                },
                "flexVolume": {
                    "description": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.\n+optional",
                    "$ref": "#/definitions/v1.FlexPersistentVolumeSource"
                },
                "flocker": {
                    "description": "Flocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running\n+optional",
                    "$ref": "#/definitions/v1.FlockerVolumeSource"
                },
                "gcePersistentDisk": {
                    "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod. Provisioned by an admin.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional",
                    "$ref": "#/definitions/v1.GCEPersistentDiskVolumeSource"
                },
                "glusterfs": {
                    "description": "Glusterfs represents a Glusterfs volume that is attached to a host and\nexposed to the pod. Provisioned by an admin.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md\n+optional",
                    "$ref": "#/definitions/v1.GlusterfsVolumeSource"
                },
                "hostPath": {
                    "description": "HostPath represents a directory on the host.\nProvisioned by a developer or tester.\nThis is useful for single-node development and testing only!\nOn-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n+optional",
                    "$ref": "#/definitions/v1.HostPathVolumeSource"
                },
                "iscsi": {
                    "description": "ISCSI represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod. Provisioned by an admin.\n+optional",
                    "$ref": "#/definitions/v1.ISCSIPersistentVolumeSource"
                },
                "local": {
                    "description": "Local represents directly-attached storage with node affinity\n+optional",
                    "$ref": "#/definitions/v1.LocalVolumeSource"
                },
                "mountOptions": {
                    "description": "A list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will\nsimply fail if one is invalid.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nfs": {
                    "description": "NFS represents an NFS mount on the host. Provisioned by an admin.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional",
                    "$ref": "#/definitions/v1.NFSVolumeSource"
                },
                "nodeAffinity": {
                    "description": "NodeAffinity defines constraints that limit what nodes this volume can be accessed from.\nThis field influences the scheduling of pods that use this volume.\n+optional",
                    "$ref": "#/definitions/v1.VolumeNodeAffinity"
                },
                "persistentVolumeReclaimPolicy": {
                    "description": "What happens to a persistent volume when released from its claim.\nValid options are Retain (default for manually created PersistentVolumes), Delete (default\nfor dynamically provisioned PersistentVolumes), and Recycle (deprecated).\nRecycle must be supported by the volume plugin underlying this PersistentVolume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming\n+optional",
                    "type": "string"
                },
                "photonPersistentDisk": {
                    "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                    "$ref": "#/definitions/v1.PhotonPersistentDiskVolumeSource"
                },
                "portworxVolume": {
                    "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine\n+optional",
                    "$ref": "#/definitions/v1.PortworxVolumeSource"
                },
                "quobyte": {
                    "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime\n+optional",
                    "$ref": "#/definitions/v1.QuobyteVolumeSource"
                },
                "rbd": {
                    "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md\n+optional",
                    "$ref": "#/definitions/v1.RBDPersistentVolumeSource"
                },
                "scaleIO": {
                    "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\n+optional",
                    "$ref": "#/definitions/v1.ScaleIOPersistentVolumeSource"
                },
                "storageClassName": {
                    "description": "Name of StorageClass to which this persistent volume belongs. Empty value\nmeans that this volume does not belong to any StorageClass.\n+optional",
                    "type": "string"
                },
                "storageos": {
                    "description": "StorageOS represents a StorageOS volume that is attached to the kubelet's host machine and mounted into the pod\nMore info: https://releases.k8s.io/HEAD/examples/volumes/storageos/README.md\n+optional",
                    "$ref": "#/definitions/v1.StorageOSPersistentVolumeSource"
                },
                "volumeMode": {
                    "description": "volumeMode defines if a volume is intended to be used with a formatted filesystem\nor to remain in raw block state. Value of Filesystem is implied when not included in spec.\nThis is an alpha feature and may change in the future.\n+optional",
                    "type": "string"
                },
                "vsphereVolume": {
                    "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine\n+optional",
                    "$ref": "#/definitions/v1.VsphereVirtualDiskVolumeSource"
                }
            }
        },
        "v1.PersistentVolumeStatus": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "A human-readable message indicating details about why the volume is in this state.\n+optional",
                    "type": "string"
                },
                "phase": {
                    "description": "Phase indicates if a volume is available, bound to a claim, or released by a claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "Reason is a brief CamelCase string that describes any failure and is meant\nfor machine parsing and tidy display in the CLI.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.PhotonPersistentDiskVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                },
                "pdID": {
                    "description": "ID that identifies Photon Controller persistent disk",
                    "type": "string"
                }
            }
        },
        "v1.Pod": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sPod"
                }
            }
        },
        "v1.PodAffinity": {
            "type": "object",
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.WeightedPodAffinityTerm"
                    }
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                    "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label Update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.PodAffinityTerm"
                    }
                }
            }
        },
        "v1.PodAffinityTerm": {
            "type": "object",
            "properties": {
                "labelSelector": {
                    "description": "A label query over a set of resources, in this case pods.\n+optional",
                    "$ref": "#/definitions/v1.LabelSelector"
                },
                "namespaces": {
                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against);\nnull or empty list means \"this pod's namespace\"\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "topologyKey": {
                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                    "type": "string"
                }
            }
        },
        "v1.PodAntiAffinity": {
            "type": "object",
            "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.WeightedPodAffinityTerm"
                    }
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                    "description": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label Update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.PodAffinityTerm"
                    }
                }
            }
        },
        "v1.PodCondition": {
            "type": "object",
            "properties": {
                "lastProbeTime": {
                    "description": "Last time we probed the condition.\n+optional",
                    "type": "string"
                },
                "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.\n+optional",
                    "type": "string"
                },
                "message": {
                    "description": "Human-readable message indicating details about last transition.\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.\n+optional",
                    "type": "string"
                },
                "status": {
                    "description": "Status is the status of the condition.\nCan be True, False, Unknown.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                    "type": "string"
                },
                "type": {
                    "description": "Type is the type of the condition.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                    "type": "string"
                }
            }
        },
        "v1.PodDNSConfig": {
            "type": "object",
            "properties": {
                "nameservers": {
                    "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "options": {
                    "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.PodDNSConfigOption"
                    }
                },
                "searches": {
                    "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.PodDNSConfigOption": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Required.",
                    "type": "string"
                },
                "value": {
                    "description": "+optional",
                    "type": "string"
                }
            }
        },
        "v1.PodReadinessGate": {
            "type": "object",
            "properties": {
                "conditionType": {
                    "description": "ConditionType refers to a condition in the pod's condition list with matching type.",
                    "type": "string"
                }
            }
        },
        "v1.PodSecurityContext": {
            "type": "object",
            "properties": {
                "fsGroup": {
                    "description": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\n+optional",
                    "type": "integer"
                },
                "runAsGroup": {
                    "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\n+optional",
                    "type": "integer"
                },
                "runAsNonRoot": {
                    "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional",
                    "type": "boolean"
                },
                "runAsUser": {
                    "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\n+optional",
                    "type": "integer"
                },
                "seLinuxOptions": {
                    "description": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\n+optional",
                    "$ref": "#/definitions/v1.SELinuxOptions"
                },
                "supplementalGroups": {
                    "description": "A list of groups applied to the first process run in each container, in addition\nto the container's primary GID.  If unspecified, no groups will be added to\nany container.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sysctls": {
                    "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Sysctl"
                    }
                }
            }
        },
        "v1.PodSpec": {
            "type": "object",
            "properties": {
                "activeDeadlineSeconds": {
                    "description": "Optional duration in seconds the pod may be active on the node relative to\nStartTime before the system will actively try to mark it failed and kill associated containers.\nValue must be a positive integer.\n+optional",
                    "type": "integer"
                },
                "affinity": {
                    "description": "If specified, the pod's scheduling constraints\n+optional",
                    "$ref": "#/definitions/v1.Affinity"
                },
                "automountServiceAccountToken": {
                    "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.\n+optional",
                    "type": "boolean"
                },
                "containers": {
                    "description": "List of containers belonging to the pod.\nContainers cannot currently be added or removed.\nThere must be at least one container in a Pod.\nCannot be updated.\n+patchMergeKey=name\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Container"
                    }
                },
                "dnsConfig": {
                    "description": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.\n+optional",
                    "$ref": "#/definitions/v1.PodDNSConfig"
                },
                "dnsPolicy": {
                    "description": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'.\n+optional",
                    "type": "string"
                },
                "hostAliases": {
                    "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts\nfile if specified. This is only valid for non-hostNetwork pods.\n+optional\n+patchMergeKey=ip\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.HostAlias"
                    }
                },
                "hostIPC": {
                    "description": "Use the host's ipc namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional",
                    "type": "boolean"
                },
                "hostNetwork": {
                    "description": "Host networking requested for this pod. Use the host's network namespace.\nIf this option is set, the ports that will be used must be specified.\nDefault to false.\n+k8s:conversion-gen=false\n+optional",
                    "type": "boolean"
                },
                "hostPID": {
                    "description": "Use the host's pid namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional",
                    "type": "boolean"
                },
                "hostname": {
                    "description": "Specifies the hostname of the Pod\nIf not specified, the pod's hostname will be set to a system-defined value.\n+optional",
                    "type": "string"
                },
                "imagePullSecrets": {
                    "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.\nIf specified, these secrets will be passed to individual puller implementations for them to use. For example,\nin the case of docker, only DockerConfig type secrets are honored.\nMore info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod\n+optional\n+patchMergeKey=name\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.LocalObjectReference"
                    }
                },
                "initContainers": {
                    "description": "List of initialization containers belonging to the pod.\nInit containers are executed in order prior to containers being started. If any\ninit container fails, the pod is considered to have failed and is handled according\nto its restartPolicy. The name for an init container or normal container must be\nunique among all containers.\nInit containers may not have Lifecycle actions, Readiness probes, or Liveness probes.\nThe resourceRequirements of an init container are taken into account during scheduling\nby finding the highest request/limit for each resource type, and then using the max of\nof that value or the sum of the normal containers. Limits are applied to init containers\nin a similar fashion.\nInit containers cannot currently be added or removed.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n+patchMergeKey=name\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Container"
                    }
                },
                "nodeName": {
                    "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty,\nthe scheduler simply schedules this pod onto that node, assuming that it fits resource\nrequirements.\n+optional",
                    "type": "string"
                },
                "nodeSelector": {
                    "description": "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "priority": {
                    "description": "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority.\n+optional",
                    "type": "integer"
                },
                "priorityClassName": {
                    "description": "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.\n+optional",
                    "type": "string"
                },
                "readinessGates": {
                    "description": "If specified, all readiness gates will be evaluated for pod readiness.\nA pod is ready when all its containers are ready AND\nall conditions specified in the readiness gates have status equal to \"True\"\nMore info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.PodReadinessGate"
                    }
                },
                "restartPolicy": {
                    "description": "Restart policy for all containers within the pod.\nOne of Always, OnFailure, Never.\nDefault to Always.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy\n+optional",
                    "type": "string"
                },
                "runtimeClassName": {
                    "description": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used\nto run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.\nIf unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md\nThis is an alpha feature and may change in the future.\n+optional",
                    "type": "string"
                },
                "schedulerName": {
                    "description": "If specified, the pod will be dispatched by specified scheduler.\nIf not specified, the pod will be dispatched by default scheduler.\n+optional",
                    "type": "string"
                },
                "securityContext": {
                    "description": "SecurityContext holds pod-level security attributes and common container settings.\nOptional: Defaults to empty.  See type description for default values of each field.\n+optional",
                    "$ref": "#/definitions/v1.PodSecurityContext"
                },
                "serviceAccount": {
                    "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.\nDeprecated: Use serviceAccountName instead.\n+k8s:conversion-gen=false\n+optional",
                    "type": "string"
                },
                "serviceAccountName": {
                    "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n+optional",
                    "type": "string"
                },
                "shareProcessNamespace": {
                    "description": "Share a single process namespace between all of the containers in a pod.\nWhen this is set containers will be able to view and signal processes from other containers\nin the same pod, and the first process in each container will not be assigned PID 1.\nHostPID and ShareProcessNamespace cannot both be set.\nOptional: Default to false.\nThis field is beta-level and may be disabled with the PodShareProcessNamespace feature.\n+k8s:conversion-gen=false\n+optional",
                    "type": "boolean"
                },
                "subdomain": {
                    "description": "If specified, the fully qualified Pod hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\".\nIf not specified, the pod will not have a domainname at all.\n+optional",
                    "type": "string"
                },
                "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in Delete request.\nValue must be non-negative integer. The value zero indicates Delete immediately.\nIf this value is nil, the default grace period will be used instead.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nDefaults to 30 seconds.\n+optional",
                    "type": "integer"
                },
                "tolerations": {
                    "description": "If specified, the pod's tolerations.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Toleration"
                    }
                },
                "volumes": {
                    "description": "List of volumes that can be mounted by containers belonging to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes\n+optional\n+patchMergeKey=name\n+patchStrategy=merge,retainKeys",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Volume"
                    }
                }
            }
        },
        "v1.PodStatus": {
            "type": "object",
            "properties": {
                "conditions": {
                    "description": "Current service state of pod.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.PodCondition"
                    }
                },
                "containerStatuses": {
                    "description": "The list has one entry per container in the manifest. Each entry is currently the output\nof ` + "`" + `docker inspect` + "`" + `.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ContainerStatus"
                    }
                },
                "hostIP": {
                    "description": "IP address of the host to which the pod is assigned. Empty if not yet scheduled.\n+optional",
                    "type": "string"
                },
                "initContainerStatuses": {
                    "description": "The list has one entry per init container in the manifest. The most recent successful\ninit container will have ready = true, the most recently started container will have\nstartTime set.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ContainerStatus"
                    }
                },
                "message": {
                    "description": "A human readable message indicating details about why the pod is in this condition.\n+optional",
                    "type": "string"
                },
                "nominatedNodeName": {
                    "description": "nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be\nscheduled right away as preemption victims receive their graceful termination periods.\nThis field does not guarantee that the pod will be scheduled on this node. Scheduler may decide\nto place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to\ngive the resources on this node to a higher priority pod that is created after preemption.\nAs a result, this field may be different than PodSpec.nodeName when the pod is\nscheduled.\n+optional",
                    "type": "string"
                },
                "phase": {
                    "description": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle.\nThe conditions array, the reason and message fields, and the individual container status\narrays contain more detail about the pod's status.\nThere are five possible phase values:\n\nPending: The pod has been accepted by the Kubernetes system, but one or more of the\ncontainer images has not been created. This includes time before being scheduled as\nwell as time spent downloading images over the network, which could take a while.\nRunning: The pod has been bound to a node, and all of the containers have been created.\nAt least one container is still running, or is in the process of starting or restarting.\nSucceeded: All containers in the pod have terminated in success, and will not be restarted.\nFailed: All containers in the pod have terminated, and at least one container has\nterminated in failure. The container either exited with non-zero status or was terminated\nby the system.\nUnknown: For some reason the state of the pod could not be obtained, typically due to an\nerror in communicating with the host of the pod.\n\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase\n+optional",
                    "type": "string"
                },
                "podIP": {
                    "description": "IP address allocated to the pod. Routable at least within the cluster.\nEmpty if not yet allocated.\n+optional",
                    "type": "string"
                },
                "qosClass": {
                    "description": "The Quality of Service (QOS) classification assigned to the pod based on resource requirements\nSee PodQOSClass type for available QOS classes\nMore info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "A brief CamelCase message indicating details about why the pod is in this state.\ne.g. 'Evicted'\n+optional",
                    "type": "string"
                },
                "startTime": {
                    "description": "RFC 3339 date and time at which the object was acknowledged by the Kubelet.\nThis is before the Kubelet pulled the container image(s) for the pod.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.PodTemplateSpec": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "description": "Specification of the desired behavior of the pod.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n+optional",
                    "$ref": "#/definitions/v1.PodSpec"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.PolicyRule": {
            "type": "object",
            "properties": {
                "apiGroups": {
                    "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of\nthe enumerated resources in any API group will be allowed.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nonResourceURLs": {
                    "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path\nSince non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.\nRules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceNames": {
                    "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resources": {
                    "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "verbs": {
                    "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.PortworxVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "FSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
                    "type": "boolean"
                },
                "volumeID": {
                    "description": "VolumeID uniquely identifies a Portworx volume",
                    "type": "string"
                }
            }
        },
        "v1.PreferredSchedulingTerm": {
            "type": "object",
            "properties": {
                "preference": {
                    "description": "A node selector term, associated with the corresponding weight.",
                    "$ref": "#/definitions/v1.NodeSelectorTerm"
                },
                "weight": {
                    "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                    "type": "integer"
                }
            }
        },
        "v1.Probe": {
            "type": "object",
            "properties": {
                "exec": {
                    "description": "One and only one of the following should be specified.\nExec specifies the action to take.\n+optional",
                    "$ref": "#/definitions/v1.ExecAction"
                },
                "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.\n+optional",
                    "type": "integer"
                },
                "httpGet": {
                    "description": "HTTPGet specifies the http request to perform.\n+optional",
                    "$ref": "#/definitions/v1.HTTPGetAction"
                },
                "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional",
                    "type": "integer"
                },
                "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.\n+optional",
                    "type": "integer"
                },
                "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness. Minimum value is 1.\n+optional",
                    "type": "integer"
                },
                "tcpSocket": {
                    "description": "TCPSocket specifies an action involving a TCP port.\nTCP hooks not yet supported\nTODO: implement a realistic TCP lifecycle hook\n+optional",
                    "$ref": "#/definitions/v1.TCPSocketAction"
                },
                "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional",
                    "type": "integer"
                }
            }
        },
        "v1.ProjectedVolumeSource": {
            "type": "object",
            "properties": {
                "defaultMode": {
                    "description": "Mode bits to use on created files by default. Must be a value between\n0 and 0777.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
                    "type": "integer"
                },
                "sources": {
                    "description": "list of volume projections",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.VolumeProjection"
                    }
                }
            }
        },
        "v1.QuobyteVolumeSource": {
            "type": "object",
            "properties": {
                "group": {
                    "description": "Group to map volume access to\nDefault is no group\n+optional",
                    "type": "string"
                },
                "readOnly": {
                    "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.\n+optional",
                    "type": "boolean"
                },
                "registry": {
                    "description": "Registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes",
                    "type": "string"
                },
                "user": {
                    "description": "User to map volume access to\nDefaults to serivceaccount user\n+optional",
                    "type": "string"
                },
                "volume": {
                    "description": "Volume is a string that references an already created Quobyte volume by name.",
                    "type": "string"
                }
            }
        },
        "v1.RBDPersistentVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
                    "type": "string"
                },
                "image": {
                    "description": "The rados image name.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "string"
                },
                "keyring": {
                    "description": "Keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it\n+optional",
                    "type": "string"
                },
                "monitors": {
                    "description": "A collection of Ceph monitors.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pool": {
                    "description": "The rados pool name.\nDefault is rbd.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it\n+optional",
                    "type": "string"
                },
                "readOnly": {
                    "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "SecretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it\n+optional",
                    "$ref": "#/definitions/v1.SecretReference"
                },
                "user": {
                    "description": "The rados user name.\nDefault is admin.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.RBDVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
                    "type": "string"
                },
                "image": {
                    "description": "The rados image name.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "string"
                },
                "keyring": {
                    "description": "Keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it\n+optional",
                    "type": "string"
                },
                "monitors": {
                    "description": "A collection of Ceph monitors.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pool": {
                    "description": "The rados pool name.\nDefault is rbd.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it\n+optional",
                    "type": "string"
                },
                "readOnly": {
                    "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "SecretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it\n+optional",
                    "$ref": "#/definitions/v1.LocalObjectReference"
                },
                "user": {
                    "description": "The rados user name.\nDefault is admin.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ReplicaSet": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sReplicaSet"
                }
            }
        },
        "v1.ReplicaSetCondition": {
            "type": "object",
            "properties": {
                "lastTransitionTime": {
                    "description": "The last time the condition transitioned from one status to another.\n+optional",
                    "type": "string"
                },
                "message": {
                    "description": "A human readable message indicating details about the transition.\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "The reason for the condition's last transition.\n+optional",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the condition, one of True, False, Unknown.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of replica set condition.",
                    "type": "string"
                }
            }
        },
        "v1.ReplicaSetSpec": {
            "type": "object",
            "properties": {
                "minReadySeconds": {
                    "description": "Minimum number of seconds for which a newly created pod should be ready\nwithout any of its container crashing, for it to be considered available.\nDefaults to 0 (pod will be considered available as soon as it is ready)\n+optional",
                    "type": "integer"
                },
                "replicas": {
                    "description": "Replicas is the number of desired replicas.\nThis is a pointer to distinguish between explicit zero and unspecified.\nDefaults to 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller\n+optional",
                    "type": "integer"
                },
                "selector": {
                    "description": "Selector is a label query over pods that should match the replica count.\nLabel keys and values that must match in order to be controlled by this replica set.\nIt must match the pod template's labels.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                    "$ref": "#/definitions/v1.LabelSelector"
                },
                "template": {
                    "description": "Template is the object that describes the pod that will be created if\ninsufficient replicas are detected.\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template\n+optional",
                    "$ref": "#/definitions/v1.PodTemplateSpec"
                }
            }
        },
        "v1.ReplicaSetStatus": {
            "type": "object",
            "properties": {
                "availableReplicas": {
                    "description": "The number of available replicas (ready for at least minReadySeconds) for this replica set.\n+optional",
                    "type": "integer"
                },
                "conditions": {
                    "description": "Represents the latest available observations of a replica set's current state.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ReplicaSetCondition"
                    }
                },
                "fullyLabeledReplicas": {
                    "description": "The number of pods that have labels matching the labels of the pod template of the replicaset.\n+optional",
                    "type": "integer"
                },
                "observedGeneration": {
                    "description": "ObservedGeneration reflects the generation of the most recently observed ReplicaSet.\n+optional",
                    "type": "integer"
                },
                "readyReplicas": {
                    "description": "The number of ready replicas for this replica set.\n+optional",
                    "type": "integer"
                },
                "replicas": {
                    "description": "Replicas is the most recently oberved number of replicas.\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
                    "type": "integer"
                }
            }
        },
        "v1.ResourceFieldSelector": {
            "type": "object",
            "properties": {
                "containerName": {
                    "description": "Container name: required for volumes, optional for env vars\n+optional",
                    "type": "string"
                },
                "divisor": {
                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"\n+optional",
                    "type": "string"
                },
                "resource": {
                    "description": "Required: resource to select",
                    "type": "string"
                }
            }
        },
        "v1.ResourceList": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "v1.ResourceRequirements": {
            "type": "object",
            "properties": {
                "limits": {
                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n+optional",
                    "$ref": "#/definitions/v1.ResourceList"
                },
                "requests": {
                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n+optional",
                    "$ref": "#/definitions/v1.ResourceList"
                }
            }
        },
        "v1.Role": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sRole"
                }
            }
        },
        "v1.RoleBinding": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sRoleBinding"
                }
            }
        },
        "v1.RoleRef": {
            "type": "object",
            "properties": {
                "apiGroup": {
                    "description": "APIGroup is the group for the resource being referenced",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is the type of resource being referenced",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of resource being referenced",
                    "type": "string"
                }
            }
        },
        "v1.RollingUpdateDaemonSet": {
            "type": "object",
            "properties": {
                "maxUnavailable": {
                    "description": "The maximum number of DaemonSet pods that can be unavailable during the\nUpdate. Value can be an absolute number (ex: 5) or a percentage of total\nnumber of DaemonSet pods at the start of the Update (ex: 10%). Absolute\nnumber is calculated from percentage by rounding up.\nThis cannot be 0.\nDefault value is 1.\nExample: when this is set to 30%, at most 30% of the total number of nodes\nthat should be running the daemon pod (i.e. status.desiredNumberScheduled)\ncan have their pods stopped for an Update at any given\ntime. The Update starts by stopping at most 30% of those DaemonSet pods\nand then brings up new DaemonSet pods in their place. Once the new pods\nare available, it then proceeds onto other DaemonSet pods, thus ensuring\nthat at least 70% of original number of DaemonSet pods are available at\nall times during the Update.\n+optional",
                    "$ref": "#/definitions/intstr.IntOrString"
                }
            }
        },
        "v1.RollingUpdateDeployment": {
            "type": "object",
            "properties": {
                "maxSurge": {
                    "description": "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling Update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the Update is at most 130% of desired pods.\n+optional",
                    "$ref": "#/definitions/intstr.IntOrString"
                },
                "maxUnavailable": {
                    "description": "The maximum number of pods that can be unavailable during the Update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling Update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the Update is at\nleast 70% of desired pods.\n+optional",
                    "$ref": "#/definitions/intstr.IntOrString"
                }
            }
        },
        "v1.RollingUpdateStatefulSetStrategy": {
            "type": "object",
            "properties": {
                "partition": {
                    "description": "Partition indicates the ordinal at which the StatefulSet should be\npartitioned.\nDefault value is 0.\n+optional",
                    "type": "integer"
                }
            }
        },
        "v1.SELinuxOptions": {
            "type": "object",
            "properties": {
                "level": {
                    "description": "Level is SELinux level label that applies to the container.\n+optional",
                    "type": "string"
                },
                "role": {
                    "description": "Role is a SELinux role label that applies to the container.\n+optional",
                    "type": "string"
                },
                "type": {
                    "description": "Type is a SELinux type label that applies to the container.\n+optional",
                    "type": "string"
                },
                "user": {
                    "description": "User is a SELinux user label that applies to the container.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ScaleIOPersistentVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\"\n+optional",
                    "type": "string"
                },
                "gateway": {
                    "description": "The host address of the ScaleIO API Gateway.",
                    "type": "string"
                },
                "protectionDomain": {
                    "description": "The name of the ScaleIO Protection Domain for the configured storage.\n+optional",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "SecretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail.",
                    "$ref": "#/definitions/v1.SecretReference"
                },
                "sslEnabled": {
                    "description": "Flag to enable/disable SSL communication with Gateway, default false\n+optional",
                    "type": "boolean"
                },
                "storageMode": {
                    "description": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.\n+optional",
                    "type": "string"
                },
                "storagePool": {
                    "description": "The ScaleIO Storage Pool associated with the protection domain.\n+optional",
                    "type": "string"
                },
                "system": {
                    "description": "The name of the storage system as configured in ScaleIO.",
                    "type": "string"
                },
                "volumeName": {
                    "description": "The name of a volume already created in the ScaleIO system\nthat is associated with this volume source.",
                    "type": "string"
                }
            }
        },
        "v1.ScaleIOVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".\n+optional",
                    "type": "string"
                },
                "gateway": {
                    "description": "The host address of the ScaleIO API Gateway.",
                    "type": "string"
                },
                "protectionDomain": {
                    "description": "The name of the ScaleIO Protection Domain for the configured storage.\n+optional",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "SecretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail.",
                    "$ref": "#/definitions/v1.LocalObjectReference"
                },
                "sslEnabled": {
                    "description": "Flag to enable/disable SSL communication with Gateway, default false\n+optional",
                    "type": "boolean"
                },
                "storageMode": {
                    "description": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.\n+optional",
                    "type": "string"
                },
                "storagePool": {
                    "description": "The ScaleIO Storage Pool associated with the protection domain.\n+optional",
                    "type": "string"
                },
                "system": {
                    "description": "The name of the storage system as configured in ScaleIO.",
                    "type": "string"
                },
                "volumeName": {
                    "description": "The name of a volume already created in the ScaleIO system\nthat is associated with this volume source.",
                    "type": "string"
                }
            }
        },
        "v1.Secret": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sSecret"
                }
            }
        },
        "v1.SecretEnvSource": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the Secret must be defined\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.SecretKeySelector": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the Secret or it's key must be defined\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.SecretProjection": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.KeyToPath"
                    }
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the Secret or its key must be defined\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.SecretReference": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name is unique within a namespace to reference a secret resource.\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which the secret name must be unique.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.SecretVolumeSource": {
            "type": "object",
            "properties": {
                "defaultMode": {
                    "description": "Optional: mode bits to use on created files by default. Must be a\nvalue between 0 and 0777. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
                    "type": "integer"
                },
                "items": {
                    "description": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.KeyToPath"
                    }
                },
                "optional": {
                    "description": "Specify whether the Secret or it's keys must be defined\n+optional",
                    "type": "boolean"
                },
                "secretName": {
                    "description": "Name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.SecurityContext": {
            "type": "object",
            "properties": {
                "allowPrivilegeEscalation": {
                    "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\n+optional",
                    "type": "boolean"
                },
                "capabilities": {
                    "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\n+optional",
                    "$ref": "#/definitions/v1.Capabilities"
                },
                "privileged": {
                    "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\n+optional",
                    "type": "boolean"
                },
                "procMount": {
                    "description": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\n+optional",
                    "type": "string"
                },
                "readOnlyRootFilesystem": {
                    "description": "Whether this container has a read-only root filesystem.\nDefault is false.\n+optional",
                    "type": "boolean"
                },
                "runAsGroup": {
                    "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional",
                    "type": "integer"
                },
                "runAsNonRoot": {
                    "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional",
                    "type": "boolean"
                },
                "runAsUser": {
                    "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional",
                    "type": "integer"
                },
                "seLinuxOptions": {
                    "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional",
                    "$ref": "#/definitions/v1.SELinuxOptions"
                }
            }
        },
        "v1.Service": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sService"
                }
            }
        },
        "v1.ServiceAccount": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sServiceAccount"
                }
            }
        },
        "v1.ServiceAccountTokenProjection": {
            "type": "object",
            "properties": {
                "audience": {
                    "description": "Audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.\n+optional",
                    "type": "string"
                },
                "expirationSeconds": {
                    "description": "ExpirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.\n+optional",
                    "type": "integer"
                },
                "path": {
                    "description": "Path is the path relative to the mount point of the file to project the\ntoken into.",
                    "type": "string"
                }
            }
        },
        "v1.ServicePort": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of this port within the service. This must be a DNS_LABEL.\nAll ports within a ServiceSpec must have unique names. This maps to\nthe 'Name' field in EndpointPort objects.\nOptional if only one ServicePort is defined on this service.\n+optional",
                    "type": "string"
                },
                "nodePort": {
                    "description": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer.\nUsually assigned by the system. If specified, it will be allocated to the service\nif unused or else creation of the service will fail.\nDefault is to auto-allocate a port if the ServiceType of this Service requires one.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n+optional",
                    "type": "integer"
                },
                "port": {
                    "description": "The port that will be exposed by this service.",
                    "type": "integer"
                },
                "protocol": {
                    "description": "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\".\nDefault is TCP.\n+optional",
                    "type": "string"
                },
                "targetPort": {
                    "description": "Number or name of the port to access on the pods targeted by the service.\nNumber must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\nIf this is a string, it will be looked up as a named port in the\ntarget Pod's container ports. If this is not specified, the value\nof the 'port' field is used (an identity map).\nThis field is ignored for services with clusterIP=None, and should be\nomitted or set equal to the 'port' field.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service\n+optional",
                    "$ref": "#/definitions/intstr.IntOrString"
                }
            }
        },
        "v1.ServiceSpec": {
            "type": "object",
            "properties": {
                "clusterIP": {
                    "description": "clusterIP is the IP address of the service and is usually assigned\nrandomly by the master. If an address is specified manually and is not in\nuse by others, it will be allocated to the service; otherwise, creation\nof the service will fail. This field can not be changed through updates.\nValid values are \"None\", empty string (\"\"), or a valid IP address. \"None\"\ncan be specified for headless services when proxying is not required.\nOnly applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if\ntype is ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+optional",
                    "type": "string"
                },
                "externalIPs": {
                    "description": "externalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service.  These IPs are not managed by\nKubernetes.  The user is responsible for ensuring that traffic arrives\nat a node with this IP.  A common example is external load-balancers\nthat are not part of the Kubernetes system.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "externalName": {
                    "description": "externalName is the external reference that kubedns or equivalent will\nreturn as a CNAME record for this service. No proxying will be involved.\nMust be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)\nand requires Type to be ExternalName.\n+optional",
                    "type": "string"
                },
                "externalTrafficPolicy": {
                    "description": "externalTrafficPolicy denotes if this Service desires to route external\ntraffic to node-local or cluster-wide endpoints. \"Local\" preserves the\nclient source IP and avoids a second hop for LoadBalancer and Nodeport\ntype services, but risks potentially imbalanced traffic spreading.\n\"Cluster\" obscures the client source IP and may cause a second hop to\nanother node, but should have good overall load-spreading.\n+optional",
                    "type": "string"
                },
                "healthCheckNodePort": {
                    "description": "healthCheckNodePort specifies the healthcheck nodePort for the service.\nIf not specified, HealthCheckNodePort is created by the service api\nbackend with the allocated nodePort. Will use user-specified nodePort value\nif specified by the client. Only effects when Type is set to LoadBalancer\nand ExternalTrafficPolicy is set to Local.\n+optional",
                    "type": "integer"
                },
                "loadBalancerIP": {
                    "description": "Only applies to Service Type: LoadBalancer\nLoadBalancer will get created with the IP specified in this field.\nThis feature depends on whether the underlying cloud-provider supports specifying\nthe loadBalancerIP when a load balancer is created.\nThis field will be ignored if the cloud-provider does not support the feature.\n+optional",
                    "type": "string"
                },
                "loadBalancerSourceRanges": {
                    "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.\"\nMore info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ports": {
                    "description": "The list of ports that are exposed by this service.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+patchMergeKey=port\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ServicePort"
                    }
                },
                "publishNotReadyAddresses": {
                    "description": "publishNotReadyAddresses, when set to true, indicates that DNS implementations\nmust publish the notReadyAddresses of subsets for the Endpoints associated with\nthe Service. The default value is false.\nThe primary use case for setting this field is to use a StatefulSet's Headless Service\nto propagate SRV records for its Pods without respect to their readiness for purpose\nof peer discovery.\n+optional",
                    "type": "boolean"
                },
                "selector": {
                    "description": "Route service traffic to pods with label keys and values matching this\nselector. If empty or not present, the service is assumed to have an\nexternal process managing its endpoints, which Kubernetes will not\nmodify. Only applies to types ClusterIP, NodePort, and LoadBalancer.\nIgnored if type is ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "sessionAffinity": {
                    "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity.\nEnable client IP based session affinity.\nMust be ClientIP or None.\nDefaults to None.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+optional",
                    "type": "string"
                },
                "sessionAffinityConfig": {
                    "description": "sessionAffinityConfig contains the configurations of session affinity.\n+optional",
                    "$ref": "#/definitions/v1.SessionAffinityConfig"
                },
                "type": {
                    "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid\noptions are ExternalName, ClusterIP, NodePort, and LoadBalancer.\n\"ExternalName\" maps to the specified externalName.\n\"ClusterIP\" allocates a cluster-internal IP address for load-balancing to\nendpoints. Endpoints are determined by the selector or if that is not\nspecified, by manual construction of an Endpoints object. If clusterIP is\n\"None\", no virtual IP is allocated and the endpoints are published as a\nset of endpoints rather than a stable IP.\n\"NodePort\" builds on ClusterIP and allocates a port on every node which\nroutes to the clusterIP.\n\"LoadBalancer\" builds on NodePort and creates an\nexternal load-balancer (if supported in the current cloud) which routes\nto the clusterIP.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ServiceStatus": {
            "type": "object",
            "properties": {
                "loadBalancer": {
                    "description": "LoadBalancer contains the current status of the load-balancer,\nif one is present.\n+optional",
                    "$ref": "#/definitions/v1.LoadBalancerStatus"
                }
            }
        },
        "v1.SessionAffinityConfig": {
            "type": "object",
            "properties": {
                "clientIP": {
                    "description": "clientIP contains the configurations of Client IP based session affinity.\n+optional",
                    "$ref": "#/definitions/v1.ClientIPConfig"
                }
            }
        },
        "v1.StatefulSet": {
            "type": "object",
            "properties": {
                "_created": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_modified": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "obj": {
                    "$ref": "#/definitions/v1.K8sStatefulSet"
                }
            }
        },
        "v1.StatefulSetCondition": {
            "type": "object",
            "properties": {
                "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.\n+optional",
                    "type": "string"
                },
                "message": {
                    "description": "A human readable message indicating details about the transition.\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "The reason for the condition's last transition.\n+optional",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the condition, one of True, False, Unknown.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of statefulset condition.",
                    "type": "string"
                }
            }
        },
        "v1.StatefulSetSpec": {
            "type": "object",
            "properties": {
                "podManagementPolicy": {
                    "description": "podManagementPolicy controls how pods are created during initial scale up,\nwhen replacing pods on nodes, or when scaling down. The default policy is\n` + "`" + `OrderedReady` + "`" + `, where pods are created in increasing order (pod-0, then\npod-1, etc) and the controller will wait until each pod is ready before\ncontinuing. When scaling down, the pods are removed in the opposite order.\nThe alternative policy is ` + "`" + `Parallel` + "`" + ` which will create pods in parallel\nto match the desired scale without waiting, and on scale down will Delete\nall pods at once.\n+optional",
                    "type": "string"
                },
                "replicas": {
                    "description": "replicas is the desired number of replicas of the given Template.\nThese are replicas in the sense that they are instantiations of the\nsame Template, but individual replicas also have a consistent identity.\nIf unspecified, defaults to 1.\nTODO: Consider a rename of this field.\n+optional",
                    "type": "integer"
                },
                "revisionHistoryLimit": {
                    "description": "revisionHistoryLimit is the maximum number of revisions that will\nbe maintained in the StatefulSet's revision history. The revision history\nconsists of all revisions not represented by a currently applied\nStatefulSetSpec version. The default value is 10.",
                    "type": "integer"
                },
                "selector": {
                    "description": "selector is a label query over pods that should match the replica count.\nIt must match the pod template's labels.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                    "$ref": "#/definitions/v1.LabelSelector"
                },
                "serviceName": {
                    "description": "serviceName is the name of the service that governs this StatefulSet.\nThis service must exist before the StatefulSet, and is responsible for\nthe network identity of the set. Pods get DNS/hostnames that follow the\npattern: pod-specific-string.serviceName.default.svc.cluster.local\nwhere \"pod-specific-string\" is managed by the StatefulSet controller.",
                    "type": "string"
                },
                "template": {
                    "description": "template is the object that describes the pod that will be created if\ninsufficient replicas are detected. Each pod stamped out by the StatefulSet\nwill fulfill this Template, but have a unique identity from the rest\nof the StatefulSet.",
                    "$ref": "#/definitions/v1.PodTemplateSpec"
                },
                "updateStrategy": {
                    "description": "updateStrategy indicates the StatefulSetUpdateStrategy that will be\nemployed to Update Pods in the StatefulSet when a revision is made to\nTemplate.",
                    "$ref": "#/definitions/v1.StatefulSetUpdateStrategy"
                },
                "volumeClaimTemplates": {
                    "description": "volumeClaimTemplates is a list of claims that pods are allowed to reference.\nThe StatefulSet controller is responsible for mapping network identities to\nclaims in a way that maintains the identity of a pod. Every claim in\nthis list must have at least one matching (by name) volumeMount in one\ncontainer in the template. A claim in this list takes precedence over\nany volumes in the template, with the same name.\nTODO: Define the behavior if a claim already exists with the same name.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.PersistentVolumeClaimStruct"
                    }
                }
            }
        },
        "v1.StatefulSetStatus": {
            "type": "object",
            "properties": {
                "collisionCount": {
                    "description": "collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller\nuses this field as a collision avoidance mechanism when it needs to create the name for the\nnewest ControllerRevision.\n+optional",
                    "type": "integer"
                },
                "conditions": {
                    "description": "Represents the latest available observations of a statefulset's current state.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.StatefulSetCondition"
                    }
                },
                "currentReplicas": {
                    "description": "currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version\nindicated by currentRevision.",
                    "type": "integer"
                },
                "currentRevision": {
                    "description": "currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the\nsequence [0,currentReplicas).",
                    "type": "string"
                },
                "observedGeneration": {
                    "description": "observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the\nStatefulSet's generation, which is updated on mutation by the API Server.\n+optional",
                    "type": "integer"
                },
                "readyReplicas": {
                    "description": "readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.",
                    "type": "integer"
                },
                "replicas": {
                    "description": "replicas is the number of Pods created by the StatefulSet controller.",
                    "type": "integer"
                },
                "updateRevision": {
                    "description": "updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence\n[replicas-updatedReplicas,replicas)",
                    "type": "string"
                },
                "updatedReplicas": {
                    "description": "updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version\nindicated by updateRevision.",
                    "type": "integer"
                }
            }
        },
        "v1.StatefulSetUpdateStrategy": {
            "type": "object",
            "properties": {
                "rollingUpdate": {
                    "description": "RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.\n+optional",
                    "$ref": "#/definitions/v1.RollingUpdateStatefulSetStrategy"
                },
                "type": {
                    "description": "Type indicates the type of the StatefulSetUpdateStrategy.\nDefault is RollingUpdate.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.Status": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "code": {
                    "description": "Suggested HTTP return code for this status, 0 if not set.\n+optional",
                    "type": "integer"
                },
                "continue": {
                    "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nconsistent list may not be possible if the server configuration has changed or more than a few\nminutes have passed. The resourceVersion field returned when using this continue value will be\nidentical to the value in the first response, unless you have received this token from an error\nmessage.",
                    "type": "string"
                },
                "details": {
                    "description": "Extended data associated with the reason.  Each reason may define its\nown extended details. This field is optional and the data returned\nis not guaranteed to conform to any schema except that defined by\nthe reason type.\n+optional",
                    "$ref": "#/definitions/v1.StatusDetails"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "message": {
                    "description": "A human-readable description of the status of this operation.\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "A machine-readable description of why this operation is in the\n\"Failure\" status. If this value is empty there\nis no information available. A Reason clarifies an HTTP status\ncode but does not override it.\n+optional",
                    "type": "string"
                },
                "resourceVersion": {
                    "description": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "selfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the operation.\nOne of: \"Success\" or \"Failure\".\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.StatusCause": {
            "type": "object",
            "properties": {
                "field": {
                    "description": "The field of the resource that has caused this error, as named by its JSON\nserialization. May include dot and postfix notation for nested attributes.\nArrays are zero-indexed.  Fields may appear more than once in an array of\ncauses due to fields having multiple errors.\nOptional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"\n+optional",
                    "type": "string"
                },
                "message": {
                    "description": "A human-readable description of the cause of the error.  This field may be\npresented as-is to a reader.\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "A machine-readable description of the cause of the error. If this value is\nempty there is no information available.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.StatusDetails": {
            "type": "object",
            "properties": {
                "causes": {
                    "description": "The Causes array includes more details associated with the StatusReason\nfailure. Not all StatusReasons may provide detailed causes.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.StatusCause"
                    }
                },
                "group": {
                    "description": "The group attribute of the resource associated with the status StatusReason.\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "The kind attribute of the resource associated with the status StatusReason.\nOn some operations may differ from the requested resource Kind.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "name": {
                    "description": "The name attribute of the resource associated with the status StatusReason\n(when there is a single name which can be described).\n+optional",
                    "type": "string"
                },
                "retryAfterSeconds": {
                    "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate\nthe client must take an alternate action - for those errors this field may indicate how long to wait\nbefore taking the alternate action.\n+optional",
                    "type": "integer"
                },
                "uid": {
                    "description": "UID of the resource.\n(when there is a single resource which can be described).\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.StorageOSPersistentVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "SecretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.\n+optional",
                    "$ref": "#/definitions/v1.ObjectReference"
                },
                "volumeName": {
                    "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace.",
                    "type": "string"
                },
                "volumeNamespace": {
                    "description": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.StorageOSVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
                    "type": "boolean"
                },
                "secretRef": {
                    "description": "SecretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.\n+optional",
                    "$ref": "#/definitions/v1.LocalObjectReference"
                },
                "volumeName": {
                    "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace.",
                    "type": "string"
                },
                "volumeNamespace": {
                    "description": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.Subject": {
            "type": "object",
            "properties": {
                "apiGroup": {
                    "description": "APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the object being referenced.",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.Sysctl": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of a property to set",
                    "type": "string"
                },
                "value": {
                    "description": "Value of a property to set",
                    "type": "string"
                }
            }
        },
        "v1.TCPSocketAction": {
            "type": "object",
            "properties": {
                "host": {
                    "description": "Optional: Host name to connect to, defaults to the pod IP.\n+optional",
                    "type": "string"
                },
                "port": {
                    "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                    "$ref": "#/definitions/intstr.IntOrString"
                }
            }
        },
        "v1.Toleration": {
            "type": "object",
            "properties": {
                "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n+optional",
                    "type": "string"
                },
                "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.\n+optional",
                    "type": "string"
                },
                "operator": {
                    "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.\n+optional",
                    "type": "string"
                },
                "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.\n+optional",
                    "type": "integer"
                },
                "value": {
                    "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.TypedLocalObjectReference": {
            "type": "object",
            "properties": {
                "apiGroup": {
                    "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is the type of resource being referenced",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of resource being referenced",
                    "type": "string"
                }
            }
        },
        "v1.Volume": {
            "type": "object",
            "properties": {
                "awsElasticBlockStore": {
                    "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional",
                    "$ref": "#/definitions/v1.AWSElasticBlockStoreVolumeSource"
                },
                "azureDisk": {
                    "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\n+optional",
                    "$ref": "#/definitions/v1.AzureDiskVolumeSource"
                },
                "azureFile": {
                    "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.\n+optional",
                    "$ref": "#/definitions/v1.AzureFileVolumeSource"
                },
                "cephfs": {
                    "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime\n+optional",
                    "$ref": "#/definitions/v1.CephFSVolumeSource"
                },
                "cinder": {
                    "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine\nMore info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md\n+optional",
                    "$ref": "#/definitions/v1.CinderVolumeSource"
                },
                "configMap": {
                    "description": "ConfigMap represents a configMap that should populate this volume\n+optional",
                    "$ref": "#/definitions/v1.ConfigMapVolumeSource"
                },
                "downwardAPI": {
                    "description": "DownwardAPI represents downward API about the pod that should populate this volume\n+optional",
                    "$ref": "#/definitions/v1.DownwardAPIVolumeSource"
                },
                "emptyDir": {
                    "description": "EmptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional",
                    "$ref": "#/definitions/v1.EmptyDirVolumeSource"
                },
                "fc": {
                    "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.\n+optional",
                    "$ref": "#/definitions/v1.FCVolumeSource"
                },
                "flexVolume": {
                    "description": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.\n+optional",
                    "$ref": "#/definitions/v1.FlexVolumeSource"
                },
                "flocker": {
                    "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running\n+optional",
                    "$ref": "#/definitions/v1.FlockerVolumeSource"
                },
                "gcePersistentDisk": {
                    "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional",
                    "$ref": "#/definitions/v1.GCEPersistentDiskVolumeSource"
                },
                "gitRepo": {
                    "description": "GitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.\n+optional",
                    "$ref": "#/definitions/v1.GitRepoVolumeSource"
                },
                "glusterfs": {
                    "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md\n+optional",
                    "$ref": "#/definitions/v1.GlusterfsVolumeSource"
                },
                "hostPath": {
                    "description": "HostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n---\nTODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not\nmount host directories as read/write.\n+optional",
                    "$ref": "#/definitions/v1.HostPathVolumeSource"
                },
                "iscsi": {
                    "description": "ISCSI represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md\n+optional",
                    "$ref": "#/definitions/v1.ISCSIVolumeSource"
                },
                "name": {
                    "description": "Volume's name.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "nfs": {
                    "description": "NFS represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional",
                    "$ref": "#/definitions/v1.NFSVolumeSource"
                },
                "persistentVolumeClaim": {
                    "description": "PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n+optional",
                    "$ref": "#/definitions/v1.PersistentVolumeClaimVolumeSource"
                },
                "photonPersistentDisk": {
                    "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                    "$ref": "#/definitions/v1.PhotonPersistentDiskVolumeSource"
                },
                "portworxVolume": {
                    "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine\n+optional",
                    "$ref": "#/definitions/v1.PortworxVolumeSource"
                },
                "projected": {
                    "description": "Items for all in one resources secrets, configmaps, and downward API",
                    "$ref": "#/definitions/v1.ProjectedVolumeSource"
                },
                "quobyte": {
                    "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime\n+optional",
                    "$ref": "#/definitions/v1.QuobyteVolumeSource"
                },
                "rbd": {
                    "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md\n+optional",
                    "$ref": "#/definitions/v1.RBDVolumeSource"
                },
                "scaleIO": {
                    "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\n+optional",
                    "$ref": "#/definitions/v1.ScaleIOVolumeSource"
                },
                "secret": {
                    "description": "Secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional",
                    "$ref": "#/definitions/v1.SecretVolumeSource"
                },
                "storageos": {
                    "description": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.\n+optional",
                    "$ref": "#/definitions/v1.StorageOSVolumeSource"
                },
                "vsphereVolume": {
                    "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine\n+optional",
                    "$ref": "#/definitions/v1.VsphereVirtualDiskVolumeSource"
                }
            }
        },
        "v1.VolumeDevice": {
            "type": "object",
            "properties": {
                "devicePath": {
                    "description": "devicePath is the path inside of the container that the device will be mapped to.",
                    "type": "string"
                },
                "name": {
                    "description": "name must match the name of a persistentVolumeClaim in the pod",
                    "type": "string"
                }
            }
        },
        "v1.VolumeMount": {
            "type": "object",
            "properties": {
                "mountPath": {
                    "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                    "type": "string"
                },
                "mountPropagation": {
                    "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\n+optional",
                    "type": "string"
                },
                "name": {
                    "description": "This must match the Name of a Volume.",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional",
                    "type": "boolean"
                },
                "subPath": {
                    "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.VolumeNodeAffinity": {
            "type": "object",
            "properties": {
                "required": {
                    "description": "Required specifies hard node constraints that must be met.",
                    "$ref": "#/definitions/v1.NodeSelector"
                }
            }
        },
        "v1.VolumeProjection": {
            "type": "object",
            "properties": {
                "configMap": {
                    "description": "information about the configMap data to project\n+optional",
                    "$ref": "#/definitions/v1.ConfigMapProjection"
                },
                "downwardAPI": {
                    "description": "information about the downwardAPI data to project\n+optional",
                    "$ref": "#/definitions/v1.DownwardAPIProjection"
                },
                "secret": {
                    "description": "information about the secret data to project\n+optional",
                    "$ref": "#/definitions/v1.SecretProjection"
                },
                "serviceAccountToken": {
                    "description": "information about the serviceAccountToken data to project\n+optional",
                    "$ref": "#/definitions/v1.ServiceAccountTokenProjection"
                }
            }
        },
        "v1.VsphereVirtualDiskVolumeSource": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional",
                    "type": "string"
                },
                "storagePolicyID": {
                    "description": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.\n+optional",
                    "type": "string"
                },
                "storagePolicyName": {
                    "description": "Storage Policy Based Management (SPBM) profile name.\n+optional",
                    "type": "string"
                },
                "volumePath": {
                    "description": "Path that identifies vSphere volume vmdk",
                    "type": "string"
                }
            }
        },
        "v1.WeightedPodAffinityTerm": {
            "type": "object",
            "properties": {
                "podAffinityTerm": {
                    "description": "Required. A pod affinity term, associated with the corresponding weight.",
                    "$ref": "#/definitions/v1.PodAffinityTerm"
                },
                "weight": {
                    "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                    "type": "integer"
                }
            }
        },
        "v1.X509Subject": {
            "type": "object",
            "properties": {
                "countries": {
                    "description": "Countries to be used on the Certificate.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "localities": {
                    "description": "Cities to be used on the Certificate.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "organizationalUnits": {
                    "description": "Organizational Units to be used on the Certificate.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "organizations": {
                    "description": "Organizations to be used on the Certificate.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "postalCodes": {
                    "description": "Postal codes to be used on the Certificate.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provinces": {
                    "description": "State/Provinces to be used on the Certificate.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serialNumber": {
                    "description": "Serial number to be used on the Certificate.\n+optional",
                    "type": "string"
                },
                "streetAddresses": {
                    "description": "Street addresses to be used on the Certificate.\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.k8sClusterRoleBinding": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or Update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
                    "$ref": "#/definitions/v1.Initializers"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "roleRef": {
                    "$ref": "#/definitions/v1.RoleRef"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
                    "type": "string"
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Subject"
                    }
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Klovercloud-ci-light-house-query API",
	Description: "Klovercloud-light-house-query API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
